package com.upokecenter.mail;
//------
// <auto-generated>
// </auto-generated>
//------

  final class HeaderParser {
private HeaderParser() {
}
    public static int ParseAddrSpec(String str, int index, int endIndex,
      ITokener tokener) {
      int indexStart, state, tx2;
      indexStart = index;
      state = (tokener != null) ? tokener.GetState() : 0;
      do {
        tx2 = ParseLocalPart (str, index, endIndex, tokener);
        if (tx2 == index) {
          break;
        }
        index = tx2;
        if (index < endIndex && (str.charAt(index) == 64)) {
          ++index;
        } else {
          index = indexStart;
          break;
        }
        index = ParseCFWS (str, index, endIndex, tokener);
        tx2 = ParseDomainCore (str, index, endIndex, tokener);
        if (tx2 == index) {
          index = indexStart;
          break;
        }
        index = tx2;
        index = ParseCFWS (str, index, endIndex, tokener);
      } while (false);
      if (tokener != null && index == indexStart) {
        tokener.RestoreState (state);
      }
      return index;
    }
    public static int ParseAddress(String str, int index, int endIndex,
      ITokener tokener) {
      int indexStart, indexTemp2, state;
      indexStart = index;
      state = (tokener != null) ? tokener.GetState() : 0;
      do {
        indexTemp2 = ParseMailbox (str, index, endIndex, tokener);
        if (indexTemp2 != index) {
          index = indexTemp2;
          break;
        }
        indexTemp2 = ParseGroup (str, index, endIndex, tokener);
        if (indexTemp2 != index) {
          index = indexTemp2;
          break;
        }
      } while (false);
      if (tokener != null && index == indexStart) {
        tokener.RestoreState (state);
      }
      return index;
    }
    public static int ParseAddressList(String str, int index, int endIndex,
      ITokener tokener) {
      int indexStart, indexStart2, indexTemp2, indexTemp3, indexTemp4, state,
          state2, tx2;
      indexStart = index;
      state = (tokener != null) ? tokener.GetState() : 0;
      do {
        while (true) {
          state2 = (tokener != null) ? tokener.GetState() : 0;
          indexTemp2 = index;
          do {
            indexStart2 = index;
            index = ParseCFWS (str, index, endIndex, tokener);
            if (index < endIndex && (str.charAt(index) == 44)) {
              ++index;
            } else {
              index = indexStart2;
              break;
            }
            indexTemp2 = index;
            index = indexStart2;
          } while (false);
          if (indexTemp2 != index) {
            index = indexTemp2;
          } else {
            if (tokener != null) {
              tokener.RestoreState (state2);
            }
            break;
          }
        }
        tx2 = ParseAddress (str, index, endIndex, tokener);
        if (tx2 == index) {
          index = indexStart;
          break;
        }
        index = tx2;
        while (true) {
          state2 = (tokener != null) ? tokener.GetState() : 0;
          indexTemp2 = index;
          do {
            indexStart2 = index;
            if (index < endIndex && (str.charAt(index) == 44)) {
              ++index;
            } else {
              break;
            }
            do {
              indexTemp3 = index;
              do {
                indexTemp4 = ParseAddress (str, index, endIndex, tokener);
                if (indexTemp4 != index) {
                  indexTemp3 = indexTemp4;
                  break;
                }
                indexTemp4 = ParseCFWS (str, index, endIndex, tokener);
                if (indexTemp4 != index) {
                  indexTemp3 = indexTemp4;
                  break;
                }
              } while (false);
              if (indexTemp3 != index) {
                index = indexTemp3;
              } else {
                break;
              }
            } while (false);
            indexTemp2 = index;
            index = indexStart2;
          } while (false);
          if (indexTemp2 != index) {
            index = indexTemp2;
          } else {
            if (tokener != null) {
              tokener.RestoreState (state2);
            }
            break;
          }
        }
      } while (false);
      if (tokener != null && index == indexStart) {
        tokener.RestoreState (state);
      }
      return index;
    }
    public static int ParseAngleAddr(String str, int index, int endIndex,
      ITokener tokener) {
      int indexStart, state, tx2;
      indexStart = index;
      state = (tokener != null) ? tokener.GetState() : 0;
      do {
        index = ParseCFWS (str, index, endIndex, tokener);
        if (index < endIndex && (str.charAt(index) == 60)) {
          ++index;
        } else {
          index = indexStart;
          break;
        }
        index = ParseObsRoute (str, index, endIndex, tokener);
        tx2 = ParseLocalPart (str, index, endIndex, tokener);
        if (tx2 == index) {
          index = indexStart;
          break;
        }
        index = tx2;
        if (index < endIndex && (str.charAt(index) == 64)) {
          ++index;
        } else {
          index = indexStart;
          break;
        }
        index = ParseCFWS (str, index, endIndex, tokener);
        tx2 = ParseDomainCore (str, index, endIndex, tokener);
        if (tx2 == index) {
          index = indexStart;
          break;
        }
        index = tx2;
        index = ParseCFWS (str, index, endIndex, tokener);
        if (index < endIndex && (str.charAt(index) == 62)) {
          ++index;
        } else {
          index = indexStart;
          break;
        }
        index = ParseCFWS (str, index, endIndex, tokener);
      } while (false);
      if (tokener != null && index == indexStart) {
        tokener.RestoreState (state);
      }
      return index;
    }

    public static int ParseAtext(String str, int index, int endIndex,
      ITokener tokener) {
      if (index < endIndex && ((str.charAt(index) >= 65 && str.charAt(index) <= 90) ||
        (str.charAt(index) == 33) || (str.charAt(index) >= 35 && str.charAt(index) <= 39) ||
        (str.charAt(index)
          >= 42 && str.charAt(index) <= 43) || (str.charAt(index) == 45) || (str.charAt(index)
          >= 47 &&
          str.charAt(index) <= 57) || (str.charAt(index) == 61) || (str.charAt(index) == 63) ||
        (str.charAt(index)
          >= 94 && str.charAt(index) <= 126) || (str.charAt(index) >= 128 && str.charAt(index)
          <= 55295) || (str.charAt(index) >= 57344 && str.charAt(index) <= 65535))) {
        ++index;
      } else if (endIndex - index > 1 && ((str.charAt(index) >= 55296 && str.charAt(index) <=
        56319) && (str.charAt(index + 1) >= 56320 && str.charAt(index + 1) <= 57343))) {
        index += 2;
      }
      return index;
    }
    public static int ParseAtom(String str, int index, int endIndex, ITokener
      tokener) {
      int i, indexStart, indexTemp2, state;
      indexStart = index;
      state = (tokener != null) ? tokener.GetState() : 0;
      do {
        index = ParseCFWS (str, index, endIndex, tokener);
        for (i = 0; true; ++i) {
          indexTemp2 = ParseAtext (str, index, endIndex, tokener);
          if (indexTemp2 != index) {
            index = indexTemp2;
          } else {
            if (i < 1) {
              index = indexStart;
            }
            break;
          }
        }
        if (index == indexStart) {
          break;
        }
        index = ParseCFWS (str, index, endIndex, tokener);
      } while (false);
      if (tokener != null && index == indexStart) {
        tokener.RestoreState (state);
      }
      return index;
    }

    public static int ParseBase64Terminal(String str, int index, int
      endIndex,
      ITokener tokener) {
      int indexStart2, indexTemp2;
      do {
        indexTemp2 = index;
        do {
          indexStart2 = index;
          if (endIndex - index > 1 && (((str.charAt(index) >= 65 && str.charAt(index) <=
            90) || (str.charAt(index) >= 97 && str.charAt(index) <= 122) || (str.charAt(index) ==
              43) || (str.charAt(index)
              >= 47 && str.charAt(index) <= 57)) && ((str.charAt(index + 1) >= 65 &&
                str.charAt(index + 1) <=
                90) || (str.charAt(index + 1) >= 97 && str.charAt(index + 1) <= 122) ||
              (str.charAt(index + 1) ==
                43) || (str.charAt(index + 1) >= 47 && str.charAt(index + 1) <= 57)))) {
            index += 2;
          } else {
            break;
          }
          if (endIndex - index > 1 && str.charAt(index) == 61 && str.charAt(index + 1) ==
            61) {
            index += 2;
          } else {
            index = indexStart2;
            break;
          }
          indexTemp2 = index;
          index = indexStart2;
        } while (false);
        if (indexTemp2 != index) {
          index = indexTemp2;
          break;
        }
        indexTemp2 = index;
        do {
          indexStart2 = index;
          if (endIndex - index > 2 && (((str.charAt(index) >= 65 && str.charAt(index) <=
            90) || (str.charAt(index) >= 97 && str.charAt(index) <= 122) || (str.charAt(index) ==
              43) || (str.charAt(index)
              >= 47 && str.charAt(index) <= 57)) && ((str.charAt(index + 1) >= 65 &&
                str.charAt(index + 1) <=
                90) || (str.charAt(index + 1) >= 97 && str.charAt(index + 1) <= 122) ||
              (str.charAt(index + 1) ==
                43) || (str.charAt(index + 1) >= 47 && str.charAt(index + 1) <= 57))&&
            ((str.charAt(index + 2)
            >= 65 && str.charAt(index + 2) <= 90) || (str.charAt(index + 2) >= 97 &&
              str.charAt(index + 2) <=
              122) || (str.charAt(index + 2) == 43) || (str.charAt(index + 2) >= 47 &&
              str.charAt(index + 2) <= 57)))) {
            index += 3;
          } else {
            break;
          }
          if (index < endIndex && (str.charAt(index) == 61)) {
            ++index;
          } else {
            index = indexStart2;
            break;
          }
          indexTemp2 = index;
          index = indexStart2;
        } while (false);
        if (indexTemp2 != index) {
          index = indexTemp2;
          break;
        }
      } while (false);
      return index;
    }
    public static int ParseCFWS(String str, int index, int endIndex, ITokener
      tokener) {
      int i, i2, indexStart, indexStart2, indexStart3, indexTemp2, indexTemp3,
          state, state2, tx4;
      indexStart = index;
      state = (tokener != null) ? tokener.GetState() : 0;
      do {
        state2 = (tokener != null) ? tokener.GetState() : 0;
        indexTemp2 = index;
        do {
          indexStart2 = index;
          for (i2 = 0; true; ++i2) {
            indexTemp3 = index;
            do {
              indexStart3 = index;
              index = ParseFWS (str, index, endIndex, tokener);
              tx4 = HeaderParserUtility.ParseCommentLax (str, index,
                  endIndex, tokener);
              if (tx4 == index) {
                index = indexStart3;
                break;
              }
              index = tx4;
              indexTemp3 = index;
              index = indexStart3;
            } while (false);
            if (indexTemp3 != index) {
              index = indexTemp3;
            } else {
              if (i2 < 1) {
                index = indexStart2;
              }
              break;
            }
          }
          if (index == indexStart2) {
            break;
          }
          index = ParseFWS (str, index, endIndex, tokener);
          indexTemp2 = index;
          index = indexStart2;
        } while (false);
        if (indexTemp2 != index) {
          index = indexTemp2;
          break;
        }
        if (tokener != null) {
          tokener.RestoreState (state2);
        }
        for (i = 0; true; ++i) {
          indexTemp2 = ParseFWS (str, index, endIndex, tokener);
          if (indexTemp2 == index) {
            if (i < 1) {
              index = indexStart;
            }
            break;
          }
          index = indexTemp2;
        }
        index = indexStart;
        if (indexTemp2 != indexStart) {
          index = indexTemp2;
          break;
        }
      } while (false);
      if (tokener != null && index == indexStart) {
        tokener.RestoreState (state);
      }
      return index;
    }
    public static int ParseCKeyString(String str, int index, int endIndex,
      ITokener tokener) {
      int indexStart, indexTemp2, state;
      indexStart = index;
      state = (tokener != null) ? tokener.GetState() : 0;
      do {
        indexTemp2 = ParseCLockString (str, index, endIndex, tokener);
        if (indexTemp2 != index) {
          index = indexTemp2;
          break;
        }
        if (index < endIndex && ((str.charAt(index) >= 65 && str.charAt(index) <= 90) ||
          (str.charAt(index) >= 97 && str.charAt(index) <= 122) || (str.charAt(index) == 43) ||
          (str.charAt(index) >= 47 && str.charAt(index) <= 57) || (str.charAt(index) == 61))) {
          ++index;
          while (index < endIndex && ((str.charAt(index) >= 65 && str.charAt(index) <= 90) ||
            (str.charAt(index) >= 97 && str.charAt(index) <= 122) || (str.charAt(index) == 43) ||
            (str.charAt(index) >= 47 && str.charAt(index) <= 57) || (str.charAt(index) == 61))) {
            ++index;
          }
          break;
        }
      } while (false);
      if (tokener != null && index == indexStart) {
        tokener.RestoreState (state);
      }
      return index;
    }
    public static int ParseCLockString(String str, int index, int endIndex,
      ITokener tokener) {
      int indexStart, indexStart2, indexTemp2, state;
      indexStart = index;
      state = (tokener != null) ? tokener.GetState() : 0;
      do {
        while (true) {
          indexTemp2 = index;
          do {
            indexStart2 = index;
            if (endIndex - index > 3 && (((str.charAt(index) >= 65 && str.charAt(index) <=
              90) || (str.charAt(index) >= 97 && str.charAt(index) <= 122) || (str.charAt(index) ==
                43) || (str.charAt(index)
                >= 47 && str.charAt(index) <= 57)) && ((str.charAt(index + 1) >= 65 &&
                  str.charAt(index + 1) <=
                  90) || (str.charAt(index + 1) >= 97 && str.charAt(index + 1) <= 122) ||
                (str.charAt(index + 1) ==
                  43) || (str.charAt(index + 1) >= 47 && str.charAt(index + 1) <= 57))&&
              ((str.charAt(index + 2)
              >= 65 && str.charAt(index + 2) <= 90) || (str.charAt(index + 2) >= 97 &&
                str.charAt(index + 2) <=
                122) || (str.charAt(index + 2) == 43) || (str.charAt(index + 2) >= 47 &&
                str.charAt(index + 2) <=
                57)) && ((str.charAt(index + 3) >= 65 && str.charAt(index + 3) <= 90) ||
                (str.charAt(index + 3)
                  >= 97 && str.charAt(index + 3) <= 122) || (str.charAt(index + 3) ==
                  43) || (str.charAt(index + 3) >= 47 && str.charAt(index + 3) <= 57)))) {
              index += 4;
            } else {
              break;
            }
            indexTemp2 = index;
            index = indexStart2;
          } while (false);
          if (indexTemp2 != index) {
            index = indexTemp2;
          } else {
            break;
          }
        }
        index = ParseBase64Terminal (str, index, endIndex, tokener);
      } while (false);
      if (tokener != null && index == indexStart) {
        tokener.RestoreState (state);
      }
      return index;
    }
    public static int ParseDateTime(String str, int index, int endIndex,
      ITokener tokener) {
      int i, indexStart, indexStart2, indexTemp2, state, tx2;
      indexStart = index;
      state = (tokener != null) ? tokener.GetState() : 0;
      do {
        do {
          indexTemp2 = index;
          do {
            indexStart2 = index;
            index = ParseCFWS (str, index, endIndex, tokener);
            if (endIndex - index > 2 && (((str.charAt(index) & ~32) == 77 &&
              (str.charAt(index + 1) & ~32) == 79 && (str.charAt(index + 2) & ~32)
              == 78) || ((str.charAt(index) & ~32) == 84 &&
                (str.charAt(index + 1) & ~32) == 85 && (str.charAt(index + 2) & ~32) ==
                69) ||
              ((str.charAt(index) & ~32) == 87 && (str.charAt(index + 1) & ~32) == 69 &&
              (str.charAt(index + 2) & ~32) == 68) || ((str.charAt(index) & ~32) == 84 &&
                (str.charAt(index + 1) & ~32) == 72 &&
                (str.charAt(index + 2) & ~32) == 85) || ((str.charAt(index) & ~32) == 70 &&
                (str.charAt(index + 1) & ~32) == 82 && (str.charAt(index + 2) & ~32) == 73) ||
              ((str.charAt(index) & ~32) ==
              83 && (str.charAt(index + 1) & ~32) == 65 && (str.charAt(index + 2) & ~32)
              == 84) ||
              ((str.charAt(index) & ~32) == 83 && (str.charAt(index + 1) & ~32) == 85 &&
              (str.charAt(index + 2) & ~32) == 78))) {
              index += 3;
            } else {
              index = indexStart2;
              break;
            }
            index = ParseCFWS (str, index, endIndex, tokener);
            if (index < endIndex && (str.charAt(index) == 44)) {
              ++index;
            } else {
              index = indexStart2;
              break;
            }
            indexTemp2 = index;
            index = indexStart2;
          } while (false);
          if (indexTemp2 != index) {
            index = indexTemp2;
          } else {
            break;
          }
        } while (false);
        index = ParseCFWS (str, index, endIndex, tokener);
        for (i = 0; i < 2; ++i) {
          if (index < endIndex && (str.charAt(index) >= 48 && str.charAt(index) <= 57)) {
            ++index;
          } else if (i < 1) {
            index = indexStart;
            break;
          } else {
            break;
          }
        }
        if (index == indexStart) {
          break;
        }
        index = ParseCFWS (str, index, endIndex, tokener);
        if (endIndex - index > 2 && (((str.charAt(index) & ~32) == 74 &&
          (str.charAt(index + 1) & ~32) == 65 && (str.charAt(index + 2) & ~32) == 78) ||
          ((str.charAt(index) & ~32) == 70 &&
          (str.charAt(index + 1) & ~32) == 69 && (str.charAt(index + 2) & ~32) == 66) ||
          ((str.charAt(index) & ~32) == 77 && (str.charAt(index + 1) & ~32) == 65 &&
          (str.charAt(index + 2) & ~32) == 82) || ((str.charAt(index) & ~32) == 65 &&
            (str.charAt(index + 1) & ~32) == 80 &&
            (str.charAt(index + 2) & ~32) == 82) || ((str.charAt(index) & ~32) == 77 &&
            (str.charAt(index + 1) & ~32) == 65 && (str.charAt(index + 2) & ~32) == 89) ||
          ((str.charAt(index) & ~32) ==
          74 && (str.charAt(index + 1) & ~32) == 85 && (str.charAt(index + 2) & ~32)
          == 78) || ((str.charAt(index) & ~32) == 74 && (str.charAt(index + 1) & ~32) == 85 &&
            (str.charAt(index + 2) & ~32) == 76) || ((str.charAt(index) & ~32) == 65 &&
            (str.charAt(index + 1) & ~32) == 85 &&
            (str.charAt(index + 2) & ~32) == 71) || ((str.charAt(index) & ~32) == 83 &&
            (str.charAt(index + 1) & ~32) == 69 && (str.charAt(index + 2) & ~32) == 80) ||
          ((str.charAt(index) & ~32) ==
          79 && (str.charAt(index + 1) & ~32) == 67 && (str.charAt(index + 2) & ~32)
          == 84) || ((str.charAt(index) & ~32) == 78 && (str.charAt(index + 1) & ~32) == 79 &&
            (str.charAt(index + 2) & ~32) == 86) || ((str.charAt(index) & ~32) == 68 &&
            (str.charAt(index + 1) & ~32) == 69 && (str.charAt(index + 2) & ~32) == 67))) {
          index += 3;
        } else {
          index = indexStart;
          break;
        }
        index = ParseCFWS (str, index, endIndex, tokener);
        if (endIndex - index > 1 && ((str.charAt(index) >= 48 && str.charAt(index) <= 57) &&
          (str.charAt(index + 1) >= 48 && str.charAt(index + 1) <= 57))) {
          index += 2;
        } else {
          index = indexStart;
          break;
        }
        while (index < endIndex && (str.charAt(index) >= 48 && str.charAt(index) <= 57)) {
          ++index;
        }
        index = ParseCFWS (str, index, endIndex, tokener);
        index = ParseCFWS (str, index, endIndex, tokener);
        if (endIndex - index > 1 && ((str.charAt(index) >= 48 && str.charAt(index) <= 57) &&
          (str.charAt(index + 1) >= 48 && str.charAt(index + 1) <= 57))) {
          index += 2;
        } else {
          index = indexStart;
          break;
        }
        index = ParseCFWS (str, index, endIndex, tokener);
        if (index < endIndex && (str.charAt(index) == 58)) {
          ++index;
        } else {
          index = indexStart;
          break;
        }
        index = ParseCFWS (str, index, endIndex, tokener);
        if (endIndex - index > 1 && ((str.charAt(index) >= 48 && str.charAt(index) <= 57) &&
          (str.charAt(index + 1) >= 48 && str.charAt(index + 1) <= 57))) {
          index += 2;
        } else {
          index = indexStart;
          break;
        }
        do {
          indexTemp2 = index;
          do {
            indexStart2 = index;
            index = ParseCFWS (str, index, endIndex, tokener);
            if (index < endIndex && (str.charAt(index) == 58)) {
              ++index;
            } else {
              index = indexStart2;
              break;
            }
            index = ParseCFWS (str, index, endIndex, tokener);
            if (endIndex - index > 1 && ((str.charAt(index) >= 48 && str.charAt(index) <=
              57) && (str.charAt(index + 1) >= 48 && str.charAt(index + 1) <= 57))) {
              index += 2;
            } else {
              index = indexStart2;
              break;
            }
            indexTemp2 = index;
            index = indexStart2;
          } while (false);
          if (indexTemp2 != index) {
            index = indexTemp2;
          } else {
            break;
          }
        } while (false);
        tx2 = ParseZone (str, index, endIndex, tokener);
        if (tx2 == index) {
          index = indexStart;
          break;
        }
        index = tx2;
        index = ParseCFWS (str, index, endIndex, tokener);
      } while (false);
      if (tokener != null && index == indexStart) {
        tokener.RestoreState (state);
      }
      return index;
    }
    public static int ParseDesignator(String str, int index, int endIndex,
      ITokener tokener) {
      return ParseMilitaryString (str, index, endIndex, tokener);
    }

    public static int ParseDiagIdentity(String str, int index, int
      endIndex,
      ITokener tokener) {
      int i2, i4, indexStart2, indexStart3, indexStart4, indexTemp2, indexTemp3,
          indexTemp4, indexTemp5;
      do {
        indexTemp2 = index;
        do {
          indexStart2 = index;
          for (i2 = 0; true; ++i2) {
            indexTemp3 = index;
            do {
              indexStart3 = index;
              if (index < endIndex && ((str.charAt(index) >= 65 && str.charAt(index) <= 90) ||
                (str.charAt(index) >= 97 && str.charAt(index) <= 122) || (str.charAt(index) >=
                48 && str.charAt(index) <= 57))) {
                ++index;
              } else {
                break;
              }
              while (true) {
                indexTemp4 = index;
                if (endIndex - index > 1 && ((str.charAt(index) == 45) &&
                  ((str.charAt(index + 1) >= 65 &&
                  str.charAt(index + 1) <= 90) || (str.charAt(index + 1) >= 97 &&
                    str.charAt(index + 1) <= 122) ||
                  (str.charAt(index + 1) >= 48 && str.charAt(index + 1) <= 57)))) {
                  indexTemp4 += 2;
                } else if (index < endIndex && ((str.charAt(index) >= 65 &&
                  str.charAt(index) <= 90) ||
                  (str.charAt(index) >= 97 && str.charAt(index) <= 122) || (str.charAt(index)
                  >= 48 && str.charAt(index) <= 57))) {
                  ++indexTemp4;
                }
                if (indexTemp4 != index) {
                  index = indexTemp4;
                } else {
                  break;
                }
              }
              if (index < endIndex && (str.charAt(index) == 46)) {
                ++index;
              } else {
                index = indexStart3;
                break;
              }
              indexTemp3 = index;
              index = indexStart3;
            } while (false);
            if (indexTemp3 != index) {
              index = indexTemp3;
            } else {
              if (i2 < 1) {
                index = indexStart2;
              }
              break;
            }
          }
          if (index == indexStart2) {
            break;
          }
          do {
            indexTemp3 = index;
            do {
              indexTemp4 = index;
              do {
                indexStart4 = index;
                if (index < endIndex && ((str.charAt(index) >= 65 && str.charAt(index) <=
                  90) || (str.charAt(index) >= 97 && str.charAt(index) <= 122))) {
                  ++index;
                } else {
                  break;
                }
                for (i4 = 0; true; ++i4) {
                  indexTemp5 = index;
                  if (endIndex - index > 1 && ((str.charAt(index) == 45) &&
                    ((str.charAt(index + 1) >= 65 &&
                    str.charAt(index + 1) <= 90) || (str.charAt(index + 1) >= 97 &&
                      str.charAt(index + 1) <= 122) ||
                    (str.charAt(index + 1) >= 48 && str.charAt(index + 1) <= 57)))) {
                    indexTemp5 += 2;
                  } else if (index < endIndex && ((str.charAt(index) >= 65 &&
                    str.charAt(index) <= 90) ||
                    (str.charAt(index) >= 97 && str.charAt(index) <= 122) || (str.charAt(index)
                    >= 48 && str.charAt(index) <= 57))) {
                    ++indexTemp5;
                  }
                  if (indexTemp5 != index) {
                    index = indexTemp5;
                  } else {
                    if (i4 < 1) {
                      index = indexStart4;
                    }
                    break;
                  }
                }
                if (index == indexStart4) {
                  break;
                }
                indexTemp4 = index;
                index = indexStart4;
              } while (false);
              if (indexTemp4 != index) {
                indexTemp3 = indexTemp4;
                break;
              }
              indexTemp4 = index;
              do {
                indexStart4 = index;
                if (index < endIndex && (str.charAt(index) >= 48 && str.charAt(index) <=
                  57)) {
                  ++index;
                } else {
                  break;
                }
                while (index < endIndex && ((str.charAt(index) >= 48 && str.charAt(index)
                  <= 57) || (str.charAt(index) == 45))) {
                  ++index;
                }
                if (index < endIndex && ((str.charAt(index) >= 65 && str.charAt(index) <=
                  90) || (str.charAt(index) >= 97 && str.charAt(index) <= 122))) {
                  ++index;
                } else {
                  index = indexStart4;
                  break;
                }
                while (true) {
                  indexTemp5 = index;
                  if (endIndex - index > 1 && ((str.charAt(index) == 45) &&
                    ((str.charAt(index + 1) >= 65 &&
                    str.charAt(index + 1) <= 90) || (str.charAt(index + 1) >= 97 &&
                      str.charAt(index + 1) <= 122) ||
                    (str.charAt(index + 1) >= 48 && str.charAt(index + 1) <= 57)))) {
                    indexTemp5 += 2;
                  } else if (index < endIndex && ((str.charAt(index) >= 65 &&
                    str.charAt(index) <= 90) ||
                    (str.charAt(index) >= 97 && str.charAt(index) <= 122) || (str.charAt(index)
                    >= 48 && str.charAt(index) <= 57))) {
                    ++indexTemp5;
                  }
                  if (indexTemp5 != index) {
                    index = indexTemp5;
                  } else {
                    break;
                  }
                }
                indexTemp4 = index;
                index = indexStart4;
              } while (false);
              if (indexTemp4 != index) {
                indexTemp3 = indexTemp4;
                break;
              }
            } while (false);
            if (indexTemp3 != index) {
              index = indexTemp3;
            } else {
              index = indexStart2;
              break;
            }
          } while (false);
          if (index == indexStart2) {
            break;
          }
          indexTemp2 = index;
          index = indexStart2;
        } while (false);
        if (indexTemp2 != index) {
          index = indexTemp2;
          break;
        }
        if (index < endIndex && ((str.charAt(index) >= 65 && str.charAt(index) <= 90) ||
          (str.charAt(index) >= 97 && str.charAt(index) <= 122) || (str.charAt(index) >= 48 &&
          str.charAt(index) <= 57) || (str.charAt(index) == 45) || (str.charAt(index) == 95))) {
          ++index;
          while (index < endIndex && ((str.charAt(index) >= 65 && str.charAt(index) <= 90) ||
            (str.charAt(index) >= 97 && str.charAt(index) <= 122) || (str.charAt(index) >= 48 &&
            str.charAt(index) <= 57) || (str.charAt(index) == 45) || (str.charAt(index) == 95))) {
            ++index;
          }
          break;
        }
        // Unlimited production in choice
      } while (false);
      return index;
    }
    public static int ParseDisplayName(String str, int index, int endIndex,
      ITokener tokener) {
      return ParsePhrase (str, index, endIndex, tokener);
    }

    public static int ParseDistName(String str, int index, int endIndex,
      ITokener tokener) {
      int indexStart2, indexTemp2;
      do {
        if (index < endIndex && ((str.charAt(index) >= 65 && str.charAt(index) <= 90) ||
          (str.charAt(index) >= 97 && str.charAt(index) <= 122))) {
          ++index;
          break;
        }
        indexTemp2 = index;
        do {
          indexStart2 = index;
          if (index < endIndex && (str.charAt(index) >= 48 && str.charAt(index) <= 57)) {
            ++index;
          } else {
            break;
          }
          while (index < endIndex && ((str.charAt(index) >= 65 && str.charAt(index) <= 90) ||
            (str.charAt(index) >= 97 && str.charAt(index) <= 122) || (str.charAt(index) >= 48 &&
            str.charAt(index) <= 57) || (str.charAt(index) == 43) || (str.charAt(index) == 45) ||
            (str.charAt(index) == 95))) {
            ++index;
          }
          indexTemp2 = index;
          index = indexStart2;
        } while (false);
        if (indexTemp2 != index) {
          index = indexTemp2;
          break;
        }
      } while (false);
      return index;
    }
    public static int ParseDomain(String str, int index, int endIndex, ITokener
      tokener) {
      int indexStart, state, tx2;
      indexStart = index;
      state = (tokener != null) ? tokener.GetState() : 0;
      do {
        index = ParseCFWS (str, index, endIndex, tokener);
        tx2 = ParseDomainCore (str, index, endIndex, tokener);
        if (tx2 == index) {
          index = indexStart;
          break;
        }
        index = tx2;
        index = ParseCFWS (str, index, endIndex, tokener);
      } while (false);
      if (tokener != null && index == indexStart) {
        tokener.RestoreState (state);
      }
      return index;
    }
    public static int ParseDomainCore(String str, int index, int endIndex,
      ITokener tokener) {
      int i2, i3, indexStart, indexStart2, indexStart3, indexTemp2, indexTemp3,
          indexTemp4, state, state2, state3;
      indexStart = index;
      state = (tokener != null) ? tokener.GetState() : 0;
      do {
        indexTemp2 = ParseDomainLiteralCore (str, index, endIndex, tokener);
        if (indexTemp2 != index) {
          index = indexTemp2;
          break;
        }
        state2 = (tokener != null) ? tokener.GetState() : 0;
        indexTemp2 = index;
        do {
          indexStart2 = index;
          for (i2 = 0; true; ++i2) {
            indexTemp3 = ParseAtext (str, index, endIndex, tokener);
            if (indexTemp3 != index) {
              index = indexTemp3;
            } else {
              if (i2 < 1) {
                index = indexStart2;
              }
              break;
            }
          }
          if (index == indexStart2) {
            break;
          }
          while (true) {
            state3 = (tokener != null) ? tokener.GetState() : 0;
            indexTemp3 = index;
            do {
              indexStart3 = index;
              index = ParseCFWS (str, index, endIndex, tokener);
              if (index < endIndex && (str.charAt(index) == 46)) {
                ++index;
              } else {
                index = indexStart3;
                break;
              }
              index = ParseCFWS (str, index, endIndex, tokener);
              for (i3 = 0; true; ++i3) {
                indexTemp4 = ParseAtext (str, index, endIndex, tokener);
                if (indexTemp4 != index) {
                  index = indexTemp4;
                } else {
                  if (i3 < 1) {
                    index = indexStart3;
                  }
                  break;
                }
              }
              if (index == indexStart3) {
                break;
              }
              indexTemp3 = index;
              index = indexStart3;
            } while (false);
            if (indexTemp3 != index) {
              index = indexTemp3;
            } else {
              if (tokener != null) {
                tokener.RestoreState (state3);
              }
              break;
            }
          }
          indexTemp2 = index;
          index = indexStart2;
        } while (false);
        if (indexTemp2 != index) {
          index = indexTemp2;
          break;
        }
        if (tokener != null) {
          tokener.RestoreState (state2);
        }
      } while (false);
      if (tokener != null) {
        if (index == indexStart) {
          tokener.RestoreState (state);
        } else {
          tokener.Commit (8, indexStart, index);
        }
      }
      return index;
    }
    public static int ParseDomainLiteralCore(String str, int index, int
      endIndex, ITokener tokener) {
      int indexStart, indexStart2, indexTemp2, state, state2, tx3;
      indexStart = index;
      state = (tokener != null) ? tokener.GetState() : 0;
      do {
        if (index < endIndex && (str.charAt(index) == 91)) {
          ++index;
        } else {
          break;
        }
        while (true) {
          state2 = (tokener != null) ? tokener.GetState() : 0;
          indexTemp2 = index;
          do {
            indexStart2 = index;
            index = ParseFWS (str, index, endIndex, tokener);
            tx3 = ParseDtext (str, index, endIndex, tokener);
            if (tx3 == index) {
              index = indexStart2;
              break;
            }
            index = tx3;
            indexTemp2 = index;
            index = indexStart2;
          } while (false);
          if (indexTemp2 != index) {
            index = indexTemp2;
          } else {
            if (tokener != null) {
              tokener.RestoreState (state2);
            }
            break;
          }
        }
        index = ParseFWS (str, index, endIndex, tokener);
        if (index < endIndex && (str.charAt(index) == 93)) {
          ++index;
        } else {
          index = indexStart;
          break;
        }
      } while (false);
      if (tokener != null && index == indexStart) {
        tokener.RestoreState (state);
      }
      return index;
    }
    public static int ParseDomainName(String str, int index, int endIndex,
      ITokener tokener) {
      int i, indexStart, indexStart2, indexTemp2, state;
      indexStart = index;
      state = (tokener != null) ? tokener.GetState() : 0;
      do {
        if (index < endIndex && ((str.charAt(index) >= 65 && str.charAt(index) <= 90) ||
          (str.charAt(index) >= 97 && str.charAt(index) <= 122) || (str.charAt(index) >= 48 &&
          str.charAt(index) <= 57))) {
          ++index;
        } else {
          break;
        }
        index = ParseLdhStr (str, index, endIndex, tokener);
        for (i = 0; true; ++i) {
          indexTemp2 = index;
          do {
            indexStart2 = index;
            if (endIndex - index > 1 && (str.charAt(index) == 46) && ((str.charAt(index +
              1) >= 65 && str.charAt(index + 1) <= 90) || (str.charAt(index + 1) >= 97 &&
                str.charAt(index + 1) <= 122) ||
              (str.charAt(index + 1) >= 48 && str.charAt(index + 1) <= 57))) {
              index += 2;
            } else {
              break;
            }
            index = ParseLdhStr (str, index, endIndex, tokener);
            indexTemp2 = index;
            index = indexStart2;
          } while (false);
          if (indexTemp2 != index) {
            index = indexTemp2;
          } else {
            if (i < 1) {
              index = indexStart;
            }
            break;
          }
        }
        if (index == indexStart) {
          break;
        }
      } while (false);
      if (tokener != null && index == indexStart) {
        tokener.RestoreState (state);
      }
      return index;
    }
    public static int ParseDomainNoCfws(String str, int index, int endIndex,
      ITokener tokener) {
      int indexStart, indexStart2, indexTemp2, indexTemp3, indexTemp4, state;
      indexStart = index;
      state = (tokener != null) ? tokener.GetState() : 0;
      do {
        indexTemp2 = ParseDotAtomText (str, index, endIndex, tokener);
        if (indexTemp2 != index) {
          index = indexTemp2;
          break;
        }
        indexTemp2 = index;
        do {
          indexStart2 = index;
          if (index < endIndex && (str.charAt(index) == 91)) {
            ++index;
          } else {
            break;
          }
          while (true) {
            indexTemp3 = index;
            do {
              if (index < endIndex && ((str.charAt(index) >= 33 && str.charAt(index) <= 90) ||
                (str.charAt(index) >= 94 && str.charAt(index) <= 126))) {
                ++indexTemp3;
                break;
              }
              indexTemp4 = index;
              if (index < endIndex && ((str.charAt(index) >= 128 && str.charAt(index) <=
                55295) || (str.charAt(index) >= 57344 && str.charAt(index) <= 65535))) {
                ++indexTemp4;
              } else if (endIndex - index > 1 && ((str.charAt(index) >= 55296 &&
                str.charAt(index) <=
                56319) && (str.charAt(index + 1) >= 56320 && str.charAt(index + 1) <=
                  57343))) {
                indexTemp4 += 2;
              }
              if (indexTemp4 != index) {
                indexTemp3 = indexTemp4;
                break;
              }
            } while (false);
            if (indexTemp3 != index) {
              index = indexTemp3;
            } else {
              break;
            }
          }
          if (index < endIndex && (str.charAt(index) == 93)) {
            ++index;
          } else {
            index = indexStart2;
            break;
          }
          indexTemp2 = index;
          index = indexStart2;
        } while (false);
        if (indexTemp2 != index) {
          index = indexTemp2;
          break;
        }
      } while (false);
      if (tokener != null && index == indexStart) {
        tokener.RestoreState (state);
      }
      return index;
    }
    public static int ParseDotAtom(String str, int index, int endIndex,
      ITokener tokener) {
      int i, i2, indexStart, indexStart2, indexTemp2, indexTemp3, state, state2;
      indexStart = index;
      state = (tokener != null) ? tokener.GetState() : 0;
      do {
        index = ParseCFWS (str, index, endIndex, tokener);
        for (i = 0; true; ++i) {
          indexTemp2 = ParseAtext (str, index, endIndex, tokener);
          if (indexTemp2 != index) {
            index = indexTemp2;
          } else {
            if (i < 1) {
              index = indexStart;
            }
            break;
          }
        }
        if (index == indexStart) {
          break;
        }
        while (true) {
          state2 = (tokener != null) ? tokener.GetState() : 0;
          indexTemp2 = index;
          do {
            indexStart2 = index;
            if (index < endIndex && (str.charAt(index) == 46)) {
              ++index;
            } else {
              break;
            }
            for (i2 = 0; true; ++i2) {
              indexTemp3 = ParseAtext (str, index, endIndex, tokener);
              if (indexTemp3 != index) {
                index = indexTemp3;
              } else {
                if (i2 < 1) {
                  index = indexStart2;
                }
                break;
              }
            }
            if (index == indexStart2) {
              break;
            }
            indexTemp2 = index;
            index = indexStart2;
          } while (false);
          if (indexTemp2 != index) {
            index = indexTemp2;
          } else {
            if (tokener != null) {
              tokener.RestoreState (state2);
            }
            break;
          }
        }
        index = ParseCFWS (str, index, endIndex, tokener);
      } while (false);
      if (tokener != null && index == indexStart) {
        tokener.RestoreState (state);
      }
      return index;
    }
    public static int ParseDotAtomText(String str, int index, int endIndex,
      ITokener tokener) {
      int i, i2, indexStart, indexStart2, indexTemp2, indexTemp3, state, state2;
      indexStart = index;
      state = (tokener != null) ? tokener.GetState() : 0;
      do {
        for (i = 0; true; ++i) {
          indexTemp2 = ParseAtext (str, index, endIndex, tokener);
          if (indexTemp2 != index) {
            index = indexTemp2;
          } else {
            if (i < 1) {
              index = indexStart;
            }
            break;
          }
        }
        if (index == indexStart) {
          break;
        }
        while (true) {
          state2 = (tokener != null) ? tokener.GetState() : 0;
          indexTemp2 = index;
          do {
            indexStart2 = index;
            if (index < endIndex && (str.charAt(index) == 46)) {
              ++index;
            } else {
              break;
            }
            for (i2 = 0; true; ++i2) {
              indexTemp3 = ParseAtext (str, index, endIndex, tokener);
              if (indexTemp3 != index) {
                index = indexTemp3;
              } else {
                if (i2 < 1) {
                  index = indexStart2;
                }
                break;
              }
            }
            if (index == indexStart2) {
              break;
            }
            indexTemp2 = index;
            index = indexStart2;
          } while (false);
          if (indexTemp2 != index) {
            index = indexTemp2;
          } else {
            if (tokener != null) {
              tokener.RestoreState (state2);
            }
            break;
          }
        }
      } while (false);
      if (tokener != null && index == indexStart) {
        tokener.RestoreState (state);
      }
      return index;
    }
    public static int ParseDtext(String str, int index, int endIndex, ITokener
      tokener) {
      int indexStart, indexTemp2, state;
      indexStart = index;
      state = (tokener != null) ? tokener.GetState() : 0;
      do {
        if (index < endIndex && ((str.charAt(index) >= 33 && str.charAt(index) <= 90) ||
          (str.charAt(index) >= 1 && str.charAt(index) <= 8) || (str.charAt(index) >= 11 &&
          str.charAt(index) <= 12) || (str.charAt(index) >= 14 && str.charAt(index) <= 31))) {
          ++index;
          break;
        }
        indexTemp2 = ParseQuotedPair (str, index, endIndex, tokener);
        if (indexTemp2 != index) {
          index = indexTemp2;
          break;
        }
        if (index < endIndex && ((str.charAt(index) >= 94 && str.charAt(index) <= 55295) ||
          (str.charAt(index) >= 57344 && str.charAt(index) <= 65535))) {
          ++index;
          break;
        }
        if (endIndex - index > 1 && ((str.charAt(index) >= 55296 && str.charAt(index) <=
          56319) && (str.charAt(index + 1) >= 56320 && str.charAt(index + 1) <= 57343))) {
          index += 2;
          break;
        }
      } while (false);
      if (tokener != null && index == indexStart) {
        tokener.RestoreState (state);
      }
      return index;
    }
    public static int ParseEncodingCount(String str, int index, int endIndex,
      ITokener tokener) {
      int indexStart, state;
      indexStart = index;
      state = (tokener != null) ? tokener.GetState() : 0;
      do {
        index = ParseCFWS (str, index, endIndex, tokener);
        if (index < endIndex && (str.charAt(index) >= 48 && str.charAt(index) <= 57)) {
          ++index;
          while (index < endIndex && (str.charAt(index) >= 48 && str.charAt(index) <= 57)) {
            ++index;
          }
        } else {
          index = indexStart;
          break;
        }
        index = ParseCFWS (str, index, endIndex, tokener);
      } while (false);
      if (tokener != null && index == indexStart) {
        tokener.RestoreState (state);
      }
      return index;
    }
    public static int ParseEncodingKeyword(String str, int index, int endIndex,
      ITokener tokener) {
      int indexStart, state;
      indexStart = index;
      state = (tokener != null) ? tokener.GetState() : 0;
      do {
        index = ParseCFWS (str, index, endIndex, tokener);
        if (index < endIndex && ((str.charAt(index) >= 65 && str.charAt(index) <= 90) ||
          (str.charAt(index) >= 97 && str.charAt(index) <= 122))) {
          ++index;
        } else {
          index = indexStart;
          break;
        }
        if (index < endIndex && ((str.charAt(index) >= 65 && str.charAt(index) <= 90) ||
          (str.charAt(index) >= 97 && str.charAt(index) <= 122) || (str.charAt(index) >= 48 &&
          str.charAt(index) <= 57) || (str.charAt(index) == 45))) {
          ++index;
          while (index < endIndex && ((str.charAt(index) >= 65 && str.charAt(index) <= 90) ||
            (str.charAt(index) >= 97 && str.charAt(index) <= 122) || (str.charAt(index) >= 48 &&
            str.charAt(index) <= 57) || (str.charAt(index) == 45))) {
            ++index;
          }
        } else {
          index = indexStart;
          break;
        }
        index = ParseCFWS (str, index, endIndex, tokener);
      } while (false);
      if (tokener != null && index == indexStart) {
        tokener.RestoreState (state);
      }
      return index;
    }

    public static int ParseFWS(String str, int index, int endIndex,
      ITokener tokener) {
      int i, indexStart, indexStart2, indexTemp2;
      indexStart = index;
      for (i = 0; true; ++i) {
        indexTemp2 = index;
        do {
          indexStart2 = index;
          if (endIndex - index > 1 && str.charAt(index) == 13 && str.charAt(index + 1) ==
            10) {
            index += 2;
          }
          if (index < endIndex && ((str.charAt(index) == 32) || (str.charAt(index) == 9))) {
            ++index;
          } else {
            index = indexStart2;
            break;
          }
          indexTemp2 = index;
          index = indexStart2;
        } while (false);
        if (indexTemp2 != index) {
          index = indexTemp2;
        } else {
          if (i < 1) {
            index = indexStart;
          }
          break;
        }
      }
      if (index == indexStart) {
        {
          return indexStart;
        }
      }
      return index;
    }

    public static int ParseFsarg(String str, int index, int endIndex,
      ITokener tokener) {
      int i2, indexStart2, indexStart3, indexTemp2, indexTemp3;
      do {
        indexTemp2 = index;
        do {
          indexStart2 = index;
          if (endIndex - index > 3 && (str.charAt(index) & ~32) == 73 &&
            (str.charAt(index + 1) & ~32) == 80 && str.charAt(index + 2) == 52 &&
            str.charAt(index + 3) == 61) {
            index += 4;
          } else {
            break;
          }
          if (index < endIndex && ((str.charAt(index) >= 48 && str.charAt(index) <= 57) ||
            (str.charAt(index) == 88) || (str.charAt(index) == 120))) {
            ++index;
            while (index < endIndex && ((str.charAt(index) >= 48 && str.charAt(index) <=
              57) || (str.charAt(index) == 88) || (str.charAt(index) == 120))) {
              ++index;
            }
          } else {
            index = indexStart2;
            break;
          }
          if (index < endIndex && (str.charAt(index) == 46)) {
            ++index;
          } else {
            index = indexStart2;
            break;
          }
          if (index < endIndex && ((str.charAt(index) >= 48 && str.charAt(index) <= 57) ||
            (str.charAt(index) == 88) || (str.charAt(index) == 120))) {
            ++index;
            while (index < endIndex && ((str.charAt(index) >= 48 && str.charAt(index) <=
              57) || (str.charAt(index) == 88) || (str.charAt(index) == 120))) {
              ++index;
            }
          } else {
            index = indexStart2;
            break;
          }
          for (i2 = 0; i2 < 3; ++i2) {
            indexTemp3 = index;
            do {
              indexStart3 = index;
              if (index < endIndex && (str.charAt(index) == 46)) {
                ++index;
              } else {
                break;
              }
              if (index < endIndex && ((str.charAt(index) >= 48 && str.charAt(index) <= 57) ||
                (str.charAt(index) == 88) || (str.charAt(index) == 120))) {
                ++index;
                while (index < endIndex && ((str.charAt(index) >= 48 && str.charAt(index)
                  <= 57) || (str.charAt(index) == 88) || (str.charAt(index) == 120))) {
                  ++index;
                }
              } else {
                index = indexStart3;
                break;
              }
              indexTemp3 = index;
              index = indexStart3;
            } while (false);
            if (indexTemp3 != index) {
              index = indexTemp3;
            } else {
              if (i2 < 3) {
                index = indexStart2;
              }
              break;
            }
          }
          if (index == indexStart2) {
            break;
          }
          indexTemp2 = index;
          index = indexStart2;
        } while (false);
        if (indexTemp2 != index) {
          index = indexTemp2;
          break;
        }
        if (endIndex - index > 6 && (str.charAt(index) & ~32) == 73 &&
          (str.charAt(index + 1) & ~32) == 80 && str.charAt(index + 2) == 61 &&
          (str.charAt(index + 3) & ~32) == 78 &&
          (str.charAt(index + 4) & ~32) == 79 && (str.charAt(index + 5) & ~32) == 78 &&
          (str.charAt(index + 6) & ~32) == 69) {
          index += 7;
          break;
        }
        indexTemp2 = index;
        do {
          indexStart2 = index;
          if (endIndex - index > 3 && (str.charAt(index) & ~32) == 73 &&
            (str.charAt(index + 1) & ~32) == 80 && str.charAt(index + 2) == 54 &&
            str.charAt(index + 3) == 61) {
            index += 4;
          } else {
            break;
          }
          if (index < endIndex && ((str.charAt(index) == 88) || (str.charAt(index) == 120) ||
            (str.charAt(index) >= 48 && str.charAt(index) <= 58))) {
            ++index;
            while (index < endIndex && ((str.charAt(index) == 88) || (str.charAt(index) ==
              120) || (str.charAt(index) >= 48 && str.charAt(index) <= 58))) {
              ++index;
            }
          } else {
            index = indexStart2;
            break;
          }
          indexTemp2 = index;
          index = indexStart2;
        } while (false);
        if (indexTemp2 != index) {
          index = indexTemp2;
          break;
        }
        indexTemp2 = index;
        do {
          indexStart2 = index;
          if (index < endIndex && ((str.charAt(index) >= 65 && str.charAt(index) <= 90) ||
            (str.charAt(index) >= 97 && str.charAt(index) <= 122))) {
            ++index;
          } else {
            break;
          }
          while (index < endIndex && ((str.charAt(index) >= 65 && str.charAt(index) <= 90) ||
            (str.charAt(index) >= 97 && str.charAt(index) <= 122) || (str.charAt(index) >= 48 &&
            str.charAt(index) <= 57))) {
            ++index;
          }
          if (index < endIndex && (str.charAt(index) == 61)) {
            ++index;
          } else {
            index = indexStart2;
            break;
          }
          if (index < endIndex && ((str.charAt(index) == 33) || (str.charAt(index) >= 35 &&
            str.charAt(index) <= 58) || (str.charAt(index) >= 60 && str.charAt(index) <= 126))) {
            ++index;
            while (index < endIndex && ((str.charAt(index) == 33) || (str.charAt(index) >=
              35 && str.charAt(index) <= 58) || (str.charAt(index) >= 60 && str.charAt(index) <=
                126))) {
              ++index;
            }
          } else {
            index = indexStart2;
            break;
          }
          indexTemp2 = index;
          index = indexStart2;
        } while (false);
        if (indexTemp2 != index) {
          index = indexTemp2;
          break;
        }
      } while (false);
      return index;
    }
    public static int ParseGeneralKeyword(String str, int index, int endIndex,
      ITokener tokener) {
      int indexStart, state;
      indexStart = index;
      state = (tokener != null) ? tokener.GetState() : 0;
      do {
        index = ParseCFWS (str, index, endIndex, tokener);
        if (index < endIndex && ((str.charAt(index) >= 65 && str.charAt(index) <= 90) ||
          (str.charAt(index) >= 97 && str.charAt(index) <= 122) || (str.charAt(index) >= 48 &&
          str.charAt(index) <= 57) || (str.charAt(index) == 45))) {
          ++index;
          while (index < endIndex && ((str.charAt(index) >= 65 && str.charAt(index) <= 90) ||
            (str.charAt(index) >= 97 && str.charAt(index) <= 122) || (str.charAt(index) >= 48 &&
            str.charAt(index) <= 57) || (str.charAt(index) == 45))) {
            ++index;
          }
        } else {
          index = indexStart;
          break;
        }
        index = ParseCFWS (str, index, endIndex, tokener);
      } while (false);
      if (tokener != null && index == indexStart) {
        tokener.RestoreState (state);
      }
      return index;
    }
    public static int ParseGroup(String str, int index, int endIndex, ITokener
      tokener) {
      int indexStart, state, tx2;
      indexStart = index;
      state = (tokener != null) ? tokener.GetState() : 0;
      do {
        tx2 = ParseDisplayName (str, index, endIndex, tokener);
        if (tx2 == index) {
          break;
        }
        index = tx2;
        if (index < endIndex && (str.charAt(index) == 58)) {
          ++index;
        } else {
          index = indexStart;
          break;
        }
        index = ParseGroupList (str, index, endIndex, tokener);
        if (index < endIndex && (str.charAt(index) == 59)) {
          ++index;
        } else {
          index = indexStart;
          break;
        }
        index = ParseCFWS (str, index, endIndex, tokener);
      } while (false);
      if (tokener != null) {
        if (index == indexStart) {
          tokener.RestoreState (state);
        } else {
          tokener.Commit (4, indexStart, index);
        }
      }
      return index;
    }
    public static int ParseGroupList(String str, int index, int endIndex,
      ITokener tokener) {
      int i, i2, indexStart, indexStart2, indexStart3, indexTemp2, indexTemp3,
          state, state2, tx4;
      indexStart = index;
      state = (tokener != null) ? tokener.GetState() : 0;
      do {
        indexTemp2 = ParseMailboxList (str, index, endIndex, tokener);
        if (indexTemp2 != index) {
          index = indexTemp2;
          break;
        }
        indexTemp2 = ParseObsGroupList (str, index, endIndex, tokener);
        if (indexTemp2 != index) {
          index = indexTemp2;
          break;
        }
        state2 = (tokener != null) ? tokener.GetState() : 0;
        indexTemp2 = index;
        do {
          indexStart2 = index;
          for (i2 = 0; true; ++i2) {
            indexTemp3 = index;
            do {
              indexStart3 = index;
              index = ParseFWS (str, index, endIndex, tokener);
              tx4 = HeaderParserUtility.ParseCommentLax (str, index,
                  endIndex, tokener);
              if (tx4 == index) {
                index = indexStart3;
                break;
              }
              index = tx4;
              indexTemp3 = index;
              index = indexStart3;
            } while (false);
            if (indexTemp3 != index) {
              index = indexTemp3;
            } else {
              if (i2 < 1) {
                index = indexStart2;
              }
              break;
            }
          }
          if (index == indexStart2) {
            break;
          }
          index = ParseFWS (str, index, endIndex, tokener);
          indexTemp2 = index;
          index = indexStart2;
        } while (false);
        if (indexTemp2 != index) {
          index = indexTemp2;
          break;
        }
        if (tokener != null) {
          tokener.RestoreState (state2);
        }
        for (i = 0; true; ++i) {
          indexTemp2 = ParseFWS (str, index, endIndex, tokener);
          if (indexTemp2 == index) {
            if (i < 1) {
              index = indexStart;
            }
            break;
          }
          index = indexTemp2;
        }
        index = indexStart;
        if (indexTemp2 != indexStart) {
          index = indexTemp2;
          break;
        }
      } while (false);
      if (tokener != null && index == indexStart) {
        tokener.RestoreState (state);
      }
      return index;
    }
    public static int ParseHeaderAcceptLanguage(String str, int index, int
      endIndex, ITokener tokener) {
      int indexStart, indexStart2, indexStart3, indexStart4, indexTemp2,
          indexTemp3, indexTemp4, state, state2, state3, tx3, tx4, tx5;
      indexStart = index;
      state = (tokener != null) ? tokener.GetState() : 0;
      do {
        state2 = (tokener != null) ? tokener.GetState() : 0;
        indexTemp2 = index;
        do {
          indexStart2 = index;
          index = ParseCFWS (str, index, endIndex, tokener);
          tx3 = ParseLanguageRange (str, index, endIndex, tokener);
          if (tx3 == index) {
            index = indexStart2;
            break;
          }
          index = tx3;
          do {
            indexTemp3 = index;
            do {
              indexStart3 = index;
              if (index < endIndex && (str.charAt(index) == 59)) {
                ++index;
              } else {
                break;
              }
              index = ParseCFWS (str, index, endIndex, tokener);
              if (endIndex - index > 1 && (str.charAt(index) & ~32) == 81 &&
                str.charAt(index + 1) == 61) {
                index += 2;
              } else {
                index = indexStart3;
                break;
              }
              tx4 = ParseQvalue (str, index, endIndex, tokener);
              if (tx4 == index) {
                index = indexStart3;
                break;
              }
              index = tx4;
              indexTemp3 = index;
              index = indexStart3;
            } while (false);
            if (indexTemp3 != index) {
              index = indexTemp3;
            } else {
              break;
            }
          } while (false);
          index = ParseCFWS (str, index, endIndex, tokener);
          while (true) {
            state3 = (tokener != null) ? tokener.GetState() : 0;
            indexTemp3 = index;
            do {
              indexStart3 = index;
              if (index < endIndex && (str.charAt(index) == 44)) {
                ++index;
              } else {
                break;
              }
              index = ParseCFWS (str, index, endIndex, tokener);
              tx4 = ParseLanguageRange (str, index, endIndex, tokener);
              if (tx4 == index) {
                index = indexStart3;
                break;
              }
              index = tx4;
              do {
                indexTemp4 = index;
                do {
                  indexStart4 = index;
                  if (index < endIndex && (str.charAt(index) == 59)) {
                    ++index;
                  } else {
                    break;
                  }
                  index = ParseCFWS (str, index, endIndex, tokener);
                  if (endIndex - index > 1 && (str.charAt(index) & ~32) == 81 &&
                    str.charAt(index + 1) == 61) {
                    index += 2;
                  } else {
                    index = indexStart4;
                    break;
                  }
                  tx5 = ParseQvalue (str, index, endIndex, tokener);
                  if (tx5 == index) {
                    index = indexStart4;
                    break;
                  }
                  index = tx5;
                  indexTemp4 = index;
                  index = indexStart4;
                } while (false);
                if (indexTemp4 != index) {
                  index = indexTemp4;
                } else {
                  break;
                }
              } while (false);
              index = ParseCFWS (str, index, endIndex, tokener);
              indexTemp3 = index;
              index = indexStart3;
            } while (false);
            if (indexTemp3 != index) {
              index = indexTemp3;
            } else {
              if (tokener != null) {
                tokener.RestoreState (state3);
              }
              break;
            }
          }
          indexTemp2 = index;
          index = indexStart2;
        } while (false);
        if (indexTemp2 != index) {
          index = indexTemp2;
          break;
        }
        if (tokener != null) {
          tokener.RestoreState (state2);
        }
        indexTemp2 = ParseObsAcceptLanguage (str, index, endIndex, tokener);
        if (indexTemp2 != index) {
          index = indexTemp2;
          break;
        }
      } while (false);
      if (tokener != null && index == indexStart) {
        tokener.RestoreState (state);
      }
      return index;
    }
    public static int ParseHeaderAlternateRecipient(String str, int index, int
      endIndex, ITokener tokener) {
      return ParseMixerKeyword (str, index, endIndex, tokener);
    }
    public static int ParseHeaderArcAuthenticationResults(String str,
      int index,
      int endIndex, ITokener tokener) {
      int i, indexStart, state, tx2;
      indexStart = index;
      state = (tokener != null) ? tokener.GetState() : 0;
      do {
        index = ParseCFWS (str, index, endIndex, tokener);
        index = ParseFWS (str, index, endIndex, tokener);
        if (index < endIndex && (str.charAt(index) == 105)) {
          ++index;
        } else {
          index = indexStart;
          break;
        }
        index = ParseFWS (str, index, endIndex, tokener);
        if (index < endIndex && (str.charAt(index) == 61)) {
          ++index;
        } else {
          index = indexStart;
          break;
        }
        index = ParseFWS (str, index, endIndex, tokener);
        for (i = 0; i < 2; ++i) {
          if (index < endIndex && (str.charAt(index) >= 48 && str.charAt(index) <= 57)) {
            ++index;
          } else if (i < 1) {
            index = indexStart;
            break;
          } else {
            break;
          }
        }
        if (index == indexStart) {
          break;
        }
        index = ParseFWS (str, index, endIndex, tokener);
        index = ParseCFWS (str, index, endIndex, tokener);
        if (index < endIndex && (str.charAt(index) == 59)) {
          ++index;
        } else {
          index = indexStart;
          break;
        }
        tx2 = ParseHeaderAuthenticationResults (str, index, endIndex, tokener);
        if (tx2 == index) {
          index = indexStart;
          break;
        }
        index = tx2;
      } while (false);
      if (tokener != null && index == indexStart) {
        tokener.RestoreState (state);
      }
      return index;
    }
    public static int ParseHeaderArcMessageSignature(String str, int index, int
      endIndex, ITokener tokener) {
      return ParseNoEncodedWords (str, index, endIndex, tokener);
    }
    public static int ParseHeaderArcSeal(String str, int index, int endIndex,
      ITokener tokener) {
      return ParseNoEncodedWords (str, index, endIndex, tokener);
    }
    public static int ParseHeaderArchive(String str, int index, int endIndex,
      ITokener tokener) {
      return ParseNoEncodedWords (str, index, endIndex, tokener);
    }
    public static int ParseHeaderArchivedAt(String str, int index,
      int endIndex,
      ITokener tokener) {
      int indexStart, indexStart2, indexTemp2, state, state2;
      indexStart = index;
      state = (tokener != null) ? tokener.GetState() : 0;
      do {
        index = ParseFWS (str, index, endIndex, tokener);
        if (index < endIndex && (str.charAt(index) == 60)) {
          ++index;
        } else {
          index = indexStart;
          break;
        }
        while (true) {
          state2 = (tokener != null) ? tokener.GetState() : 0;
          indexTemp2 = index;
          do {
            indexStart2 = index;
            index = ParseFWS (str, index, endIndex, tokener);
            if (index < endIndex && ((str.charAt(index) >= 33 && str.charAt(index) <= 59) ||
              (str.charAt(index) == 61) || (str.charAt(index) >= 63 && str.charAt(index) <=
              126))) {
              ++index;
            } else {
              index = indexStart2;
              break;
            }
            indexTemp2 = index;
            index = indexStart2;
          } while (false);
          if (indexTemp2 != index) {
            index = indexTemp2;
          } else {
            if (tokener != null) {
              tokener.RestoreState (state2);
            }
            break;
          }
        }
        index = ParseFWS (str, index, endIndex, tokener);
        if (index < endIndex && (str.charAt(index) == 62)) {
          ++index;
        } else {
          index = indexStart;
          break;
        }
      } while (false);
      if (tokener != null && index == indexStart) {
        tokener.RestoreState (state);
      }
      return index;
    }
    public static int ParseHeaderAuthenticationResults(String str, int index,
      int endIndex, ITokener tokener) {
      int i2, i3, indexStart, indexStart2, indexStart3, indexStart4, indexTemp2,
          indexTemp3, indexTemp4, state, state2, state3, tx3, tx4;
      indexStart = index;
      state = (tokener != null) ? tokener.GetState() : 0;
      do {
        state2 = (tokener != null) ? tokener.GetState() : 0;
        indexTemp2 = index;
        do {
          indexStart2 = index;
          index = ParseCFWS (str, index, endIndex, tokener);
          tx3 = ParseValue (str, index, endIndex, tokener);
          if (tx3 == index) {
            index = indexStart2;
            break;
          }
          index = tx3;
          do {
            indexTemp3 = index;
            do {
              indexStart3 = index;
              tx4 = ParseCFWS (str, index, endIndex, tokener);
              if (tx4 == index) {
                break;
              }
              index = tx4;
              if (index < endIndex && (str.charAt(index) >= 48 && str.charAt(index) <= 57)) {
                ++index;
                while (index < endIndex && (str.charAt(index) >= 48 && str.charAt(index)
                  <= 57)) {
                  ++index;
                }
              } else {
                index = indexStart3;
                break;
              }
              index = ParseCFWS (str, index, endIndex, tokener);
              indexTemp3 = index;
              index = indexStart3;
            } while (false);
            if (indexTemp3 != index) {
              index = indexTemp3;
            } else {
              break;
            }
          } while (false);
          do {
            indexTemp3 = index;
            do {
              indexTemp4 = ParseNoResult (str, index, endIndex, tokener);
              if (indexTemp4 != index) {
                indexTemp3 = indexTemp4;
                break;
              }
              indexStart3 = index;
              for (i3 = 0; true; ++i3) {
                indexTemp4 = ParseResinfo (str, index, endIndex, tokener);
                if (indexTemp4 == index) {
                  if (i3 < 1) {
                    indexTemp3 = indexStart3;
                  }
                  break;
                }
                index = indexTemp4;
              }
              index = indexStart3;
              if (indexTemp4 != indexStart3) {
                indexTemp3 = indexTemp4;
                break;
              }
            } while (false);
            if (indexTemp3 != index) {
              index = indexTemp3;
            } else {
              index = indexStart2;
              break;
            }
          } while (false);
          if (index == indexStart2) {
            break;
          }
          index = ParseCFWS (str, index, endIndex, tokener);
          indexTemp2 = index;
          index = indexStart2;
        } while (false);
        if (indexTemp2 != index) {
          index = indexTemp2;
          break;
        }
        if (tokener != null) {
          tokener.RestoreState (state2);
        }
        state2 = (tokener != null) ? tokener.GetState() : 0;
        indexTemp2 = index;
        do {
          indexStart2 = index;
          index = ParseCFWS (str, index, endIndex, tokener);
          tx3 = ParseValue (str, index, endIndex, tokener);
          if (tx3 == index) {
            index = indexStart2;
            break;
          }
          index = tx3;
          tx3 = ParseCFWS (str, index, endIndex, tokener);
          if (tx3 == index) {
            index = indexStart2;
            break;
          }
          index = tx3;
          index = ParseCFWS (str, index, endIndex, tokener);
          if (endIndex - index > 3 && (str.charAt(index) & ~32) == 70 &&
            (str.charAt(index + 1) & ~32) == 82 && (str.charAt(index + 2) & ~32) == 79 &&
            (str.charAt(index + 3) & ~32) == 77) {
            index += 4;
          } else {
            index = indexStart2;
            break;
          }
          index = ParseCFWS (str, index, endIndex, tokener);
          if (index < endIndex && (str.charAt(index) == 61)) {
            ++index;
          } else {
            index = indexStart2;
            break;
          }
          index = ParseCFWS (str, index, endIndex, tokener);
          if (index < endIndex && ((str.charAt(index) >= 65 && str.charAt(index) <= 90) ||
            (str.charAt(index) >= 97 && str.charAt(index) <= 122) || (str.charAt(index) >= 48 &&
            str.charAt(index) <= 57))) {
            ++index;
          } else {
            index = indexStart2;
            break;
          }
          index = ParseLdhStr (str, index, endIndex, tokener);
          for (i2 = 0; true; ++i2) {
            indexTemp3 = index;
            do {
              indexStart3 = index;
              if (endIndex - index > 1 && (str.charAt(index) == 46) && ((str.charAt(index +
                1) >= 65 && str.charAt(index + 1) <= 90) || (str.charAt(index + 1) >= 97 &&
                  str.charAt(index + 1) <= 122) ||
                (str.charAt(index + 1) >= 48 && str.charAt(index + 1) <= 57))) {
                index += 2;
              } else {
                break;
              }
              index = ParseLdhStr (str, index, endIndex, tokener);
              indexTemp3 = index;
              index = indexStart3;
            } while (false);
            if (indexTemp3 != index) {
              index = indexTemp3;
            } else {
              if (i2 < 1) {
                index = indexStart2;
              }
              break;
            }
          }
          if (index == indexStart2) {
            break;
          }
          index = ParseCFWS (str, index, endIndex, tokener);
          if (index < endIndex && (str.charAt(index) == 59)) {
            ++index;
          } else {
            index = indexStart2;
            break;
          }
          index = ParseCFWS (str, index, endIndex, tokener);
          index = ParseCFWS (str, index, endIndex, tokener);
          for (i2 = 0; true; ++i2) {
            indexTemp3 = ParseLdhStr (str, index, endIndex, tokener);
            if (indexTemp3 != index) {
              index = indexTemp3;
            } else {
              if (i2 < 1) {
                index = indexStart2;
              }
              break;
            }
          }
          if (index == indexStart2) {
            break;
          }
          do {
            indexTemp3 = index;
            do {
              indexStart3 = index;
              index = ParseCFWS (str, index, endIndex, tokener);
              if (index < endIndex && (str.charAt(index) == 47)) {
                ++index;
              } else {
                index = indexStart3;
                break;
              }
              index = ParseCFWS (str, index, endIndex, tokener);
              if (index < endIndex && (str.charAt(index) >= 48 && str.charAt(index) <= 57)) {
                ++index;
                while (index < endIndex && (str.charAt(index) >= 48 && str.charAt(index)
                  <= 57)) {
                  ++index;
                }
              } else {
                index = indexStart3;
                break;
              }
              index = ParseCFWS (str, index, endIndex, tokener);
              indexTemp3 = index;
              index = indexStart3;
            } while (false);
            if (indexTemp3 != index) {
              index = indexTemp3;
            } else {
              break;
            }
          } while (false);
          index = ParseCFWS (str, index, endIndex, tokener);
          if (index < endIndex && (str.charAt(index) == 61)) {
            ++index;
          } else {
            index = indexStart2;
            break;
          }
          index = ParseCFWS (str, index, endIndex, tokener);
          tx3 = ParseSmtpKeyword (str, index, endIndex, tokener);
          if (tx3 == index) {
            index = indexStart2;
            break;
          }
          index = tx3;
          index = ParseCFWS (str, index, endIndex, tokener);
          while (true) {
            state3 = (tokener != null) ? tokener.GetState() : 0;
            indexTemp3 = index;
            do {
              indexStart3 = index;
              if (index < endIndex && (str.charAt(index) == 59)) {
                ++index;
              } else {
                break;
              }
              index = ParseCFWS (str, index, endIndex, tokener);
              index = ParseCFWS (str, index, endIndex, tokener);
              if (endIndex - index > 3 && (str.charAt(index) & ~32) == 70 &&
                (str.charAt(index + 1) & ~32) == 82 && (str.charAt(index + 2) & ~32) == 79 &&
                (str.charAt(index + 3) & ~32) == 77) {
                index += 4;
              } else {
                index = indexStart3;
                break;
              }
              index = ParseCFWS (str, index, endIndex, tokener);
              if (index < endIndex && (str.charAt(index) == 61)) {
                ++index;
              } else {
                index = indexStart3;
                break;
              }
              index = ParseCFWS (str, index, endIndex, tokener);
              if (index < endIndex && ((str.charAt(index) >= 65 && str.charAt(index) <= 90) ||
                (str.charAt(index) >= 97 && str.charAt(index) <= 122) || (str.charAt(index) >=
                48 && str.charAt(index) <= 57))) {
                ++index;
              } else {
                index = indexStart3;
                break;
              }
              index = ParseLdhStr (str, index, endIndex, tokener);
              for (i3 = 0; true; ++i3) {
                indexTemp4 = index;
                do {
                  indexStart4 = index;
                  if (endIndex - index > 1 && (str.charAt(index) == 46) &&
                    ((str.charAt(index + 1) >= 65 &&
                    str.charAt(index + 1) <= 90) || (str.charAt(index + 1) >= 97 &&
                      str.charAt(index + 1) <= 122) ||
                    (str.charAt(index + 1) >= 48 && str.charAt(index + 1) <= 57))) {
                    index += 2;
                  } else {
                    break;
                  }
                  index = ParseLdhStr (str, index, endIndex, tokener);
                  indexTemp4 = index;
                  index = indexStart4;
                } while (false);
                if (indexTemp4 != index) {
                  index = indexTemp4;
                } else {
                  if (i3 < 1) {
                    index = indexStart3;
                  }
                  break;
                }
              }
              if (index == indexStart3) {
                break;
              }
              index = ParseCFWS (str, index, endIndex, tokener);
              if (index < endIndex && (str.charAt(index) == 59)) {
                ++index;
              } else {
                index = indexStart3;
                break;
              }
              index = ParseCFWS (str, index, endIndex, tokener);
              index = ParseCFWS (str, index, endIndex, tokener);
              for (i3 = 0; true; ++i3) {
                indexTemp4 = ParseLdhStr (str, index, endIndex, tokener);
                if (indexTemp4 != index) {
                  index = indexTemp4;
                } else {
                  if (i3 < 1) {
                    index = indexStart3;
                  }
                  break;
                }
              }
              if (index == indexStart3) {
                break;
              }
              do {
                indexTemp4 = index;
                do {
                  indexStart4 = index;
                  index = ParseCFWS (str, index, endIndex, tokener);
                  if (index < endIndex && (str.charAt(index) == 47)) {
                    ++index;
                  } else {
                    index = indexStart4;
                    break;
                  }
                  index = ParseCFWS (str, index, endIndex, tokener);
                  if (index < endIndex && (str.charAt(index) >= 48 && str.charAt(index) <=
                    57)) {
                    ++index;
                    while (index < endIndex && (str.charAt(index) >= 48 &&
                      str.charAt(index) <= 57)) {
                      ++index;
                    }
                  } else {
                    index = indexStart4;
                    break;
                  }
                  index = ParseCFWS (str, index, endIndex, tokener);
                  indexTemp4 = index;
                  index = indexStart4;
                } while (false);
                if (indexTemp4 != index) {
                  index = indexTemp4;
                } else {
                  break;
                }
              } while (false);
              index = ParseCFWS (str, index, endIndex, tokener);
              if (index < endIndex && (str.charAt(index) == 61)) {
                ++index;
              } else {
                index = indexStart3;
                break;
              }
              index = ParseCFWS (str, index, endIndex, tokener);
              tx4 = ParseSmtpKeyword (str, index, endIndex, tokener);
              if (tx4 == index) {
                index = indexStart3;
                break;
              }
              index = tx4;
              index = ParseCFWS (str, index, endIndex, tokener);
              indexTemp3 = index;
              index = indexStart3;
            } while (false);
            if (indexTemp3 != index) {
              index = indexTemp3;
            } else {
              if (tokener != null) {
                tokener.RestoreState (state3);
              }
              break;
            }
          }
          indexTemp2 = index;
          index = indexStart2;
        } while (false);
        if (indexTemp2 != index) {
          index = indexTemp2;
          break;
        }
        if (tokener != null) {
          tokener.RestoreState (state2);
        }
      } while (false);
      if (tokener != null && index == indexStart) {
        tokener.RestoreState (state);
      }
      return index;
    }
    public static int ParseHeaderAutoforwarded(String str, int index, int
      endIndex, ITokener tokener) {
      return ParseMixerKeyword (str, index, endIndex, tokener);
    }
    public static int ParseHeaderBcc(String str, int index, int endIndex,
      ITokener tokener) {
      int indexStart, indexTemp2, indexTemp3, state;
      indexStart = index;
      state = (tokener != null) ? tokener.GetState() : 0;
      do {
        do {
          indexTemp2 = index;
          do {
            indexTemp3 = ParseAddressList (str, index, endIndex, tokener);
            if (indexTemp3 != index) {
              indexTemp2 = indexTemp3;
              break;
            }
            indexTemp3 = ParseCFWS (str, index, endIndex, tokener);
            if (indexTemp3 != index) {
              indexTemp2 = indexTemp3;
              break;
            }
          } while (false);
          if (indexTemp2 != index) {
            index = indexTemp2;
          } else {
            break;
          }
        } while (false);
      } while (false);
      if (tokener != null && index == indexStart) {
        tokener.RestoreState (state);
      }
      return index;
    }
    public static int ParseHeaderCancelKey(String str, int index, int endIndex,
      ITokener tokener) {
      int indexStart, indexStart2, indexTemp2, state, state2, tx2, tx3;
      indexStart = index;
      state = (tokener != null) ? tokener.GetState() : 0;
      do {
        if (index < endIndex && (str.charAt(index) == 32)) {
          ++index;
        } else {
          break;
        }
        index = ParseCFWS (str, index, endIndex, tokener);
        if (index < endIndex && ((str.charAt(index) >= 65 && str.charAt(index) <= 90) ||
          (str.charAt(index) >= 97 && str.charAt(index) <= 122) || (str.charAt(index) == 45) ||
          (str.charAt(index) >= 47 && str.charAt(index) <= 57))) {
          ++index;
          while (index < endIndex && ((str.charAt(index) >= 65 && str.charAt(index) <= 90) ||
            (str.charAt(index) >= 97 && str.charAt(index) <= 122) || (str.charAt(index) == 45) ||
            (str.charAt(index) >= 47 && str.charAt(index) <= 57))) {
            ++index;
          }
        } else {
          index = indexStart;
          break;
        }
        if (index < endIndex && (str.charAt(index) == 58)) {
          ++index;
        } else {
          index = indexStart;
          break;
        }
        tx2 = ParseCKeyString (str, index, endIndex, tokener);
        if (tx2 == index) {
          index = indexStart;
          break;
        }
        index = tx2;
        while (true) {
          state2 = (tokener != null) ? tokener.GetState() : 0;
          indexTemp2 = index;
          do {
            indexStart2 = index;
            tx3 = ParseCFWS (str, index, endIndex, tokener);
            if (tx3 == index) {
              break;
            }
            index = tx3;
            if (index < endIndex && ((str.charAt(index) >= 65 && str.charAt(index) <= 90) ||
              (str.charAt(index) >= 97 && str.charAt(index) <= 122) || (str.charAt(index) ==
              45) || (str.charAt(index) >= 47 && str.charAt(index) <= 57))) {
              ++index;
              while (index < endIndex && ((str.charAt(index) >= 65 && str.charAt(index) <=
                90) || (str.charAt(index) >= 97 && str.charAt(index) <= 122) || (str.charAt(index) ==
                  45) || (str.charAt(index) >= 47 && str.charAt(index) <= 57))) {
                ++index;
              }
            } else {
              index = indexStart2;
              break;
            }
            if (index < endIndex && (str.charAt(index) == 58)) {
              ++index;
            } else {
              index = indexStart2;
              break;
            }
            tx3 = ParseCKeyString (str, index, endIndex, tokener);
            if (tx3 == index) {
              index = indexStart2;
              break;
            }
            index = tx3;
            indexTemp2 = index;
            index = indexStart2;
          } while (false);
          if (indexTemp2 != index) {
            index = indexTemp2;
          } else {
            if (tokener != null) {
              tokener.RestoreState (state2);
            }
            break;
          }
        }
        index = ParseCFWS (str, index, endIndex, tokener);
        if (endIndex - index > 1 && str.charAt(index) == 13 && str.charAt(index + 1) == 10) {
          index += 2;
        } else {
          index = indexStart;
          break;
        }
      } while (false);
      if (tokener != null && index == indexStart) {
        tokener.RestoreState (state);
      }
      return index;
    }
    public static int ParseHeaderCancelLock(String str, int index,
      int endIndex,
      ITokener tokener) {
      int indexStart, indexStart2, indexStart3, indexTemp2, indexTemp3, state,
          state2, tx3;
      indexStart = index;
      state = (tokener != null) ? tokener.GetState() : 0;
      do {
        if (index < endIndex && (str.charAt(index) == 32)) {
          ++index;
        } else {
          break;
        }
        index = ParseCFWS (str, index, endIndex, tokener);
        if (index < endIndex && ((str.charAt(index) >= 65 && str.charAt(index) <= 90) ||
          (str.charAt(index) >= 97 && str.charAt(index) <= 122) || (str.charAt(index) == 45) ||
          (str.charAt(index) >= 47 && str.charAt(index) <= 57))) {
          ++index;
          while (index < endIndex && ((str.charAt(index) >= 65 && str.charAt(index) <= 90) ||
            (str.charAt(index) >= 97 && str.charAt(index) <= 122) || (str.charAt(index) == 45) ||
            (str.charAt(index) >= 47 && str.charAt(index) <= 57))) {
            ++index;
          }
        } else {
          index = indexStart;
          break;
        }
        if (index < endIndex && (str.charAt(index) == 58)) {
          ++index;
        } else {
          index = indexStart;
          break;
        }
        while (true) {
          indexTemp2 = index;
          do {
            indexStart2 = index;
            if (endIndex - index > 3 && (((str.charAt(index) >= 65 && str.charAt(index) <=
              90) || (str.charAt(index) >= 97 && str.charAt(index) <= 122) || (str.charAt(index) ==
                43) || (str.charAt(index)
                >= 47 && str.charAt(index) <= 57)) && ((str.charAt(index + 1) >= 65 &&
                  str.charAt(index + 1) <=
                  90) || (str.charAt(index + 1) >= 97 && str.charAt(index + 1) <= 122) ||
                (str.charAt(index + 1) ==
                  43) || (str.charAt(index + 1) >= 47 && str.charAt(index + 1) <= 57))&&
              ((str.charAt(index + 2)
              >= 65 && str.charAt(index + 2) <= 90) || (str.charAt(index + 2) >= 97 &&
                str.charAt(index + 2) <=
                122) || (str.charAt(index + 2) == 43) || (str.charAt(index + 2) >= 47 &&
                str.charAt(index + 2) <=
                57)) && ((str.charAt(index + 3) >= 65 && str.charAt(index + 3) <= 90) ||
                (str.charAt(index + 3)
                  >= 97 && str.charAt(index + 3) <= 122) || (str.charAt(index + 3) ==
                  43) || (str.charAt(index + 3) >= 47 && str.charAt(index + 3) <= 57)))) {
              index += 4;
            } else {
              break;
            }
            indexTemp2 = index;
            index = indexStart2;
          } while (false);
          if (indexTemp2 != index) {
            index = indexTemp2;
          } else {
            break;
          }
        }
        index = ParseBase64Terminal (str, index, endIndex, tokener);
        while (true) {
          state2 = (tokener != null) ? tokener.GetState() : 0;
          indexTemp2 = index;
          do {
            indexStart2 = index;
            tx3 = ParseCFWS (str, index, endIndex, tokener);
            if (tx3 == index) {
              break;
            }
            index = tx3;
            if (index < endIndex && ((str.charAt(index) >= 65 && str.charAt(index) <= 90) ||
              (str.charAt(index) >= 97 && str.charAt(index) <= 122) || (str.charAt(index) ==
              45) || (str.charAt(index) >= 47 && str.charAt(index) <= 57))) {
              ++index;
              while (index < endIndex && ((str.charAt(index) >= 65 && str.charAt(index) <=
                90) || (str.charAt(index) >= 97 && str.charAt(index) <= 122) || (str.charAt(index) ==
                  45) || (str.charAt(index) >= 47 && str.charAt(index) <= 57))) {
                ++index;
              }
            } else {
              index = indexStart2;
              break;
            }
            if (index < endIndex && (str.charAt(index) == 58)) {
              ++index;
            } else {
              index = indexStart2;
              break;
            }
            while (true) {
              indexTemp3 = index;
              do {
                indexStart3 = index;
                if (endIndex - index > 3 && (((str.charAt(index) >= 65 &&
                  str.charAt(index) <= 90) ||
                  (str.charAt(index) >= 97 && str.charAt(index) <= 122) || (str.charAt(index)
                  == 43) || (str.charAt(index)
                    >= 47 && str.charAt(index) <= 57)) && ((str.charAt(index + 1) >=
                      65 && str.charAt(index + 1) <=
                      90) || (str.charAt(index + 1) >= 97 && str.charAt(index + 1) <=
                      122) || (str.charAt(index + 1) ==
                      43) || (str.charAt(index + 1) >= 47 && str.charAt(index + 1) <=
                      57)) && ((str.charAt(index + 2)
                      >= 65 && str.charAt(index + 2) <= 90) || (str.charAt(index + 2) >=
                      97 && str.charAt(index + 2) <=
                      122) || (str.charAt(index + 2) == 43) || (str.charAt(index + 2) >=
                      47 && str.charAt(index + 2) <=
                      57)) && ((str.charAt(index + 3) >= 65 && str.charAt(index + 3) <=
                      90) || (str.charAt(index + 3)
                      >= 97 && str.charAt(index + 3) <= 122) || (str.charAt(index + 3)
                      == 43) || (str.charAt(index + 3) >= 47 && str.charAt(index + 3) <=
                      57)))) {
                  index += 4;
                } else {
                  break;
                }
                indexTemp3 = index;
                index = indexStart3;
              } while (false);
              if (indexTemp3 != index) {
                index = indexTemp3;
              } else {
                break;
              }
            }
            index = ParseBase64Terminal (str, index, endIndex, tokener);
            indexTemp2 = index;
            index = indexStart2;
          } while (false);
          if (indexTemp2 != index) {
            index = indexTemp2;
          } else {
            if (tokener != null) {
              tokener.RestoreState (state2);
            }
            break;
          }
        }
        index = ParseCFWS (str, index, endIndex, tokener);
        if (endIndex - index > 1 && str.charAt(index) == 13 && str.charAt(index + 1) == 10) {
          index += 2;
        } else {
          index = indexStart;
          break;
        }
      } while (false);
      if (tokener != null && index == indexStart) {
        tokener.RestoreState (state);
      }
      return index;
    }
    public static int ParseHeaderContentBase(String str, int index, int
      endIndex, ITokener tokener) {
      int indexStart, state;
      indexStart = index;
      state = (tokener != null) ? tokener.GetState() : 0;
      do {
        index = ParseCFWS (str, index, endIndex, tokener);
        if (index < endIndex && ((str.charAt(index) >= 33 && str.charAt(index) <= 59) ||
          (str.charAt(index) == 61) || (str.charAt(index) >= 63 && str.charAt(index) <= 126))) {
          ++index;
          while (index < endIndex && ((str.charAt(index) >= 33 && str.charAt(index) <= 59) ||
            (str.charAt(index) == 61) || (str.charAt(index) >= 63 && str.charAt(index) <= 126))) {
            ++index;
          }
        } else {
          index = indexStart;
          break;
        }
        index = ParseCFWS (str, index, endIndex, tokener);
      } while (false);
      if (tokener != null && index == indexStart) {
        tokener.RestoreState (state);
      }
      return index;
    }
    public static int ParseHeaderContentDisposition(String str, int index, int
      endIndex, ITokener tokener) {
      return ParseNoEncodedWords (str, index, endIndex, tokener);
    }
    public static int ParseHeaderContentDuration(String str, int index, int
      endIndex, ITokener tokener) {
      int i, indexStart, state;
      indexStart = index;
      state = (tokener != null) ? tokener.GetState() : 0;
      do {
        index = ParseCFWS (str, index, endIndex, tokener);
        for (i = 0; i < 10; ++i) {
          if (index < endIndex && (str.charAt(index) >= 48 && str.charAt(index) <= 57)) {
            ++index;
          } else if (i < 1) {
            index = indexStart;
            break;
          } else {
            break;
          }
        }
        if (index == indexStart) {
          break;
        }
        index = ParseCFWS (str, index, endIndex, tokener);
      } while (false);
      if (tokener != null && index == indexStart) {
        tokener.RestoreState (state);
      }
      return index;
    }
    public static int ParseHeaderContentId(String str, int index, int endIndex,
      ITokener tokener) {
      return ParseMsgId (str, index, endIndex, tokener);
    }
    public static int ParseHeaderContentLanguage(String str, int index, int
      endIndex, ITokener tokener) {
      int indexStart, indexStart2, indexTemp2, state, state2;
      indexStart = index;
      state = (tokener != null) ? tokener.GetState() : 0;
      do {
        index = ParseCFWS (str, index, endIndex, tokener);
        if (index < endIndex && ((str.charAt(index) >= 65 && str.charAt(index) <= 90) ||
          (str.charAt(index) >= 97 && str.charAt(index) <= 122))) {
          ++index;
        } else {
          index = indexStart;
          break;
        }
        while (index < endIndex && ((str.charAt(index) >= 65 && str.charAt(index) <= 90) ||
          (str.charAt(index) >= 97 && str.charAt(index) <= 122) || (str.charAt(index) >= 48 &&
          str.charAt(index) <= 57) || (str.charAt(index) == 45))) {
          ++index;
        }
        index = ParseCFWS (str, index, endIndex, tokener);
        while (true) {
          state2 = (tokener != null) ? tokener.GetState() : 0;
          indexTemp2 = index;
          do {
            indexStart2 = index;
            if (index < endIndex && (str.charAt(index) == 44)) {
              ++index;
            } else {
              break;
            }
            index = ParseCFWS (str, index, endIndex, tokener);
            if (index < endIndex && ((str.charAt(index) >= 65 && str.charAt(index) <= 90) ||
              (str.charAt(index) >= 97 && str.charAt(index) <= 122))) {
              ++index;
            } else {
              index = indexStart2;
              break;
            }
            while (index < endIndex && ((str.charAt(index) >= 65 && str.charAt(index) <=
              90) ||
              (str.charAt(index) >= 97 && str.charAt(index) <= 122) || (str.charAt(index) >= 48 &&
              str.charAt(index) <= 57) || (str.charAt(index) == 45))) {
              ++index;
            }
            index = ParseCFWS (str, index, endIndex, tokener);
            indexTemp2 = index;
            index = indexStart2;
          } while (false);
          if (indexTemp2 != index) {
            index = indexTemp2;
          } else {
            if (tokener != null) {
              tokener.RestoreState (state2);
            }
            break;
          }
        }
      } while (false);
      if (tokener != null && index == indexStart) {
        tokener.RestoreState (state);
      }
      return index;
    }
    public static int ParseHeaderContentLocation(String str, int index, int
      endIndex, ITokener tokener) {
      int indexStart, indexStart2, indexTemp2, state, state2;
      indexStart = index;
      state = (tokener != null) ? tokener.GetState() : 0;
      do {
        index = ParseCFWS (str, index, endIndex, tokener);
        index = ParseFWS (str, index, endIndex, tokener);
        if (index < endIndex && ((str.charAt(index) >= 33 && str.charAt(index) <= 59) ||
          (str.charAt(index) == 61) || (str.charAt(index) >= 63 && str.charAt(index) <= 126))) {
          ++index;
        } else {
          index = indexStart;
          break;
        }
        while (true) {
          state2 = (tokener != null) ? tokener.GetState() : 0;
          indexTemp2 = index;
          do {
            indexStart2 = index;
            index = ParseFWS (str, index, endIndex, tokener);
            if (index < endIndex && ((str.charAt(index) >= 33 && str.charAt(index) <= 59) ||
              (str.charAt(index) == 61) || (str.charAt(index) >= 63 && str.charAt(index) <=
              126))) {
              ++index;
            } else {
              index = indexStart2;
              break;
            }
            indexTemp2 = index;
            index = indexStart2;
          } while (false);
          if (indexTemp2 != index) {
            index = indexTemp2;
          } else {
            if (tokener != null) {
              tokener.RestoreState (state2);
            }
            break;
          }
        }
        index = ParseFWS (str, index, endIndex, tokener);
        index = ParseCFWS (str, index, endIndex, tokener);
      } while (false);
      if (tokener != null && index == indexStart) {
        tokener.RestoreState (state);
      }
      return index;
    }
    public static int ParseHeaderContentMd5(String str, int index,
      int endIndex,
      ITokener tokener) {
      int indexStart, state;
      indexStart = index;
      state = (tokener != null) ? tokener.GetState() : 0;
      do {
        index = ParseCFWS (str, index, endIndex, tokener);
        if (endIndex - index > 21 && (((str.charAt(index) >= 65 && str.charAt(index) <= 90) ||
          (str.charAt(index) >= 97 && str.charAt(index) <= 122) || (str.charAt(index) >= 47 &&
          str.charAt(index) <= 57) || (str.charAt(index) == 43)) && ((str.charAt(index + 1) >= 65 &&
              str.charAt(index + 1) <=
              90) || (str.charAt(index + 1) >= 97 && str.charAt(index + 1) <= 122) ||
            (str.charAt(index + 1) >=
              47 && str.charAt(index + 1) <= 57) || (str.charAt(index + 1) == 43)) &&
          ((str.charAt(index + 2)
          >= 65 && str.charAt(index + 2) <= 90) || (str.charAt(index + 2) >= 97 &&
            str.charAt(index + 2) <=
            122) || (str.charAt(index + 2) >= 47 && str.charAt(index + 2) <= 57) ||
          (str.charAt(index + 2) ==
            43)) && ((str.charAt(index + 3) >= 65 && str.charAt(index + 3) <= 90) ||
            (str.charAt(index + 3)
              >= 97 && str.charAt(index + 3) <= 122) || (str.charAt(index + 3) >= 47 &&
              str.charAt(index + 3)
              <= 57) || (str.charAt(index + 3) == 43)) && ((str.charAt(index + 4) >= 65 &&
              str.charAt(index +
                4) <= 90) || (str.charAt(index + 4) >= 97 && str.charAt(index + 4) <=
              122) || (str.charAt(index +
                4) >= 47 && str.charAt(index + 4) <= 57) || (str.charAt(index + 4) == 43))&&
          ((str.charAt(index +
          5) >= 65 && str.charAt(index + 5) <= 90) || (str.charAt(index + 5) >= 97 &&
            str.charAt(index + 5) <= 122) || (str.charAt(index + 5) >= 47 && str.charAt(index + 5) <=
            57) || (str.charAt(index +
              5) == 43)) && ((str.charAt(index + 6) >= 65 && str.charAt(index + 6) <=
              90) || (str.charAt(index +
                6) >= 97 && str.charAt(index + 6) <= 122) || (str.charAt(index + 6) >=
              47 && str.charAt(index +
                6) <= 57) || (str.charAt(index + 6) == 43)) && ((str.charAt(index + 7)
              >= 65 && str.charAt(index +
                7) <= 90) || (str.charAt(index + 7) >= 97 && str.charAt(index + 7) <=
              122) || (str.charAt(index +
                7) >= 47 && str.charAt(index + 7) <= 57) || (str.charAt(index + 7) ==
              43)) &&
          ((str.charAt(index + 8) >= 65 && str.charAt(index + 8) <= 90) || (str.charAt(index +
          8) >= 97 &&
          str.charAt(index + 8) <= 122) || (str.charAt(index + 8) >= 47 && str.charAt(index+
              8) <= 57) ||
          (str.charAt(index + 8) == 43)) && ((str.charAt(index + 9) >= 65 && str.charAt(index+
          9) <= 90) ||
          (str.charAt(index + 9) >= 97 && str.charAt(index + 9) <= 122) || (str.charAt(index+
          9) >= 47 && str.charAt(index + 9) <= 57) || (str.charAt(index + 9) == 43)) &&
          ((str.charAt(index + 10) >=
          65 && str.charAt(index + 10) <= 90) || (str.charAt(index + 10) >= 97 &&
            str.charAt(index + 10) <=
            122) || (str.charAt(index + 10) >= 47 && str.charAt(index + 10) <= 57) ||
          (str.charAt(index + 10)
            == 43)) && ((str.charAt(index + 11) >= 65 && str.charAt(index + 11) <= 90) ||
            (str.charAt(index +
                11) >= 97 && str.charAt(index + 11) <= 122) || (str.charAt(index + 11)
              >= 47 && str.charAt(index +
                11) <= 57) || (str.charAt(index + 11) == 43)) && ((str.charAt(index +
                12) >= 65 && str.charAt(index + 12) <= 90) || (str.charAt(index + 12) >= 97 &&
              str.charAt(index + 12) <= 122) ||
            (str.charAt(index + 12) >= 47 && str.charAt(index + 12) <= 57) || (str.charAt(index+
          12) == 43)) && ((str.charAt(index + 13) >= 65 && str.charAt(index + 13) <= 90) ||
            (str.charAt(index +
                13) >= 97 && str.charAt(index + 13) <= 122) || (str.charAt(index + 13)
              >= 47 && str.charAt(index +
                13) <= 57) || (str.charAt(index + 13) == 43)) && ((str.charAt(index +
                14) >= 65 && str.charAt(index + 14) <= 90) || (str.charAt(index + 14) >= 97 &&
              str.charAt(index + 14) <= 122) ||
            (str.charAt(index + 14) >= 47 && str.charAt(index + 14) <= 57) || (str.charAt(index+
          14) == 43)) && ((str.charAt(index + 15) >= 65 && str.charAt(index + 15) <= 90) ||
            (str.charAt(index +
                15) >= 97 && str.charAt(index + 15) <= 122) || (str.charAt(index + 15)
              >= 47 && str.charAt(index +
                15) <= 57) || (str.charAt(index + 15) == 43)) && ((str.charAt(index +
                16) >= 65 && str.charAt(index + 16) <= 90) || (str.charAt(index + 16) >= 97 &&
              str.charAt(index + 16) <= 122) ||
            (str.charAt(index + 16) >= 47 && str.charAt(index + 16) <= 57) || (str.charAt(index+
          16) == 43)) && ((str.charAt(index + 17) >= 65 && str.charAt(index + 17) <= 90) ||
            (str.charAt(index +
                17) >= 97 && str.charAt(index + 17) <= 122) || (str.charAt(index + 17)
              >= 47 && str.charAt(index +
                17) <= 57) || (str.charAt(index + 17) == 43)) && ((str.charAt(index +
                18) >= 65 && str.charAt(index + 18) <= 90) || (str.charAt(index + 18) >= 97 &&
              str.charAt(index + 18) <= 122) ||
            (str.charAt(index + 18) >= 47 && str.charAt(index + 18) <= 57) || (str.charAt(index+
          18) == 43)) && ((str.charAt(index + 19) >= 65 && str.charAt(index + 19) <= 90) ||
            (str.charAt(index +
                19) >= 97 && str.charAt(index + 19) <= 122) || (str.charAt(index + 19)
              >= 47 && str.charAt(index +
                19) <= 57) || (str.charAt(index + 19) == 43)) && ((str.charAt(index +
                20) >= 65 && str.charAt(index + 20) <= 90) || (str.charAt(index + 20) >= 97 &&
              str.charAt(index + 20) <= 122) ||
            (str.charAt(index + 20) >= 47 && str.charAt(index + 20) <= 57) || (str.charAt(index+
          20) == 43)) && ((str.charAt(index + 21) >= 65 && str.charAt(index + 21) <= 90) ||
            (str.charAt(index +
                21) >= 97 && str.charAt(index + 21) <= 122) || (str.charAt(index + 21)
              >= 47 && str.charAt(index + 21) <= 57) || (str.charAt(index + 21) == 43)))) {
          index += 22;
        } else {
          index = indexStart;
          break;
        }
        if (endIndex - index > 1 && str.charAt(index) == 61 && str.charAt(index + 1) == 61) {
          index += 2;
        } else {
          index = indexStart;
          break;
        }
        index = ParseCFWS (str, index, endIndex, tokener);
      } while (false);
      if (tokener != null && index == indexStart) {
        tokener.RestoreState (state);
      }
      return index;
    }
    public static int ParseHeaderContentTransferEncoding(String str, int index,
      int endIndex, ITokener tokener) {
      int indexStart, state;
      indexStart = index;
      state = (tokener != null) ? tokener.GetState() : 0;
      do {
        index = ParseCFWS (str, index, endIndex, tokener);
        if (index < endIndex && ((str.charAt(index) >= 65 && str.charAt(index) <= 90) ||
          (str.charAt(index) >= 97 && str.charAt(index) <= 122) || (str.charAt(index) >= 48 &&
          str.charAt(index) <= 57) || (str.charAt(index) == 45))) {
          ++index;
          while (index < endIndex && ((str.charAt(index) >= 65 && str.charAt(index) <= 90) ||
            (str.charAt(index) >= 97 && str.charAt(index) <= 122) || (str.charAt(index) >= 48 &&
            str.charAt(index) <= 57) || (str.charAt(index) == 45))) {
            ++index;
          }
        } else {
          index = indexStart;
          break;
        }
        index = ParseCFWS (str, index, endIndex, tokener);
      } while (false);
      if (tokener != null && index == indexStart) {
        tokener.RestoreState (state);
      }
      return index;
    }
    public static int ParseHeaderContentTranslationType(String str, int index,
      int endIndex, ITokener tokener) {
      int i2, indexStart, indexStart2, indexTemp2, indexTemp3, state;
      indexStart = index;
      state = (tokener != null) ? tokener.GetState() : 0;
      do {
        index = ParseFWS (str, index, endIndex, tokener);
        do {
          indexTemp2 = index;
          do {
            if (endIndex - index > 7 && (str.charAt(index) & ~32) == 79 &&
              (str.charAt(index + 1) & ~32) == 82 && (str.charAt(index + 2) & ~32) == 73 &&
              (str.charAt(index + 3) & ~32) == 71 &&
              (str.charAt(index + 4) & ~32) == 73 && (str.charAt(index + 5) & ~32) == 78 &&
              (str.charAt(index + 6) & ~32) == 65 && (str.charAt(index + 7) & ~32) == 76) {
              indexTemp2 += 8;
              break;
            }
            if (endIndex - index > 8 && (str.charAt(index) & ~32) == 65 &&
              (str.charAt(index + 1) & ~32) == 85 && (str.charAt(index + 2) & ~32) == 84 &&
              (str.charAt(index + 3) & ~32) == 79 &&
              (str.charAt(index + 4) & ~32) == 77 && (str.charAt(index + 5) & ~32) == 65 &&
              (str.charAt(index + 6) & ~32) == 84 && (str.charAt(index + 7) & ~32) == 69 &&
              (str.charAt(index + 8) & ~32) == 68) {
              indexTemp2 += 9;
              break;
            }
            if (endIndex - index > 4 && (str.charAt(index) & ~32) == 72 &&
              (str.charAt(index + 1) & ~32) == 85 && (str.charAt(index + 2) & ~32) == 77 &&
              (str.charAt(index + 3) & ~32) == 65 && (str.charAt(index + 4) & ~32) == 78) {
              indexTemp2 += 5;
              break;
            }
            indexTemp3 = index;
            indexStart2 = index;
            for (i2 = 0; true; ++i2) {
              indexTemp3 = ParseAtext (str, index, endIndex, tokener);
              if (indexTemp3 == index) {
                if (i2 < 1) {
                  indexTemp2 = indexStart2;
                }
                break;
              }
              index = indexTemp3;
            }
            index = indexStart2;
            if (indexTemp3 != indexStart2) {
              indexTemp2 = indexTemp3;
              break;
            }
          } while (false);
          if (indexTemp2 != index) {
            index = indexTemp2;
          } else {
            index = indexStart;
            break;
          }
        } while (false);
        if (index == indexStart) {
          break;
        }
      } while (false);
      if (tokener != null && index == indexStart) {
        tokener.RestoreState (state);
      }
      return index;
    }
    public static int ParseHeaderContentType(String str, int index, int
      endIndex, ITokener tokener) {
      return ParseNoEncodedWords (str, index, endIndex, tokener);
    }

    public static int ParseHeaderControl(String str, int index, int
      endIndex,
      ITokener tokener) {
      int indexStart, indexStart2, indexTemp2;
      indexStart = index;
      while (index < endIndex && ((str.charAt(index) == 32) || (str.charAt(index) == 9))) {
        ++index;
      }
      if (index < endIndex && ((str.charAt(index) == 33) || (str.charAt(index) >= 35 &&
        str.charAt(index) <= 36) || (str.charAt(index) >= 45 && str.charAt(index) <= 46) ||
        (str.charAt(index)
          >= 48 && str.charAt(index) <= 57) || (str.charAt(index) >= 65 && str.charAt(index) <=
          90) || (str.charAt(index) >= 94 && str.charAt(index) <= 126) || (str.charAt(index) >= 42 &&
          str.charAt(index)
          <= 43) || (str.charAt(index) >= 38 && str.charAt(index) <= 39) || (str.charAt(index)
          == 63))) {
        ++index;
        while (index < endIndex && ((str.charAt(index) == 33) || (str.charAt(index) >= 35 &&
          str.charAt(index) <= 36) || (str.charAt(index) >= 45 && str.charAt(index) <= 46) ||
          (str.charAt(index)
            >= 48 && str.charAt(index) <= 57) || (str.charAt(index) >= 65 && str.charAt(index)
            <= 90) ||
          (str.charAt(index) >= 94 && str.charAt(index) <= 126) || (str.charAt(index) >= 42 &&
          str.charAt(index) <= 43) || (str.charAt(index) >= 38 && str.charAt(index) <= 39) ||
          (str.charAt(index) == 63))) {
          ++index;
        }
      } else {
        {
          return indexStart;
        }
      }
      while (true) {
        indexTemp2 = index;
        do {
          indexStart2 = index;
          if (index < endIndex && ((str.charAt(index) == 32) || (str.charAt(index) == 9))) {
            ++index;
            while (index < endIndex && ((str.charAt(index) == 32) || (str.charAt(index) ==
              9))) {
              ++index;
            }
          } else {
            break;
          }
          if (index < endIndex && (str.charAt(index) >= 33 && str.charAt(index) <= 126)) {
            ++index;
            while (index < endIndex && (str.charAt(index) >= 33 && str.charAt(index) <=
              126)) {
              ++index;
            }
          } else {
            index = indexStart2;
            break;
          }
          indexTemp2 = index;
          index = indexStart2;
        } while (false);
        if (indexTemp2 != index) {
          index = indexTemp2;
        } else {
          break;
        }
      }
      while (index < endIndex && ((str.charAt(index) == 32) || (str.charAt(index) == 9))) {
        ++index;
      }
      return index;
    }
    public static int ParseHeaderConversion(String str, int index,
      int endIndex,
      ITokener tokener) {
      return ParseMixerKeyword (str, index, endIndex, tokener);
    }
    public static int ParseHeaderConversionWithLoss(String str, int index, int
      endIndex, ITokener tokener) {
      return ParseMixerKeyword (str, index, endIndex, tokener);
    }
    public static int ParseHeaderDate(String str, int index, int endIndex,
      ITokener tokener) {
      return ParseDateTime (str, index, endIndex, tokener);
    }
    public static int ParseHeaderDeferredDelivery(String str, int index, int
      endIndex, ITokener tokener) {
      return ParseDateTime (str, index, endIndex, tokener);
    }
    public static int ParseHeaderDeliveryDate(String str, int index, int
      endIndex, ITokener tokener) {
      int i2, indexStart, indexStart2, indexTemp2, state, state2;
      indexStart = index;
      state = (tokener != null) ? tokener.GetState() : 0;
      do {
        indexTemp2 = ParseDateTime (str, index, endIndex, tokener);
        if (indexTemp2 != index) {
          index = indexTemp2;
          break;
        }
        state2 = (tokener != null) ? tokener.GetState() : 0;
        indexTemp2 = index;
        do {
          indexStart2 = index;
          index = ParseCFWS (str, index, endIndex, tokener);
          index = ParseCFWS (str, index, endIndex, tokener);
          if (endIndex - index > 2 && (((str.charAt(index) & ~32) == 77 &&
            (str.charAt(index + 1) & ~32) == 79 && (str.charAt(index + 2) & ~32) == 78) ||
            ((str.charAt(index) & ~32) == 84 &&
            (str.charAt(index + 1) & ~32) == 85 && (str.charAt(index + 2) & ~32) == 69) ||
            ((str.charAt(index) & ~32) == 87 && (str.charAt(index + 1) & ~32) == 69 &&
            (str.charAt(index + 2) & ~32) == 68) || ((str.charAt(index) & ~32) == 84 &&
              (str.charAt(index + 1) & ~32) == 72 &&
              (str.charAt(index + 2) & ~32) == 85) || ((str.charAt(index) & ~32) == 70 &&
              (str.charAt(index + 1) & ~32) == 82 && (str.charAt(index + 2) & ~32) == 73) ||
            ((str.charAt(index) & ~32) ==
            83 && (str.charAt(index + 1) & ~32) == 65 && (str.charAt(index + 2) & ~32)
            == 84) ||
            ((str.charAt(index) & ~32) == 83 && (str.charAt(index + 1) & ~32) == 85 &&
            (str.charAt(index + 2) & ~32) == 78))) {
            index += 3;
          } else {
            index = indexStart2;
            break;
          }
          index = ParseCFWS (str, index, endIndex, tokener);
          index = ParseCFWS (str, index, endIndex, tokener);
          if (endIndex - index > 2 && (((str.charAt(index) & ~32) == 74 &&
            (str.charAt(index + 1) & ~32) == 65 && (str.charAt(index + 2) & ~32) == 78) ||
            ((str.charAt(index) & ~32) == 70 &&
            (str.charAt(index + 1) & ~32) == 69 && (str.charAt(index + 2) & ~32) == 66) ||
            ((str.charAt(index) & ~32) == 77 && (str.charAt(index + 1) & ~32) == 65 &&
            (str.charAt(index + 2) & ~32) == 82) || ((str.charAt(index) & ~32) == 65 &&
              (str.charAt(index + 1) & ~32) == 80 &&
              (str.charAt(index + 2) & ~32) == 82) || ((str.charAt(index) & ~32) == 77 &&
              (str.charAt(index + 1) & ~32) == 65 && (str.charAt(index + 2) & ~32) == 89) ||
            ((str.charAt(index) & ~32) ==
            74 && (str.charAt(index + 1) & ~32) == 85 && (str.charAt(index + 2) & ~32)
            == 78) ||
            ((str.charAt(index) & ~32) == 74 && (str.charAt(index + 1) & ~32) == 85 &&
            (str.charAt(index + 2) & ~32) == 76) || ((str.charAt(index) & ~32) == 65 &&
              (str.charAt(index + 1) & ~32) == 85 &&
              (str.charAt(index + 2) & ~32) == 71) || ((str.charAt(index) & ~32) == 83 &&
              (str.charAt(index + 1) & ~32) == 69 && (str.charAt(index + 2) & ~32) == 80) ||
            ((str.charAt(index) & ~32) ==
            79 && (str.charAt(index + 1) & ~32) == 67 && (str.charAt(index + 2) & ~32)
            == 84) ||
            ((str.charAt(index) & ~32) == 78 && (str.charAt(index + 1) & ~32) == 79 &&
            (str.charAt(index + 2) & ~32) == 86) || ((str.charAt(index) & ~32) == 68 &&
              (str.charAt(index + 1) & ~32) == 69 && (str.charAt(index + 2) & ~32) == 67))) {
            index += 3;
          } else {
            index = indexStart2;
            break;
          }
          index = ParseCFWS (str, index, endIndex, tokener);
          for (i2 = 0; i2 < 2; ++i2) {
            if (index < endIndex && (str.charAt(index) >= 48 && str.charAt(index) <= 57)) {
              ++index;
            } else if (i2 < 1) {
              index = indexStart2;
              break;
            } else {
              break;
            }
          }
          if (index == indexStart2) {
            break;
          }
          index = ParseCFWS (str, index, endIndex, tokener);
          if (endIndex - index > 2 && ((str.charAt(index) >= 48 && str.charAt(index) <= 57) &&
            (str.charAt(index + 1) >= 48 && str.charAt(index + 1) <= 57)) && (str.charAt(index+
                2) == 58)) {
            index += 3;
          } else {
            index = indexStart2;
            break;
          }
          if (endIndex - index > 2 && ((str.charAt(index) >= 48 && str.charAt(index) <= 57) &&
            (str.charAt(index + 1) >= 48 && str.charAt(index + 1) <= 57)) && (str.charAt(index+
                2) == 58)) {
            index += 3;
          } else {
            index = indexStart2;
            break;
          }
          if (endIndex - index > 1 && ((str.charAt(index) >= 48 && str.charAt(index) <= 57) &&
            (str.charAt(index + 1) >= 48 && str.charAt(index + 1) <= 57))) {
            index += 2;
          } else {
            index = indexStart2;
            break;
          }
          index = ParseCFWS (str, index, endIndex, tokener);
          for (i2 = 0; true; ++i2) {
            if (index < endIndex && (str.charAt(index) >= 48 && str.charAt(index) <= 57)) {
              ++index;
            } else if (i2 < 4) {
              index = indexStart2;
              break;
            } else {
              break;
            }
          }
          if (index == indexStart2) {
            break;
          }
          index = ParseCFWS (str, index, endIndex, tokener);
          indexTemp2 = index;
          index = indexStart2;
        } while (false);
        if (indexTemp2 != index) {
          index = indexTemp2;
          break;
        }
        if (tokener != null) {
          tokener.RestoreState (state2);
        }
      } while (false);
      if (tokener != null && index == indexStart) {
        tokener.RestoreState (state);
      }
      return index;
    }
    public static int ParseHeaderDiscloseRecipients(String str, int index, int
      endIndex, ITokener tokener) {
      return ParseMixerKeyword (str, index, endIndex, tokener);
    }
    public static int ParseHeaderDispositionNotificationOptions(String str, int
      index, int endIndex, ITokener tokener) {
      int indexStart, indexStart2, indexStart3, indexTemp2, indexTemp3, state,
          state2, state3, tx2, tx3, tx4;
      indexStart = index;
      state = (tokener != null) ? tokener.GetState() : 0;
      do {
        index = ParseCFWS (str, index, endIndex, tokener);
        index = ParseCFWS (str, index, endIndex, tokener);
        if (index < endIndex && ((str.charAt(index) == 33) || (str.charAt(index) >= 35 &&
          str.charAt(index) <= 36) || (str.charAt(index) == 38) || (str.charAt(index) == 43) ||
          (str.charAt(index)
            >= 45 && str.charAt(index) <= 46) || (str.charAt(index) >= 48 && str.charAt(index)
            <= 57) ||
          (str.charAt(index) >= 65 && str.charAt(index) <= 90) || (str.charAt(index) >= 94 &&
          str.charAt(index) <= 126))) {
          ++index;
          while (index < endIndex && ((str.charAt(index) == 33) || (str.charAt(index) >= 35 &&
            str.charAt(index) <= 36) || (str.charAt(index) == 38) || (str.charAt(index) ==
              43) || (str.charAt(index)
              >= 45 && str.charAt(index) <= 46) || (str.charAt(index) >= 48 &&
              str.charAt(index) <= 57) ||
            (str.charAt(index) >= 65 && str.charAt(index) <= 90) || (str.charAt(index) >= 94 &&
            str.charAt(index) <= 126))) {
            ++index;
          }
        } else {
          index = indexStart;
          break;
        }
        if (endIndex - index > 8 && (str.charAt(index) == 61) && (((str.charAt(index + 1) & ~32)
          == 82 && (str.charAt(index + 2) & ~32) == 69 && (str.charAt(index + 3) & ~32) ==
          81 && (str.charAt(index + 4) & ~32) == 85 && (str.charAt(index + 5) & ~32) == 73 &&
          (str.charAt(index + 6) & ~32) == 82 && (str.charAt(index + 7) & ~32) == 69 &&
          (str.charAt(index + 8) & ~32) ==
          68) || ((str.charAt(index + 1) & ~32) == 79 && (str.charAt(index + 2) & ~32)
            == 80 &&
            (str.charAt(index + 3) & ~32) == 84 && (str.charAt(index + 4) & ~32) == 73 &&
            (str.charAt(index + 5) & ~32) == 79 && (str.charAt(index + 6) & ~32) == 78 &&
            (str.charAt(index + 7) & ~32) == 65 && (str.charAt(index + 8) & ~32) == 76))) {
          index += 9;
        } else {
          index = indexStart;
          break;
        }
        if (index < endIndex && (str.charAt(index) == 44)) {
          ++index;
        } else {
          index = indexStart;
          break;
        }
        tx2 = ParseValue (str, index, endIndex, tokener);
        if (tx2 == index) {
          index = indexStart;
          break;
        }
        index = tx2;
        while (true) {
          state2 = (tokener != null) ? tokener.GetState() : 0;
          indexTemp2 = index;
          do {
            indexStart2 = index;
            if (index < endIndex && (str.charAt(index) == 44)) {
              ++index;
            } else {
              break;
            }
            tx3 = ParseValue (str, index, endIndex, tokener);
            if (tx3 == index) {
              index = indexStart2;
              break;
            }
            index = tx3;
            indexTemp2 = index;
            index = indexStart2;
          } while (false);
          if (indexTemp2 != index) {
            index = indexTemp2;
          } else {
            if (tokener != null) {
              tokener.RestoreState (state2);
            }
            break;
          }
        }
        while (true) {
          state2 = (tokener != null) ? tokener.GetState() : 0;
          indexTemp2 = index;
          do {
            indexStart2 = index;
            if (index < endIndex && (str.charAt(index) == 59)) {
              ++index;
            } else {
              break;
            }
            index = ParseCFWS (str, index, endIndex, tokener);
            if (index < endIndex && ((str.charAt(index) == 33) || (str.charAt(index) >= 35 &&
              str.charAt(index) <= 36) || (str.charAt(index) == 38) || (str.charAt(index) ==
                43) || (str.charAt(index)
                >= 45 && str.charAt(index) <= 46) || (str.charAt(index) >= 48 &&
                str.charAt(index) <= 57) ||
              (str.charAt(index) >= 65 && str.charAt(index) <= 90) || (str.charAt(index) >= 94 &&
              str.charAt(index) <= 126))) {
              ++index;
              while (index < endIndex && ((str.charAt(index) == 33) || (str.charAt(index)
                >= 35 && str.charAt(index) <= 36) || (str.charAt(index) == 38) || (str.charAt(index)
                  == 43) || (str.charAt(index)
                  >= 45 && str.charAt(index) <= 46) || (str.charAt(index) >= 48 &&
                  str.charAt(index) <= 57) ||
                (str.charAt(index) >= 65 && str.charAt(index) <= 90) || (str.charAt(index) >=
                94 && str.charAt(index) <= 126))) {
                ++index;
              }
            } else {
              index = indexStart2;
              break;
            }
            if (endIndex - index > 8 && (str.charAt(index) == 61) && (((str.charAt(index +
              1) & ~32)
              == 82 && (str.charAt(index + 2) & ~32) == 69 && (str.charAt(index + 3) & ~32) == 81 &&
              (str.charAt(index + 4) & ~32) == 85 && (str.charAt(index + 5) & ~32) ==
              73 && (str.charAt(index +
                  6) & ~32) == 82 && (str.charAt(index + 7) & ~32) == 69 &&
              (str.charAt(index + 8) & ~32) ==
              68) || ((str.charAt(index + 1) & ~32) == 79 && (str.charAt(index + 2) & ~32)
                == 80 &&
                (str.charAt(index + 3) & ~32) == 84 && (str.charAt(index + 4) & ~32) ==
                73 && (str.charAt(index +
                    5) & ~32) == 79 && (str.charAt(index + 6) & ~32) == 78 &&
                (str.charAt(index + 7) & ~32) ==
                65 && (str.charAt(index + 8) & ~32) == 76))) {
              index += 9;
            } else {
              index = indexStart2;
              break;
            }
            if (index < endIndex && (str.charAt(index) == 44)) {
              ++index;
            } else {
              index = indexStart2;
              break;
            }
            tx3 = ParseValue (str, index, endIndex, tokener);
            if (tx3 == index) {
              index = indexStart2;
              break;
            }
            index = tx3;
            while (true) {
              state3 = (tokener != null) ? tokener.GetState() : 0;
              indexTemp3 = index;
              do {
                indexStart3 = index;
                if (index < endIndex && (str.charAt(index) == 44)) {
                  ++index;
                } else {
                  break;
                }
                tx4 = ParseValue (str, index, endIndex, tokener);
                if (tx4 == index) {
                  index = indexStart3;
                  break;
                }
                index = tx4;
                indexTemp3 = index;
                index = indexStart3;
              } while (false);
              if (indexTemp3 != index) {
                index = indexTemp3;
              } else {
                if (tokener != null) {
                  tokener.RestoreState (state3);
                }
                break;
              }
            }
            indexTemp2 = index;
            index = indexStart2;
          } while (false);
          if (indexTemp2 != index) {
            index = indexTemp2;
          } else {
            if (tokener != null) {
              tokener.RestoreState (state2);
            }
            break;
          }
        }
        index = ParseCFWS (str, index, endIndex, tokener);
      } while (false);
      if (tokener != null && index == indexStart) {
        tokener.RestoreState (state);
      }
      return index;
    }
    public static int ParseHeaderDispositionNotificationTo(String str, int
      index, int endIndex, ITokener tokener) {
      return ParseMailboxList (str, index, endIndex, tokener);
    }
    public static int ParseHeaderDistribution(String str, int index, int
      endIndex, ITokener tokener) {
      int indexStart, indexStart2, indexTemp2, state, state2, tx2, tx3;
      indexStart = index;
      state = (tokener != null) ? tokener.GetState() : 0;
      do {
        while (index < endIndex && ((str.charAt(index) == 32) || (str.charAt(index) == 9))) {
          ++index;
        }
        tx2 = ParseDistName (str, index, endIndex, tokener);
        if (tx2 == index) {
          index = indexStart;
          break;
        }
        index = tx2;
        while (true) {
          state2 = (tokener != null) ? tokener.GetState() : 0;
          indexTemp2 = index;
          do {
            indexStart2 = index;
            index = ParseFWS (str, index, endIndex, tokener);
            if (index < endIndex && (str.charAt(index) == 44)) {
              ++index;
            } else {
              index = indexStart2;
              break;
            }
            index = ParseFWS (str, index, endIndex, tokener);
            tx3 = ParseDistName (str, index, endIndex, tokener);
            if (tx3 == index) {
              index = indexStart2;
              break;
            }
            index = tx3;
            indexTemp2 = index;
            index = indexStart2;
          } while (false);
          if (indexTemp2 != index) {
            index = indexTemp2;
          } else {
            if (tokener != null) {
              tokener.RestoreState (state2);
            }
            break;
          }
        }
        while (index < endIndex && ((str.charAt(index) == 32) || (str.charAt(index) == 9))) {
          ++index;
        }
      } while (false);
      if (tokener != null && index == indexStart) {
        tokener.RestoreState (state);
      }
      return index;
    }
    public static int ParseHeaderDkimSignature(String str, int index, int
      endIndex, ITokener tokener) {
      return ParseNoEncodedWords (str, index, endIndex, tokener);
    }

    public static int ParseHeaderEdiintFeatures(String str, int
      index, int endIndex, ITokener tokener) {
      int indexStart, indexStart2, indexTemp2;
      indexStart = index;
      if (index < endIndex && ((str.charAt(index) == 32) || (str.charAt(index) == 9))) {
        ++index;
      }
      if (index < endIndex && ((str.charAt(index) >= 48 && str.charAt(index) <= 57) ||
        (str.charAt(index) >= 65 && str.charAt(index) <= 90) || (str.charAt(index) >= 97 &&
        str.charAt(index) <= 122) || (str.charAt(index) == 45))) {
        ++index;
        while (index < endIndex && ((str.charAt(index) >= 48 && str.charAt(index) <= 57) ||
          (str.charAt(index) >= 65 && str.charAt(index) <= 90) || (str.charAt(index) >= 97 &&
          str.charAt(index) <= 122) || (str.charAt(index) == 45))) {
          ++index;
        }
      } else {
        {
          return indexStart;
        }
      }
      while (true) {
        indexTemp2 = index;
        do {
          indexStart2 = index;
          if (index < endIndex && ((str.charAt(index) == 32) || (str.charAt(index) == 9))) {
            ++index;
          }
          if (index < endIndex && (str.charAt(index) == 44)) {
            ++index;
          } else {
            index = indexStart2;
            break;
          }
          if (index < endIndex && ((str.charAt(index) == 32) || (str.charAt(index) == 9))) {
            ++index;
          }
          if (index < endIndex && ((str.charAt(index) >= 48 && str.charAt(index) <= 57) ||
            (str.charAt(index) >= 65 && str.charAt(index) <= 90) || (str.charAt(index) >= 97 &&
            str.charAt(index) <= 122) || (str.charAt(index) == 45))) {
            ++index;
            while (index < endIndex && ((str.charAt(index) >= 48 && str.charAt(index) <=
              57) ||
              (str.charAt(index) >= 65 && str.charAt(index) <= 90) || (str.charAt(index) >= 97 &&
              str.charAt(index) <= 122) || (str.charAt(index) == 45))) {
              ++index;
            }
          } else {
            index = indexStart2;
            break;
          }
          indexTemp2 = index;
          index = indexStart2;
        } while (false);
        if (indexTemp2 != index) {
          index = indexTemp2;
        } else {
          break;
        }
      }
      return index;
    }
    public static int ParseHeaderEesstVersion(String str, int index, int
      endIndex, ITokener tokener) {
      int indexStart, state;
      indexStart = index;
      state = (tokener != null) ? tokener.GetState() : 0;
      do {
        index = ParseFWS (str, index, endIndex, tokener);
        if (endIndex - index > 2 && str.charAt(index) == 49 && str.charAt(index + 1) == 46 &&
          str.charAt(index + 2) == 48) {
          index += 3;
        } else {
          index = indexStart;
          break;
        }
      } while (false);
      if (tokener != null && index == indexStart) {
        tokener.RestoreState (state);
      }
      return index;
    }
    public static int ParseHeaderEncoding(String str, int index, int endIndex,
      ITokener tokener) {
      int i, i2, indexStart, indexStart2, indexTemp2, indexTemp3, state, state2;
      indexStart = index;
      state = (tokener != null) ? tokener.GetState() : 0;
      do {
        while (true) {
          state2 = (tokener != null) ? tokener.GetState() : 0;
          indexTemp2 = index;
          do {
            indexStart2 = index;
            index = ParseCFWS (str, index, endIndex, tokener);
            if (index < endIndex && (str.charAt(index) >= 48 && str.charAt(index) <= 57)) {
              ++index;
              while (index < endIndex && (str.charAt(index) >= 48 && str.charAt(index) <=
                57)) {
                ++index;
              }
            } else {
              index = indexStart2;
              break;
            }
            index = ParseCFWS (str, index, endIndex, tokener);
            for (i2 = 0; true; ++i2) {
              indexTemp3 = ParseEncodingKeyword (str, index, endIndex, tokener);
              if (indexTemp3 != index) {
                index = indexTemp3;
              } else {
                if (i2 < 1) {
                  index = indexStart2;
                }
                break;
              }
            }
            if (index == indexStart2) {
              break;
            }
            index = ParseCFWS (str, index, endIndex, tokener);
            if (index < endIndex && (str.charAt(index) == 44)) {
              ++index;
            } else {
              index = indexStart2;
              break;
            }
            index = ParseCFWS (str, index, endIndex, tokener);
            indexTemp2 = index;
            index = indexStart2;
          } while (false);
          if (indexTemp2 != index) {
            index = indexTemp2;
          } else {
            if (tokener != null) {
              tokener.RestoreState (state2);
            }
            break;
          }
        }
        index = ParseEncodingCount (str, index, endIndex, tokener);
        for (i = 0; true; ++i) {
          indexTemp2 = ParseEncodingKeyword (str, index, endIndex, tokener);
          if (indexTemp2 != index) {
            index = indexTemp2;
          } else {
            if (i < 1) {
              index = indexStart;
            }
            break;
          }
        }
        if (index == indexStart) {
          break;
        }
      } while (false);
      if (tokener != null && index == indexStart) {
        tokener.RestoreState (state);
      }
      return index;
    }
    public static int ParseHeaderEncrypted(String str, int index, int endIndex,
      ITokener tokener) {
      int indexStart, indexStart2, indexTemp2, state, tx2, tx3;
      indexStart = index;
      state = (tokener != null) ? tokener.GetState() : 0;
      do {
        tx2 = ParseWord (str, index, endIndex, tokener);
        if (tx2 == index) {
          break;
        }
        index = tx2;
        do {
          indexTemp2 = index;
          do {
            indexStart2 = index;
            if (index < endIndex && (str.charAt(index) == 44)) {
              ++index;
            } else {
              break;
            }
            tx3 = ParseWord (str, index, endIndex, tokener);
            if (tx3 == index) {
              index = indexStart2;
              break;
            }
            index = tx3;
            indexTemp2 = index;
            index = indexStart2;
          } while (false);
          if (indexTemp2 != index) {
            index = indexTemp2;
          } else {
            break;
          }
        } while (false);
      } while (false);
      if (tokener != null && index == indexStart) {
        tokener.RestoreState (state);
      }
      return index;
    }
    public static int ParseHeaderExpandedDate(String str, int index, int
      endIndex, ITokener tokener) {
      int i, i3, indexStart, indexStart2, indexStart3, indexTemp2, indexTemp3,
          indexTemp4, state, state3;
      indexStart = index;
      state = (tokener != null) ? tokener.GetState() : 0;
      do {
        do {
          indexTemp2 = index;
          do {
            indexStart2 = index;
            index = ParseCFWS (str, index, endIndex, tokener);
            if (endIndex - index > 2 && (((str.charAt(index) & ~32) == 77 &&
              (str.charAt(index + 1) & ~32) == 79 && (str.charAt(index + 2) & ~32)
              == 78) || ((str.charAt(index) & ~32) == 84 &&
                (str.charAt(index + 1) & ~32) == 85 && (str.charAt(index + 2) & ~32) ==
                69) ||
              ((str.charAt(index) & ~32) == 87 && (str.charAt(index + 1) & ~32) == 69 &&
              (str.charAt(index + 2) & ~32) == 68) || ((str.charAt(index) & ~32) == 84 &&
                (str.charAt(index + 1) & ~32) == 72 &&
                (str.charAt(index + 2) & ~32) == 85) || ((str.charAt(index) & ~32) == 70 &&
                (str.charAt(index + 1) & ~32) == 82 && (str.charAt(index + 2) & ~32) == 73) ||
              ((str.charAt(index) & ~32) ==
              83 && (str.charAt(index + 1) & ~32) == 65 && (str.charAt(index + 2) & ~32)
              == 84) ||
              ((str.charAt(index) & ~32) == 83 && (str.charAt(index + 1) & ~32) == 85 &&
              (str.charAt(index + 2) & ~32) == 78))) {
              index += 3;
            } else {
              index = indexStart2;
              break;
            }
            index = ParseCFWS (str, index, endIndex, tokener);
            if (index < endIndex && (str.charAt(index) == 44)) {
              ++index;
            } else {
              index = indexStart2;
              break;
            }
            indexTemp2 = index;
            index = indexStart2;
          } while (false);
          if (indexTemp2 != index) {
            index = indexTemp2;
          } else {
            break;
          }
        } while (false);
        index = ParseCFWS (str, index, endIndex, tokener);
        for (i = 0; i < 2; ++i) {
          if (index < endIndex && (str.charAt(index) >= 48 && str.charAt(index) <= 57)) {
            ++index;
          } else if (i < 1) {
            index = indexStart;
            break;
          } else {
            break;
          }
        }
        if (index == indexStart) {
          break;
        }
        index = ParseCFWS (str, index, endIndex, tokener);
        if (endIndex - index > 2 && (((str.charAt(index) & ~32) == 74 &&
          (str.charAt(index + 1) & ~32) == 65 && (str.charAt(index + 2) & ~32) == 78) ||
          ((str.charAt(index) & ~32) == 70 &&
          (str.charAt(index + 1) & ~32) == 69 && (str.charAt(index + 2) & ~32) == 66) ||
          ((str.charAt(index) & ~32) == 77 && (str.charAt(index + 1) & ~32) == 65 &&
          (str.charAt(index + 2) & ~32) == 82) || ((str.charAt(index) & ~32) == 65 &&
            (str.charAt(index + 1) & ~32) == 80 &&
            (str.charAt(index + 2) & ~32) == 82) || ((str.charAt(index) & ~32) == 77 &&
            (str.charAt(index + 1) & ~32) == 65 && (str.charAt(index + 2) & ~32) == 89) ||
          ((str.charAt(index) & ~32) ==
          74 && (str.charAt(index + 1) & ~32) == 85 && (str.charAt(index + 2) & ~32)
          == 78) || ((str.charAt(index) & ~32) == 74 && (str.charAt(index + 1) & ~32) == 85 &&
            (str.charAt(index + 2) & ~32) == 76) || ((str.charAt(index) & ~32) == 65 &&
            (str.charAt(index + 1) & ~32) == 85 &&
            (str.charAt(index + 2) & ~32) == 71) || ((str.charAt(index) & ~32) == 83 &&
            (str.charAt(index + 1) & ~32) == 69 && (str.charAt(index + 2) & ~32) == 80) ||
          ((str.charAt(index) & ~32) ==
          79 && (str.charAt(index + 1) & ~32) == 67 && (str.charAt(index + 2) & ~32)
          == 84) || ((str.charAt(index) & ~32) == 78 && (str.charAt(index + 1) & ~32) == 79 &&
            (str.charAt(index + 2) & ~32) == 86) || ((str.charAt(index) & ~32) == 68 &&
            (str.charAt(index + 1) & ~32) == 69 && (str.charAt(index + 2) & ~32) == 67))) {
          index += 3;
        } else {
          index = indexStart;
          break;
        }
        index = ParseCFWS (str, index, endIndex, tokener);
        if (endIndex - index > 1 && ((str.charAt(index) >= 48 && str.charAt(index) <= 57) &&
          (str.charAt(index + 1) >= 48 && str.charAt(index + 1) <= 57))) {
          index += 2;
        } else {
          index = indexStart;
          break;
        }
        while (index < endIndex && (str.charAt(index) >= 48 && str.charAt(index) <= 57)) {
          ++index;
        }
        index = ParseCFWS (str, index, endIndex, tokener);
        if (endIndex - index > 1 && ((str.charAt(index) >= 48 && str.charAt(index) <= 57) &&
          (str.charAt(index + 1) >= 48 && str.charAt(index + 1) <= 57))) {
          index += 2;
        } else {
          index = indexStart;
          break;
        }
        index = ParseCFWS (str, index, endIndex, tokener);
        if (index < endIndex && (str.charAt(index) == 58)) {
          ++index;
        } else {
          index = indexStart;
          break;
        }
        index = ParseCFWS (str, index, endIndex, tokener);
        if (endIndex - index > 1 && ((str.charAt(index) >= 48 && str.charAt(index) <= 57) &&
          (str.charAt(index + 1) >= 48 && str.charAt(index + 1) <= 57))) {
          index += 2;
        } else {
          index = indexStart;
          break;
        }
        do {
          indexTemp2 = index;
          do {
            indexStart2 = index;
            index = ParseCFWS (str, index, endIndex, tokener);
            if (index < endIndex && (str.charAt(index) == 58)) {
              ++index;
            } else {
              index = indexStart2;
              break;
            }
            index = ParseCFWS (str, index, endIndex, tokener);
            if (endIndex - index > 1 && ((str.charAt(index) >= 48 && str.charAt(index) <=
              57) && (str.charAt(index + 1) >= 48 && str.charAt(index + 1) <= 57))) {
              index += 2;
            } else {
              index = indexStart2;
              break;
            }
            indexTemp2 = index;
            index = indexStart2;
          } while (false);
          if (indexTemp2 != index) {
            index = indexTemp2;
          } else {
            break;
          }
        } while (false);
        do {
          indexTemp2 = index;
          do {
            state3 = (tokener != null) ? tokener.GetState() : 0;
            indexTemp3 = index;
            do {
              indexStart3 = index;
              for (i3 = 0; true; ++i3) {
                indexTemp4 = ParseFWS (str, index, endIndex, tokener);
                if (indexTemp4 != index) {
                  index = indexTemp4;
                } else {
                  if (i3 < 1) {
                    index = indexStart3;
                  }
                  break;
                }
              }
              if (index == indexStart3) {
                break;
              }
              if (index < endIndex && ((str.charAt(index) == 43) || (str.charAt(index) ==
                45))) {
                ++index;
              } else {
                index = indexStart3;
                break;
              }
              if (endIndex - index > 3 && ((str.charAt(index) >= 48 && str.charAt(index)
                <= 57) && (str.charAt(index + 1) >= 48 && str.charAt(index + 1) <= 57) &&
                (str.charAt(index + 2) >= 48 &&
                  str.charAt(index + 2) <= 57) && (str.charAt(index + 3) >= 48 &&
                  str.charAt(index + 3) <= 57))) {
                index += 4;
              } else {
                index = indexStart3;
                break;
              }
              indexTemp3 = index;
              index = indexStart3;
            } while (false);
            if (indexTemp3 != index) {
              indexTemp2 = indexTemp3;
              break;
            }
            if (tokener != null) {
              tokener.RestoreState (state3);
            }
            state3 = (tokener != null) ? tokener.GetState() : 0;
            indexTemp3 = index;
            do {
              indexStart3 = index;
              index = ParseCFWS (str, index, endIndex, tokener);
              do {
                indexTemp4 = index;
                if (endIndex - index > 1 && (str.charAt(index) & ~32) == 85 &&
                  (str.charAt(index + 1) & ~32) == 84) {
                  indexTemp4 += 2;
                } else if (endIndex - index > 2 && (str.charAt(index) & ~32) == 71 &&
                  (str.charAt(index + 1) & ~32) == 77 && (str.charAt(index + 2) & ~32) ==
                  84) {
                  indexTemp4 += 3;
                } else if (endIndex - index > 2 && (str.charAt(index) & ~32) == 69 &&
                  (str.charAt(index + 1) & ~32) == 83 && (str.charAt(index + 2) & ~32) ==
                  84) {
                  indexTemp4 += 3;
                } else if (endIndex - index > 2 && (str.charAt(index) & ~32) == 69 &&
                  (str.charAt(index + 1) & ~32) == 68 && (str.charAt(index + 2) & ~32) ==
                  84) {
                  indexTemp4 += 3;
                } else if (endIndex - index > 2 && (str.charAt(index) & ~32) == 67 &&
                  (str.charAt(index + 1) & ~32) == 83 && (str.charAt(index + 2) & ~32) ==
                  84) {
                  indexTemp4 += 3;
                } else if (endIndex - index > 2 && (str.charAt(index) & ~32) == 67 &&
                  (str.charAt(index + 1) & ~32) == 68 && (str.charAt(index + 2) & ~32) ==
                  84) {
                  indexTemp4 += 3;
                } else if (endIndex - index > 2 && (str.charAt(index) & ~32) == 77 &&
                  (str.charAt(index + 1) & ~32) == 83 && (str.charAt(index + 2) & ~32) ==
                  84) {
                  indexTemp4 += 3;
                } else if (endIndex - index > 2 && (str.charAt(index) & ~32) == 77 &&
                  (str.charAt(index + 1) & ~32) == 68 && (str.charAt(index + 2) & ~32) ==
                  84) {
                  indexTemp4 += 3;
                } else if (endIndex - index > 2 && (str.charAt(index) & ~32) == 80 &&
                  (str.charAt(index + 1) & ~32) == 83 && (str.charAt(index + 2) & ~32) ==
                  84) {
                  indexTemp4 += 3;
                } else if (endIndex - index > 2 && (str.charAt(index) & ~32) == 80 &&
                  (str.charAt(index + 1) & ~32) == 68 && (str.charAt(index + 2) & ~32) ==
                  84) {
                  indexTemp4 += 3;
                } else if (index < endIndex && ((str.charAt(index) >= 65 &&
                  str.charAt(index) <= 73) ||
                  (str.charAt(index) >= 75 && str.charAt(index) <= 90) || (str.charAt(index) >=
                  97 && str.charAt(index) <=
                  105) || (str.charAt(index) >= 107 && str.charAt(index) <= 122))) {
                  ++indexTemp4;
                }
                if (indexTemp4 != index) {
                  index = indexTemp4;
                } else {
                  index = indexStart3;
                  break;
                }
              } while (false);
              if (index == indexStart3) {
                break;
              }
              index = ParseCFWS (str, index, endIndex, tokener);
              indexTemp3 = index;
              index = indexStart3;
            } while (false);
            if (indexTemp3 != index) {
              indexTemp2 = indexTemp3;
              break;
            }
            if (tokener != null) {
              tokener.RestoreState (state3);
            }
          } while (false);
          if (indexTemp2 != index) {
            index = indexTemp2;
          } else {
            index = indexStart;
            break;
          }
        } while (false);
        if (index == indexStart) {
          break;
        }
      } while (false);
      if (tokener != null && index == indexStart) {
        tokener.RestoreState (state);
      }
      return index;
    }
    public static int ParseHeaderFollowupTo(String str, int index,
      int endIndex,
      ITokener tokener) {
      int indexStart, indexStart2, indexTemp2, state;
      indexStart = index;
      state = (tokener != null) ? tokener.GetState() : 0;
      do {
        indexTemp2 = ParseNewsgroupList (str, index, endIndex, tokener);
        if (indexTemp2 != index) {
          index = indexTemp2;
          break;
        }
        indexTemp2 = index;
        do {
          indexStart2 = index;
          while (index < endIndex && ((str.charAt(index) == 32) || (str.charAt(index) ==
            9))) {
            ++index;
          }
          if (endIndex - index > 5 && (str.charAt(index) & ~32) == 80 &&
            (str.charAt(index + 1) & ~32) == 79 && (str.charAt(index + 2) & ~32) == 83 &&
            (str.charAt(index + 3) & ~32) == 84 &&
            (str.charAt(index + 4) & ~32) == 69 && (str.charAt(index + 5) & ~32) == 82) {
            index += 6;
          } else {
            index = indexStart2;
            break;
          }
          while (index < endIndex && ((str.charAt(index) == 32) || (str.charAt(index) ==
            9))) {
            ++index;
          }
          indexTemp2 = index;
          index = indexStart2;
        } while (false);
        if (indexTemp2 != index) {
          index = indexTemp2;
          break;
        }
      } while (false);
      if (tokener != null && index == indexStart) {
        tokener.RestoreState (state);
      }
      return index;
    }
    public static int ParseHeaderFormSub(String str, int index, int endIndex,
      ITokener tokener) {
      int i, i2, indexStart, indexStart2, indexTemp2, indexTemp3, state, state2,
          tx3;
      indexStart = index;
      state = (tokener != null) ? tokener.GetState() : 0;
      do {
        for (i = 0; true; ++i) {
          indexTemp2 = ParseFWS (str, index, endIndex, tokener);
          if (indexTemp2 != index) {
            index = indexTemp2;
          } else {
            if (i < 1) {
              index = indexStart;
            }
            break;
          }
        }
        if (index == indexStart) {
          break;
        }
        if (endIndex - index > 2 && (str.charAt(index) & ~32) == 86 &&
          str.charAt(index + 1) == 61 && str.charAt(index + 2) == 49) {
          index += 3;
        } else {
          index = indexStart;
          break;
        }
        while (true) {
          state2 = (tokener != null) ? tokener.GetState() : 0;
          indexTemp2 = index;
          do {
            indexStart2 = index;
            for (i2 = 0; true; ++i2) {
              indexTemp3 = ParseFWS (str, index, endIndex, tokener);
              if (indexTemp3 != index) {
                index = indexTemp3;
              } else {
                if (i2 < 1) {
                  index = indexStart2;
                }
                break;
              }
            }
            if (index == indexStart2) {
              break;
            }
            if (index < endIndex && (str.charAt(index) == 59)) {
              ++index;
            } else {
              index = indexStart2;
              break;
            }
            for (i2 = 0; true; ++i2) {
              indexTemp3 = ParseFWS (str, index, endIndex, tokener);
              if (indexTemp3 != index) {
                index = indexTemp3;
              } else {
                if (i2 < 1) {
                  index = indexStart2;
                }
                break;
              }
            }
            if (index == indexStart2) {
              break;
            }
            tx3 = ParseFsarg (str, index, endIndex, tokener);
            if (tx3 == index) {
              index = indexStart2;
              break;
            }
            index = tx3;
            indexTemp2 = index;
            index = indexStart2;
          } while (false);
          if (indexTemp2 != index) {
            index = indexTemp2;
          } else {
            if (tokener != null) {
              tokener.RestoreState (state2);
            }
            break;
          }
        }
      } while (false);
      if (tokener != null && index == indexStart) {
        tokener.RestoreState (state);
      }
      return index;
    }
    public static int ParseHeaderFrom(String str, int index, int endIndex,
      ITokener tokener) {
      int indexStart, indexTemp2, state;
      indexStart = index;
      state = (tokener != null) ? tokener.GetState() : 0;
      do {
        indexTemp2 = ParseMailboxList (str, index, endIndex, tokener);
        if (indexTemp2 != index) {
          index = indexTemp2;
          break;
        }
        indexTemp2 = ParseAddressList (str, index, endIndex, tokener);
        if (indexTemp2 != index) {
          index = indexTemp2;
          break;
        }
      } while (false);
      if (tokener != null && index == indexStart) {
        tokener.RestoreState (state);
      }
      return index;
    }
    public static int ParseHeaderGenerateDeliveryReport(String str, int index,
      int endIndex, ITokener tokener) {
      return ParseFWS (str, index, endIndex, tokener);
    }
    public static int ParseHeaderImportance(String str, int index,
      int endIndex,
      ITokener tokener) {
      return ParseMixerKeyword (str, index, endIndex, tokener);
    }
    public static int ParseHeaderInReplyTo(String str, int index, int endIndex,
      ITokener tokener) {
      int indexStart, indexTemp2, indexTemp3, state, state2;
      indexStart = index;
      state = (tokener != null) ? tokener.GetState() : 0;
      do {
        while (true) {
          state2 = (tokener != null) ? tokener.GetState() : 0;
          indexTemp2 = index;
          do {
            indexTemp3 = ParsePhrase (str, index, endIndex, tokener);
            if (indexTemp3 != index) {
              indexTemp2 = indexTemp3;
              break;
            }
            indexTemp3 = ParseMsgId (str, index, endIndex, tokener);
            if (indexTemp3 != index) {
              indexTemp2 = indexTemp3;
              break;
            }
          } while (false);
          if (indexTemp2 != index) {
            index = indexTemp2;
          } else {
            if (tokener != null) {
              tokener.RestoreState (state2);
            }
            break;
          }
        }
      } while (false);
      if (tokener != null && index == indexStart) {
        tokener.RestoreState (state);
      }
      return index;
    }
    public static int ParseHeaderIncompleteCopy(String str, int index, int
      endIndex, ITokener tokener) {
      return ParseFWS (str, index, endIndex, tokener);
    }
    public static int ParseHeaderInjectionDate(String str, int index, int
      endIndex, ITokener tokener) {
      return ParseDateTime (str, index, endIndex, tokener);
    }
    public static int ParseHeaderInjectionInfo(String str, int index, int
      endIndex, ITokener tokener) {
      return ParseNoEncodedWords (str, index, endIndex, tokener);
    }
    public static int ParseHeaderJabberId(String str, int index, int endIndex,
      ITokener tokener) {
      int indexStart, indexStart2, indexTemp2, indexTemp3, state;
      indexStart = index;
      state = (tokener != null) ? tokener.GetState() : 0;
      do {
        if (index < endIndex && (str.charAt(index) == 32)) {
          ++index;
        } else {
          break;
        }
        while (index < endIndex && ((str.charAt(index) == 32) || (str.charAt(index) == 9))) {
          ++index;
        }
        do {
          indexTemp2 = index;
          do {
            indexStart2 = index;
            while (true) {
              indexTemp3 = ParseNodeid (str, index, endIndex, tokener);
              if (indexTemp3 != index) {
                index = indexTemp3;
              } else {
                break;
              }
            }
            if (index < endIndex && (str.charAt(index) == 64)) {
              ++index;
            } else {
              index = indexStart2;
              break;
            }
            indexTemp2 = index;
            index = indexStart2;
          } while (false);
          if (indexTemp2 != index) {
            index = indexTemp2;
          } else {
            break;
          }
        } while (false);
        while (true) {
          indexTemp2 = ParseRegName (str, index, endIndex, tokener);
          if (indexTemp2 != index) {
            index = indexTemp2;
          } else {
            break;
          }
        }
        do {
          indexTemp2 = index;
          do {
            indexStart2 = index;
            if (index < endIndex && (str.charAt(index) == 47)) {
              ++index;
            } else {
              break;
            }
            while (true) {
              indexTemp3 = ParseResid (str, index, endIndex, tokener);
              if (indexTemp3 != index) {
                index = indexTemp3;
              } else {
                break;
              }
            }
            indexTemp2 = index;
            index = indexStart2;
          } while (false);
          if (indexTemp2 != index) {
            index = indexTemp2;
          } else {
            break;
          }
        } while (false);
        while (index < endIndex && ((str.charAt(index) == 32) || (str.charAt(index) == 9))) {
          ++index;
        }
      } while (false);
      if (tokener != null && index == indexStart) {
        tokener.RestoreState (state);
      }
      return index;
    }
    public static int ParseHeaderKeywords(String str, int index, int endIndex,
      ITokener tokener) {
      int indexStart, indexStart2, indexTemp2, state, state2, tx2, tx3;
      indexStart = index;
      state = (tokener != null) ? tokener.GetState() : 0;
      do {
        tx2 = ParsePhrase (str, index, endIndex, tokener);
        if (tx2 == index) {
          break;
        }
        index = tx2;
        while (true) {
          state2 = (tokener != null) ? tokener.GetState() : 0;
          indexTemp2 = index;
          do {
            indexStart2 = index;
            if (index < endIndex && (str.charAt(index) == 44)) {
              ++index;
            } else {
              break;
            }
            tx3 = ParsePhrase (str, index, endIndex, tokener);
            if (tx3 == index) {
              index = indexStart2;
              break;
            }
            index = tx3;
            indexTemp2 = index;
            index = indexStart2;
          } while (false);
          if (indexTemp2 != index) {
            index = indexTemp2;
          } else {
            if (tokener != null) {
              tokener.RestoreState (state2);
            }
            break;
          }
        }
      } while (false);
      if (tokener != null && index == indexStart) {
        tokener.RestoreState (state);
      }
      return index;
    }
    public static int ParseHeaderLanguage(String str, int index, int endIndex,
      ITokener tokener) {
      int indexStart, indexStart2, indexTemp2, state, tx3;
      indexStart = index;
      state = (tokener != null) ? tokener.GetState() : 0;
      do {
        index = ParseCFWS (str, index, endIndex, tokener);
        if (endIndex - index > 1 && (((str.charAt(index) >= 65 && str.charAt(index) <= 90) ||
          (str.charAt(index) >= 97 && str.charAt(index) <= 122)) && ((str.charAt(index + 1)
          >= 65 && str.charAt(index + 1) <= 90) || (str.charAt(index + 1) >= 97 &&
            str.charAt(index + 1) <= 122)))) {
          index += 2;
        } else {
          index = indexStart;
          break;
        }
        while (index < endIndex && ((str.charAt(index) >= 65 && str.charAt(index) <= 90) ||
          (str.charAt(index) >= 97 && str.charAt(index) <= 122))) {
          ++index;
        }
        do {
          indexTemp2 = index;
          do {
            indexStart2 = index;
            if (index < endIndex && (str.charAt(index) == 40)) {
              ++index;
            } else {
              break;
            }
            tx3 = ParseLanguageDescription (str, index, endIndex, tokener);
            if (tx3 == index) {
              index = indexStart2;
              break;
            }
            index = tx3;
            if (index < endIndex && (str.charAt(index) == 41)) {
              ++index;
            } else {
              index = indexStart2;
              break;
            }
            indexTemp2 = index;
            index = indexStart2;
          } while (false);
          if (indexTemp2 != index) {
            index = indexTemp2;
          } else {
            break;
          }
        } while (false);
        index = ParseFWS (str, index, endIndex, tokener);
      } while (false);
      if (tokener != null && index == indexStart) {
        tokener.RestoreState (state);
      }
      return index;
    }
    public static int ParseHeaderLatestDeliveryTime(String str, int index, int
      endIndex, ITokener tokener) {
      return ParseDateTime (str, index, endIndex, tokener);
    }
    public static int ParseHeaderListArchive(String str, int index, int
      endIndex, ITokener tokener) {
      return ParseListHeaderUrlList (str, index, endIndex, tokener);
    }
    public static int ParseHeaderListHelp(String str, int index, int endIndex,
      ITokener tokener) {
      return ParseListHeaderUrlList (str, index, endIndex, tokener);
    }
    public static int ParseHeaderListId(String str, int index, int endIndex,
      ITokener tokener) {
      int i, i2, indexStart, indexStart2, indexTemp2, indexTemp3, state, state2;
      indexStart = index;
      state = (tokener != null) ? tokener.GetState() : 0;
      do {
        do {
          indexTemp2 = index;
          do {
            indexTemp3 = ParsePhrase (str, index, endIndex, tokener);
            if (indexTemp3 != index) {
              indexTemp2 = indexTemp3;
              break;
            }
            indexTemp3 = ParseCFWS (str, index, endIndex, tokener);
            if (indexTemp3 != index) {
              indexTemp2 = indexTemp3;
              break;
            }
          } while (false);
          if (indexTemp2 != index) {
            index = indexTemp2;
          } else {
            break;
          }
        } while (false);
        if (index < endIndex && (str.charAt(index) == 60)) {
          ++index;
        } else {
          index = indexStart;
          break;
        }
        index = ParseFWS (str, index, endIndex, tokener);
        for (i = 0; true; ++i) {
          indexTemp2 = ParseAtext (str, index, endIndex, tokener);
          if (indexTemp2 != index) {
            index = indexTemp2;
          } else {
            if (i < 1) {
              index = indexStart;
            }
            break;
          }
        }
        if (index == indexStart) {
          break;
        }
        index = ParseFWS (str, index, endIndex, tokener);
        if (index < endIndex && (str.charAt(index) == 46)) {
          ++index;
        } else {
          index = indexStart;
          break;
        }
        index = ParseFWS (str, index, endIndex, tokener);
        for (i = 0; true; ++i) {
          indexTemp2 = ParseAtext (str, index, endIndex, tokener);
          if (indexTemp2 != index) {
            index = indexTemp2;
          } else {
            if (i < 1) {
              index = indexStart;
            }
            break;
          }
        }
        if (index == indexStart) {
          break;
        }
        while (true) {
          state2 = (tokener != null) ? tokener.GetState() : 0;
          indexTemp2 = index;
          do {
            indexStart2 = index;
            if (index < endIndex && (str.charAt(index) == 46)) {
              ++index;
            } else {
              break;
            }
            for (i2 = 0; true; ++i2) {
              indexTemp3 = ParseAtext (str, index, endIndex, tokener);
              if (indexTemp3 != index) {
                index = indexTemp3;
              } else {
                if (i2 < 1) {
                  index = indexStart2;
                }
                break;
              }
            }
            if (index == indexStart2) {
              break;
            }
            indexTemp2 = index;
            index = indexStart2;
          } while (false);
          if (indexTemp2 != index) {
            index = indexTemp2;
          } else {
            if (tokener != null) {
              tokener.RestoreState (state2);
            }
            break;
          }
        }
        index = ParseFWS (str, index, endIndex, tokener);
        if (index < endIndex && (str.charAt(index) == 62)) {
          ++index;
        } else {
          index = indexStart;
          break;
        }
      } while (false);
      if (tokener != null && index == indexStart) {
        tokener.RestoreState (state);
      }
      return index;
    }
    public static int ParseHeaderListOwner(String str, int index, int endIndex,
      ITokener tokener) {
      return ParseListHeaderUrlList (str, index, endIndex, tokener);
    }
    public static int ParseHeaderListPost(String str, int index, int endIndex,
      ITokener tokener) {
      int indexStart, indexStart2, indexTemp2, state, state2;
      indexStart = index;
      state = (tokener != null) ? tokener.GetState() : 0;
      do {
        state2 = (tokener != null) ? tokener.GetState() : 0;
        indexTemp2 = index;
        do {
          indexStart2 = index;
          index = ParseCFWS (str, index, endIndex, tokener);
          if (endIndex - index > 1 && (str.charAt(index) & ~32) == 78 &&
            (str.charAt(index + 1) & ~32) == 79) {
            index += 2;
          } else {
            index = indexStart2;
            break;
          }
          index = ParseCFWS (str, index, endIndex, tokener);
          indexTemp2 = index;
          index = indexStart2;
        } while (false);
        if (indexTemp2 != index) {
          index = indexTemp2;
          break;
        }
        if (tokener != null) {
          tokener.RestoreState (state2);
        }
        indexTemp2 = ParseListHeaderUrlList (str, index, endIndex, tokener);
        if (indexTemp2 != index) {
          index = indexTemp2;
          break;
        }
      } while (false);
      if (tokener != null && index == indexStart) {
        tokener.RestoreState (state);
      }
      return index;
    }
    public static int ParseHeaderListSubscribe(String str, int index, int
      endIndex, ITokener tokener) {
      return ParseListHeaderUrlList (str, index, endIndex, tokener);
    }
    public static int ParseHeaderListUnsubscribe(String str, int index, int
      endIndex, ITokener tokener) {
      return ParseListHeaderUrlList (str, index, endIndex, tokener);
    }

    public static int ParseHeaderListUnsubscribePost(String str, int
      index, int endIndex, ITokener tokener) {
      int indexStart = index;
      if (index < endIndex && ((str.charAt(index) == 32) || (str.charAt(index) == 9))) {
        ++index;
      }
      if (endIndex - index > 25 && (str.charAt(index) & ~32) == 76 &&
        (str.charAt(index + 1) & ~32) == 73 && (str.charAt(index + 2) & ~32) == 83 &&
        (str.charAt(index + 3) & ~32) == 84 &&
        str.charAt(index + 4) == 45 && (str.charAt(index + 5) & ~32) == 85 &&
        (str.charAt(index + 6) & ~32) == 78 && (str.charAt(index + 7) & ~32) == 83 &&
        (str.charAt(index + 8) & ~32) == 85 &&
        (str.charAt(index + 9) & ~32) == 66 && (str.charAt(index + 10) & ~32) == 83 &&
        (str.charAt(index + 11) & ~32) == 67 && (str.charAt(index + 12) & ~32) == 82 &&
        (str.charAt(index +
            13) & ~32) == 73 && (str.charAt(index + 14) & ~32) == 66 && (str.charAt(index+
            15) & ~32)
        == 69 && str.charAt(index + 16) == 61 && (str.charAt(index + 17) & ~32) == 79 &&
        (str.charAt(index + 18) & ~32) == 78 && (str.charAt(index + 19) & ~32) == 69 &&
        str.charAt(index +
          20) == 45 && (str.charAt(index + 21) & ~32) == 67 && (str.charAt(index + 22) & ~32) ==
        76 && (str.charAt(index + 23) & ~32) == 73 && (str.charAt(index + 24) & ~32) == 67 &&
        (str.charAt(index + 25) & ~32) == 75) {
        index += 26;
      } else {
        {
          return indexStart;
        }
      }
      return index;
    }
    public static int ParseHeaderMessageContext(String str, int index, int
      endIndex, ITokener tokener) {
      int indexStart, state;
      indexStart = index;
      state = (tokener != null) ? tokener.GetState() : 0;
      do {
        index = ParseCFWS (str, index, endIndex, tokener);
        if (index < endIndex && ((str.charAt(index) >= 65 && str.charAt(index) <= 90) ||
          (str.charAt(index) >= 97 && str.charAt(index) <= 122) || (str.charAt(index) >= 48 &&
          str.charAt(index) <= 57) || (str.charAt(index) == 45))) {
          ++index;
          while (index < endIndex && ((str.charAt(index) >= 65 && str.charAt(index) <= 90) ||
            (str.charAt(index) >= 97 && str.charAt(index) <= 122) || (str.charAt(index) >= 48 &&
            str.charAt(index) <= 57) || (str.charAt(index) == 45))) {
            ++index;
          }
        } else {
          index = indexStart;
          break;
        }
        index = ParseCFWS (str, index, endIndex, tokener);
      } while (false);
      if (tokener != null && index == indexStart) {
        tokener.RestoreState (state);
      }
      return index;
    }
    public static int ParseHeaderMessageId(String str, int index, int endIndex,
      ITokener tokener) {
      return ParseMsgId (str, index, endIndex, tokener);
    }
    public static int ParseHeaderMimeVersion(String str, int index, int
      endIndex, ITokener tokener) {
      int indexStart, state;
      indexStart = index;
      state = (tokener != null) ? tokener.GetState() : 0;
      do {
        index = ParseCFWS (str, index, endIndex, tokener);
        if (index < endIndex && (str.charAt(index) >= 48 && str.charAt(index) <= 57)) {
          ++index;
          while (index < endIndex && (str.charAt(index) >= 48 && str.charAt(index) <= 57)) {
            ++index;
          }
        } else {
          index = indexStart;
          break;
        }
        index = ParseCFWS (str, index, endIndex, tokener);
        if (index < endIndex && (str.charAt(index) == 46)) {
          ++index;
        } else {
          index = indexStart;
          break;
        }
        index = ParseCFWS (str, index, endIndex, tokener);
        if (index < endIndex && (str.charAt(index) >= 48 && str.charAt(index) <= 57)) {
          ++index;
          while (index < endIndex && (str.charAt(index) >= 48 && str.charAt(index) <= 57)) {
            ++index;
          }
        } else {
          index = indexStart;
          break;
        }
        index = ParseCFWS (str, index, endIndex, tokener);
      } while (false);
      if (tokener != null && index == indexStart) {
        tokener.RestoreState (state);
      }
      return index;
    }
    public static int ParseHeaderMmhsAcp127MessageIdentifier(String str, int
      index, int endIndex, ITokener tokener) {
      int i, indexStart, state;
      indexStart = index;
      state = (tokener != null) ? tokener.GetState() : 0;
      do {
        index = ParseFWS (str, index, endIndex, tokener);
        for (i = 0; i < 69; ++i) {
          if (index < endIndex && ((str.charAt(index) >= 65 && str.charAt(index) <= 90) ||
            (str.charAt(index) >= 97 && str.charAt(index) <= 122) || (str.charAt(index) == 32) ||
            (str.charAt(index) >= 39 && str.charAt(index) <= 41) || (str.charAt(index) >= 43 &&
            str.charAt(index) <= 58) || (str.charAt(index) == 61) || (str.charAt(index) == 63))) {
            ++index;
          } else if (i < 1) {
            index = indexStart;
            break;
          } else {
            break;
          }
        }
        if (index == indexStart) {
          break;
        }
        index = ParseFWS (str, index, endIndex, tokener);
      } while (false);
      if (tokener != null && index == indexStart) {
        tokener.RestoreState (state);
      }
      return index;
    }
    public static int ParseHeaderMmhsAuthorizingUsers(String str, int index,
      int endIndex, ITokener tokener) {
      return ParseMailboxList (str, index, endIndex, tokener);
    }
    public static int ParseHeaderMmhsCodressMessageIndicator(String str, int
      index, int endIndex, ITokener tokener) {
      int indexStart, state, tx2;
      indexStart = index;
      state = (tokener != null) ? tokener.GetState() : 0;
      do {
        index = ParseFWS (str, index, endIndex, tokener);
        tx2 = ParseNonnegInteger (str, index, endIndex, tokener);
        if (tx2 == index) {
          index = indexStart;
          break;
        }
        index = tx2;
        index = ParseFWS (str, index, endIndex, tokener);
      } while (false);
      if (tokener != null && index == indexStart) {
        tokener.RestoreState (state);
      }
      return index;
    }
    public static int ParseHeaderMmhsCopyPrecedence(String str, int index, int
      endIndex, ITokener tokener) {
      int indexStart, indexStart3, indexTemp2, indexTemp3, state;
      indexStart = index;
      state = (tokener != null) ? tokener.GetState() : 0;
      do {
        index = ParseFWS (str, index, endIndex, tokener);
        do {
          indexTemp2 = index;
          do {
            if (index < endIndex && (str.charAt(index) == 48)) {
              ++indexTemp2;
              break;
            }
            indexTemp3 = index;
            do {
              indexStart3 = index;
              if (index < endIndex && (str.charAt(index) >= 49 && str.charAt(index) <= 57)) {
                ++index;
              } else {
                break;
              }
              while (index < endIndex && (str.charAt(index) >= 48 && str.charAt(index) <=
                57)) {
                ++index;
              }
              indexTemp3 = index;
              index = indexStart3;
            } while (false);
            if (indexTemp3 != index) {
              indexTemp2 = indexTemp3;
              break;
            }
            if (endIndex - index > 7 && (str.charAt(index) & ~32) == 68 &&
              (str.charAt(index + 1) & ~32) == 69 && (str.charAt(index + 2) & ~32) == 70 &&
              (str.charAt(index + 3) & ~32) == 69 &&
              (str.charAt(index + 4) & ~32) == 82 && (str.charAt(index + 5) & ~32) == 82 &&
              (str.charAt(index + 6) & ~32) == 69 && (str.charAt(index + 7) & ~32) == 68) {
              indexTemp2 += 8;
              break;
            }
            if (endIndex - index > 6 && (str.charAt(index) & ~32) == 82 &&
              (str.charAt(index + 1) & ~32) == 79 && (str.charAt(index + 2) & ~32) == 85 &&
              (str.charAt(index + 3) & ~32) == 84 &&
              (str.charAt(index + 4) & ~32) == 73 && (str.charAt(index + 5) & ~32) == 78 &&
              (str.charAt(index + 6) & ~32) == 69) {
              indexTemp2 += 7;
              break;
            }
            if (endIndex - index > 7 && (str.charAt(index) & ~32) == 80 &&
              (str.charAt(index + 1) & ~32) == 82 && (str.charAt(index + 2) & ~32) == 73 &&
              (str.charAt(index + 3) & ~32) == 79 &&
              (str.charAt(index + 4) & ~32) == 82 && (str.charAt(index + 5) & ~32) == 73 &&
              (str.charAt(index + 6) & ~32) == 84 && (str.charAt(index + 7) & ~32) == 89) {
              indexTemp2 += 8;
              break;
            }
            if (endIndex - index > 8 && (str.charAt(index) & ~32) == 73 &&
              (str.charAt(index + 1) & ~32) == 77 && (str.charAt(index + 2) & ~32) == 77 &&
              (str.charAt(index + 3) & ~32) == 69 &&
              (str.charAt(index + 4) & ~32) == 68 && (str.charAt(index + 5) & ~32) == 73 &&
              (str.charAt(index + 6) & ~32) == 65 && (str.charAt(index + 7) & ~32) == 84 &&
              (str.charAt(index + 8) & ~32) == 69) {
              indexTemp2 += 9;
              break;
            }
            if (endIndex - index > 4 && (str.charAt(index) & ~32) == 70 &&
              (str.charAt(index + 1) & ~32) == 76 && (str.charAt(index + 2) & ~32) == 65 &&
              (str.charAt(index + 3) & ~32) == 83 && (str.charAt(index + 4) & ~32) == 72) {
              indexTemp2 += 5;
              break;
            }
            if (endIndex - index > 7 && (str.charAt(index) & ~32) == 79 &&
              (str.charAt(index + 1) & ~32) == 86 && (str.charAt(index + 2) & ~32) == 69 &&
              (str.charAt(index + 3) & ~32) == 82 &&
              (str.charAt(index + 4) & ~32) == 82 && (str.charAt(index + 5) & ~32) == 73 &&
              (str.charAt(index + 6) & ~32) == 68 && (str.charAt(index + 7) & ~32) == 69) {
              indexTemp2 += 8;
              break;
            }
          } while (false);
          if (indexTemp2 != index) {
            index = indexTemp2;
          } else {
            index = indexStart;
            break;
          }
        } while (false);
        if (index == indexStart) {
          break;
        }
        index = ParseCFWS (str, index, endIndex, tokener);
      } while (false);
      if (tokener != null && index == indexStart) {
        tokener.RestoreState (state);
      }
      return index;
    }
    public static int ParseHeaderMmhsExemptedAddress(String str, int index, int
      endIndex, ITokener tokener) {
      int indexStart, indexStart2, indexTemp2, indexTemp3, indexTemp4, state,
          state2, tx2;
      indexStart = index;
      state = (tokener != null) ? tokener.GetState() : 0;
      do {
        index = ParseFWS (str, index, endIndex, tokener);
        while (true) {
          state2 = (tokener != null) ? tokener.GetState() : 0;
          indexTemp2 = index;
          do {
            indexStart2 = index;
            index = ParseCFWS (str, index, endIndex, tokener);
            if (index < endIndex && (str.charAt(index) == 44)) {
              ++index;
            } else {
              index = indexStart2;
              break;
            }
            indexTemp2 = index;
            index = indexStart2;
          } while (false);
          if (indexTemp2 != index) {
            index = indexTemp2;
          } else {
            if (tokener != null) {
              tokener.RestoreState (state2);
            }
            break;
          }
        }
        tx2 = ParseAddress (str, index, endIndex, tokener);
        if (tx2 == index) {
          index = indexStart;
          break;
        }
        index = tx2;
        while (true) {
          state2 = (tokener != null) ? tokener.GetState() : 0;
          indexTemp2 = index;
          do {
            indexStart2 = index;
            if (index < endIndex && (str.charAt(index) == 44)) {
              ++index;
            } else {
              break;
            }
            do {
              indexTemp3 = index;
              do {
                indexTemp4 = ParseAddress (str, index, endIndex, tokener);
                if (indexTemp4 != index) {
                  indexTemp3 = indexTemp4;
                  break;
                }
                indexTemp4 = ParseCFWS (str, index, endIndex, tokener);
                if (indexTemp4 != index) {
                  indexTemp3 = indexTemp4;
                  break;
                }
              } while (false);
              if (indexTemp3 != index) {
                index = indexTemp3;
              } else {
                break;
              }
            } while (false);
            indexTemp2 = index;
            index = indexStart2;
          } while (false);
          if (indexTemp2 != index) {
            index = indexTemp2;
          } else {
            if (tokener != null) {
              tokener.RestoreState (state2);
            }
            break;
          }
        }
        index = ParseFWS (str, index, endIndex, tokener);
      } while (false);
      if (tokener != null && index == indexStart) {
        tokener.RestoreState (state);
      }
      return index;
    }
    public static int ParseHeaderMmhsExtendedAuthorisationInfo(String str, int
      index, int endIndex, ITokener tokener) {
      int i, indexStart, indexStart2, indexTemp2, state, tx2;
      indexStart = index;
      state = (tokener != null) ? tokener.GetState() : 0;
      do {
        index = ParseFWS (str, index, endIndex, tokener);
        do {
          indexTemp2 = index;
          do {
            indexStart2 = index;
            index = ParseCFWS (str, index, endIndex, tokener);
            if (endIndex - index > 2 && (((str.charAt(index) & ~32) == 77 &&
              (str.charAt(index + 1) & ~32) == 79 && (str.charAt(index + 2) & ~32)
              == 78) || ((str.charAt(index) & ~32) == 84 &&
                (str.charAt(index + 1) & ~32) == 85 && (str.charAt(index + 2) & ~32) ==
                69) ||
              ((str.charAt(index) & ~32) == 87 && (str.charAt(index + 1) & ~32) == 69 &&
              (str.charAt(index + 2) & ~32) == 68) || ((str.charAt(index) & ~32) == 84 &&
                (str.charAt(index + 1) & ~32) == 72 &&
                (str.charAt(index + 2) & ~32) == 85) || ((str.charAt(index) & ~32) == 70 &&
                (str.charAt(index + 1) & ~32) == 82 && (str.charAt(index + 2) & ~32) == 73) ||
              ((str.charAt(index) & ~32) ==
              83 && (str.charAt(index + 1) & ~32) == 65 && (str.charAt(index + 2) & ~32)
              == 84) ||
              ((str.charAt(index) & ~32) == 83 && (str.charAt(index + 1) & ~32) == 85 &&
              (str.charAt(index + 2) & ~32) == 78))) {
              index += 3;
            } else {
              index = indexStart2;
              break;
            }
            index = ParseCFWS (str, index, endIndex, tokener);
            if (index < endIndex && (str.charAt(index) == 44)) {
              ++index;
            } else {
              index = indexStart2;
              break;
            }
            indexTemp2 = index;
            index = indexStart2;
          } while (false);
          if (indexTemp2 != index) {
            index = indexTemp2;
          } else {
            break;
          }
        } while (false);
        index = ParseCFWS (str, index, endIndex, tokener);
        for (i = 0; i < 2; ++i) {
          if (index < endIndex && (str.charAt(index) >= 48 && str.charAt(index) <= 57)) {
            ++index;
          } else if (i < 1) {
            index = indexStart;
            break;
          } else {
            break;
          }
        }
        if (index == indexStart) {
          break;
        }
        index = ParseCFWS (str, index, endIndex, tokener);
        if (endIndex - index > 2 && (((str.charAt(index) & ~32) == 74 &&
          (str.charAt(index + 1) & ~32) == 65 && (str.charAt(index + 2) & ~32) == 78) ||
          ((str.charAt(index) & ~32) == 70 &&
          (str.charAt(index + 1) & ~32) == 69 && (str.charAt(index + 2) & ~32) == 66) ||
          ((str.charAt(index) & ~32) == 77 && (str.charAt(index + 1) & ~32) == 65 &&
          (str.charAt(index + 2) & ~32) == 82) || ((str.charAt(index) & ~32) == 65 &&
            (str.charAt(index + 1) & ~32) == 80 &&
            (str.charAt(index + 2) & ~32) == 82) || ((str.charAt(index) & ~32) == 77 &&
            (str.charAt(index + 1) & ~32) == 65 && (str.charAt(index + 2) & ~32) == 89) ||
          ((str.charAt(index) & ~32) ==
          74 && (str.charAt(index + 1) & ~32) == 85 && (str.charAt(index + 2) & ~32)
          == 78) || ((str.charAt(index) & ~32) == 74 && (str.charAt(index + 1) & ~32) == 85 &&
            (str.charAt(index + 2) & ~32) == 76) || ((str.charAt(index) & ~32) == 65 &&
            (str.charAt(index + 1) & ~32) == 85 &&
            (str.charAt(index + 2) & ~32) == 71) || ((str.charAt(index) & ~32) == 83 &&
            (str.charAt(index + 1) & ~32) == 69 && (str.charAt(index + 2) & ~32) == 80) ||
          ((str.charAt(index) & ~32) ==
          79 && (str.charAt(index + 1) & ~32) == 67 && (str.charAt(index + 2) & ~32)
          == 84) || ((str.charAt(index) & ~32) == 78 && (str.charAt(index + 1) & ~32) == 79 &&
            (str.charAt(index + 2) & ~32) == 86) || ((str.charAt(index) & ~32) == 68 &&
            (str.charAt(index + 1) & ~32) == 69 && (str.charAt(index + 2) & ~32) == 67))) {
          index += 3;
        } else {
          index = indexStart;
          break;
        }
        index = ParseCFWS (str, index, endIndex, tokener);
        if (endIndex - index > 1 && ((str.charAt(index) >= 48 && str.charAt(index) <= 57) &&
          (str.charAt(index + 1) >= 48 && str.charAt(index + 1) <= 57))) {
          index += 2;
        } else {
          index = indexStart;
          break;
        }
        while (index < endIndex && (str.charAt(index) >= 48 && str.charAt(index) <= 57)) {
          ++index;
        }
        index = ParseCFWS (str, index, endIndex, tokener);
        index = ParseCFWS (str, index, endIndex, tokener);
        if (endIndex - index > 1 && ((str.charAt(index) >= 48 && str.charAt(index) <= 57) &&
          (str.charAt(index + 1) >= 48 && str.charAt(index + 1) <= 57))) {
          index += 2;
        } else {
          index = indexStart;
          break;
        }
        index = ParseCFWS (str, index, endIndex, tokener);
        if (index < endIndex && (str.charAt(index) == 58)) {
          ++index;
        } else {
          index = indexStart;
          break;
        }
        index = ParseCFWS (str, index, endIndex, tokener);
        if (endIndex - index > 1 && ((str.charAt(index) >= 48 && str.charAt(index) <= 57) &&
          (str.charAt(index + 1) >= 48 && str.charAt(index + 1) <= 57))) {
          index += 2;
        } else {
          index = indexStart;
          break;
        }
        do {
          indexTemp2 = index;
          do {
            indexStart2 = index;
            index = ParseCFWS (str, index, endIndex, tokener);
            if (index < endIndex && (str.charAt(index) == 58)) {
              ++index;
            } else {
              index = indexStart2;
              break;
            }
            index = ParseCFWS (str, index, endIndex, tokener);
            if (endIndex - index > 1 && ((str.charAt(index) >= 48 && str.charAt(index) <=
              57) && (str.charAt(index + 1) >= 48 && str.charAt(index + 1) <= 57))) {
              index += 2;
            } else {
              index = indexStart2;
              break;
            }
            indexTemp2 = index;
            index = indexStart2;
          } while (false);
          if (indexTemp2 != index) {
            index = indexTemp2;
          } else {
            break;
          }
        } while (false);
        tx2 = ParseZone (str, index, endIndex, tokener);
        if (tx2 == index) {
          index = indexStart;
          break;
        }
        index = tx2;
        index = ParseCFWS (str, index, endIndex, tokener);
      } while (false);
      if (tokener != null && index == indexStart) {
        tokener.RestoreState (state);
      }
      return index;
    }
    public static int ParseHeaderMmhsHandlingInstructions(String str,
      int index,
      int endIndex, ITokener tokener) {
      int i, i2, indexStart, indexStart2, indexTemp2, state, state2;
      indexStart = index;
      state = (tokener != null) ? tokener.GetState() : 0;
      do {
        index = ParseFWS (str, index, endIndex, tokener);
        for (i = 0; i < 69; ++i) {
          if (index < endIndex && ((str.charAt(index) >= 65 && str.charAt(index) <= 90) ||
            (str.charAt(index) >= 97 && str.charAt(index) <= 122) || (str.charAt(index) == 32) ||
            (str.charAt(index) >= 39 && str.charAt(index) <= 41) || (str.charAt(index) >= 43 &&
            str.charAt(index) <= 58) || (str.charAt(index) == 61) || (str.charAt(index) == 63))) {
            ++index;
          } else if (i < 1) {
            index = indexStart;
            break;
          } else {
            break;
          }
        }
        if (index == indexStart) {
          break;
        }
        while (true) {
          state2 = (tokener != null) ? tokener.GetState() : 0;
          indexTemp2 = index;
          do {
            indexStart2 = index;
            index = ParseFWS (str, index, endIndex, tokener);
            if (index < endIndex && (str.charAt(index) == 59)) {
              ++index;
            } else {
              index = indexStart2;
              break;
            }
            index = ParseFWS (str, index, endIndex, tokener);
            for (i2 = 0; i2 < 69; ++i2) {
              if (index < endIndex && ((str.charAt(index) >= 65 && str.charAt(index) <= 90) ||
                (str.charAt(index) >= 97 && str.charAt(index) <= 122) || (str.charAt(index) ==
                32) || (str.charAt(index)
                  >= 39 && str.charAt(index) <= 41) || (str.charAt(index) >= 43 &&
                  str.charAt(index) <= 58) ||
                (str.charAt(index) == 61) || (str.charAt(index) == 63))) {
                ++index;
              } else if (i2 < 1) {
                index = indexStart2;
                break;
              } else {
                break;
              }
            }
            if (index == indexStart2) {
              break;
            }
            indexTemp2 = index;
            index = indexStart2;
          } while (false);
          if (indexTemp2 != index) {
            index = indexTemp2;
          } else {
            if (tokener != null) {
              tokener.RestoreState (state2);
            }
            break;
          }
        }
        index = ParseFWS (str, index, endIndex, tokener);
      } while (false);
      if (tokener != null && index == indexStart) {
        tokener.RestoreState (state);
      }
      return index;
    }
    public static int ParseHeaderMmhsMessageInstructions(String str, int index,
      int endIndex, ITokener tokener) {
      int i, i2, indexStart, indexStart2, indexTemp2, state, state2;
      indexStart = index;
      state = (tokener != null) ? tokener.GetState() : 0;
      do {
        index = ParseFWS (str, index, endIndex, tokener);
        for (i = 0; i < 69; ++i) {
          if (index < endIndex && ((str.charAt(index) >= 65 && str.charAt(index) <= 90) ||
            (str.charAt(index) >= 97 && str.charAt(index) <= 122) || (str.charAt(index) == 32) ||
            (str.charAt(index) >= 39 && str.charAt(index) <= 41) || (str.charAt(index) >= 43 &&
            str.charAt(index) <= 58) || (str.charAt(index) == 61) || (str.charAt(index) == 63))) {
            ++index;
          } else if (i < 1) {
            index = indexStart;
            break;
          } else {
            break;
          }
        }
        if (index == indexStart) {
          break;
        }
        while (true) {
          state2 = (tokener != null) ? tokener.GetState() : 0;
          indexTemp2 = index;
          do {
            indexStart2 = index;
            index = ParseFWS (str, index, endIndex, tokener);
            if (index < endIndex && (str.charAt(index) == 59)) {
              ++index;
            } else {
              index = indexStart2;
              break;
            }
            index = ParseFWS (str, index, endIndex, tokener);
            for (i2 = 0; i2 < 69; ++i2) {
              if (index < endIndex && ((str.charAt(index) >= 65 && str.charAt(index) <= 90) ||
                (str.charAt(index) >= 97 && str.charAt(index) <= 122) || (str.charAt(index) ==
                32) || (str.charAt(index)
                  >= 39 && str.charAt(index) <= 41) || (str.charAt(index) >= 43 &&
                  str.charAt(index) <= 58) ||
                (str.charAt(index) == 61) || (str.charAt(index) == 63))) {
                ++index;
              } else if (i2 < 1) {
                index = indexStart2;
                break;
              } else {
                break;
              }
            }
            if (index == indexStart2) {
              break;
            }
            indexTemp2 = index;
            index = indexStart2;
          } while (false);
          if (indexTemp2 != index) {
            index = indexTemp2;
          } else {
            if (tokener != null) {
              tokener.RestoreState (state2);
            }
            break;
          }
        }
        index = ParseFWS (str, index, endIndex, tokener);
      } while (false);
      if (tokener != null && index == indexStart) {
        tokener.RestoreState (state);
      }
      return index;
    }
    public static int ParseHeaderMmhsMessageType(String str, int index, int
      endIndex, ITokener tokener) {
      int i2, indexStart, indexStart2, indexStart3, indexTemp2, indexTemp3,
          state;
      indexStart = index;
      state = (tokener != null) ? tokener.GetState() : 0;
      do {
        index = ParseFWS (str, index, endIndex, tokener);
        do {
          indexTemp2 = index;
          do {
            if (index < endIndex && (str.charAt(index) == 48)) {
              ++indexTemp2;
              break;
            }
            indexTemp3 = index;
            do {
              indexStart3 = index;
              if (index < endIndex && (str.charAt(index) >= 49 && str.charAt(index) <= 57)) {
                ++index;
              } else {
                break;
              }
              while (index < endIndex && (str.charAt(index) >= 48 && str.charAt(index) <=
                57)) {
                ++index;
              }
              indexTemp3 = index;
              index = indexStart3;
            } while (false);
            if (indexTemp3 != index) {
              indexTemp2 = indexTemp3;
              break;
            }
            if (endIndex - index > 7 && (str.charAt(index) & ~32) == 69 &&
              (str.charAt(index + 1) & ~32) == 88 && (str.charAt(index + 2) & ~32) == 69 &&
              (str.charAt(index + 3) & ~32) == 82 &&
              (str.charAt(index + 4) & ~32) == 67 && (str.charAt(index + 5) & ~32) == 73 &&
              (str.charAt(index + 6) & ~32) == 83 && (str.charAt(index + 7) & ~32) == 69) {
              indexTemp2 += 8;
              break;
            }
            if (endIndex - index > 8 && (str.charAt(index) & ~32) == 79 &&
              (str.charAt(index + 1) & ~32) == 80 && (str.charAt(index + 2) & ~32) == 69 &&
              (str.charAt(index + 3) & ~32) == 82 &&
              (str.charAt(index + 4) & ~32) == 65 && (str.charAt(index + 5) & ~32) == 84 &&
              (str.charAt(index + 6) & ~32) == 73 && (str.charAt(index + 7) & ~32) == 79 &&
              (str.charAt(index + 8) & ~32) == 78) {
              indexTemp2 += 9;
              break;
            }
            if (endIndex - index > 6 && (str.charAt(index) & ~32) == 80 &&
              (str.charAt(index + 1) & ~32) == 82 && (str.charAt(index + 2) & ~32) == 79 &&
              (str.charAt(index + 3) & ~32) == 74 &&
              (str.charAt(index + 4) & ~32) == 69 && (str.charAt(index + 5) & ~32) == 67 &&
              (str.charAt(index + 6) & ~32) == 84) {
              indexTemp2 += 7;
              break;
            }
            if (endIndex - index > 4 && (str.charAt(index) & ~32) == 68 &&
              (str.charAt(index + 1) & ~32) == 82 && (str.charAt(index + 2) & ~32) == 73 &&
              (str.charAt(index + 3) & ~32) == 76 && (str.charAt(index + 4) & ~32) == 76) {
              indexTemp2 += 5;
              break;
            }
          } while (false);
          if (indexTemp2 != index) {
            index = indexTemp2;
          } else {
            index = indexStart;
            break;
          }
        } while (false);
        if (index == indexStart) {
          break;
        }
        index = ParseCFWS (str, index, endIndex, tokener);
        do {
          indexTemp2 = index;
          do {
            indexStart2 = index;
            if (index < endIndex && (str.charAt(index) == 59)) {
              ++index;
            } else {
              break;
            }
            index = ParseFWS (str, index, endIndex, tokener);
            if (endIndex - index > 9 && (str.charAt(index) & ~32) == 73 &&
              (str.charAt(index + 1) & ~32) == 68 && (str.charAt(index + 2) & ~32) == 69 &&
              (str.charAt(index + 3) & ~32) == 78 &&
              (str.charAt(index + 4) & ~32) == 84 && (str.charAt(index + 5) & ~32) == 73 &&
              (str.charAt(index + 6) & ~32) == 70 && (str.charAt(index + 7) & ~32) == 73 &&
              (str.charAt(index + 8) & ~32) == 69 && (str.charAt(index + 9) & ~32) == 82) {
              index += 10;
            } else {
              index = indexStart2;
              break;
            }
            index = ParseFWS (str, index, endIndex, tokener);
            if (index < endIndex && (str.charAt(index) == 61)) {
              ++index;
            } else {
              index = indexStart2;
              break;
            }
            index = ParseFWS (str, index, endIndex, tokener);
            if (index < endIndex && (str.charAt(index) == 34)) {
              ++index;
            } else {
              index = indexStart2;
              break;
            }
            for (i2 = 0; i2 < 69; ++i2) {
              if (index < endIndex && ((str.charAt(index) >= 65 && str.charAt(index) <= 90) ||
                (str.charAt(index) >= 97 && str.charAt(index) <= 122) || (str.charAt(index) ==
                32) || (str.charAt(index)
                  >= 39 && str.charAt(index) <= 41) || (str.charAt(index) >= 43 &&
                  str.charAt(index) <= 58) ||
                (str.charAt(index) == 61) || (str.charAt(index) == 63))) {
                ++index;
              } else if (i2 < 1) {
                index = indexStart2;
                break;
              } else {
                break;
              }
            }
            if (index == indexStart2) {
              break;
            }
            if (index < endIndex && (str.charAt(index) == 34)) {
              ++index;
            } else {
              index = indexStart2;
              break;
            }
            index = ParseFWS (str, index, endIndex, tokener);
            indexTemp2 = index;
            index = indexStart2;
          } while (false);
          if (indexTemp2 != index) {
            index = indexTemp2;
          } else {
            break;
          }
        } while (false);
      } while (false);
      if (tokener != null && index == indexStart) {
        tokener.RestoreState (state);
      }
      return index;
    }
    public static int ParseHeaderMmhsOriginatorPlad(String str, int index, int
      endIndex, ITokener tokener) {
      int i, indexStart, state;
      indexStart = index;
      state = (tokener != null) ? tokener.GetState() : 0;
      do {
        index = ParseFWS (str, index, endIndex, tokener);
        for (i = 0; i < 69; ++i) {
          if (index < endIndex && ((str.charAt(index) >= 65 && str.charAt(index) <= 90) ||
            (str.charAt(index) >= 97 && str.charAt(index) <= 122) || (str.charAt(index) == 32) ||
            (str.charAt(index) >= 39 && str.charAt(index) <= 41) || (str.charAt(index) >= 43 &&
            str.charAt(index) <= 58) || (str.charAt(index) == 61) || (str.charAt(index) == 63))) {
            ++index;
          } else if (i < 1) {
            index = indexStart;
            break;
          } else {
            break;
          }
        }
        if (index == indexStart) {
          break;
        }
        index = ParseFWS (str, index, endIndex, tokener);
      } while (false);
      if (tokener != null && index == indexStart) {
        tokener.RestoreState (state);
      }
      return index;
    }
    public static int ParseHeaderMmhsOriginatorReference(String str, int index,
      int endIndex, ITokener tokener) {
      int i, indexStart, state;
      indexStart = index;
      state = (tokener != null) ? tokener.GetState() : 0;
      do {
        index = ParseFWS (str, index, endIndex, tokener);
        for (i = 0; i < 69; ++i) {
          if (index < endIndex && ((str.charAt(index) >= 65 && str.charAt(index) <= 90) ||
            (str.charAt(index) >= 97 && str.charAt(index) <= 122) || (str.charAt(index) == 32) ||
            (str.charAt(index) >= 39 && str.charAt(index) <= 41) || (str.charAt(index) >= 43 &&
            str.charAt(index) <= 58) || (str.charAt(index) == 61) || (str.charAt(index) == 63))) {
            ++index;
          } else if (i < 1) {
            index = indexStart;
            break;
          } else {
            break;
          }
        }
        if (index == indexStart) {
          break;
        }
        index = ParseFWS (str, index, endIndex, tokener);
      } while (false);
      if (tokener != null && index == indexStart) {
        tokener.RestoreState (state);
      }
      return index;
    }
    public static int ParseHeaderMmhsOtherRecipientsIndicatorCc(String str, int
      index, int endIndex, ITokener tokener) {
      int indexStart, indexStart2, indexTemp2, state, state2, tx2, tx3;
      indexStart = index;
      state = (tokener != null) ? tokener.GetState() : 0;
      do {
        index = ParseFWS (str, index, endIndex, tokener);
        tx2 = ParseDesignator (str, index, endIndex, tokener);
        if (tx2 == index) {
          index = indexStart;
          break;
        }
        index = tx2;
        while (true) {
          state2 = (tokener != null) ? tokener.GetState() : 0;
          indexTemp2 = index;
          do {
            indexStart2 = index;
            index = ParseFWS (str, index, endIndex, tokener);
            if (index < endIndex && (str.charAt(index) == 59)) {
              ++index;
            } else {
              index = indexStart2;
              break;
            }
            index = ParseFWS (str, index, endIndex, tokener);
            tx3 = ParseDesignator (str, index, endIndex, tokener);
            if (tx3 == index) {
              index = indexStart2;
              break;
            }
            index = tx3;
            indexTemp2 = index;
            index = indexStart2;
          } while (false);
          if (indexTemp2 != index) {
            index = indexTemp2;
          } else {
            if (tokener != null) {
              tokener.RestoreState (state2);
            }
            break;
          }
        }
        index = ParseFWS (str, index, endIndex, tokener);
      } while (false);
      if (tokener != null && index == indexStart) {
        tokener.RestoreState (state);
      }
      return index;
    }
    public static int ParseHeaderMmhsOtherRecipientsIndicatorTo(String str, int
      index, int endIndex, ITokener tokener) {
      int indexStart, indexStart2, indexTemp2, state, state2, tx2, tx3;
      indexStart = index;
      state = (tokener != null) ? tokener.GetState() : 0;
      do {
        index = ParseFWS (str, index, endIndex, tokener);
        tx2 = ParseDesignator (str, index, endIndex, tokener);
        if (tx2 == index) {
          index = indexStart;
          break;
        }
        index = tx2;
        while (true) {
          state2 = (tokener != null) ? tokener.GetState() : 0;
          indexTemp2 = index;
          do {
            indexStart2 = index;
            index = ParseFWS (str, index, endIndex, tokener);
            if (index < endIndex && (str.charAt(index) == 59)) {
              ++index;
            } else {
              index = indexStart2;
              break;
            }
            index = ParseFWS (str, index, endIndex, tokener);
            tx3 = ParseDesignator (str, index, endIndex, tokener);
            if (tx3 == index) {
              index = indexStart2;
              break;
            }
            index = tx3;
            indexTemp2 = index;
            index = indexStart2;
          } while (false);
          if (indexTemp2 != index) {
            index = indexTemp2;
          } else {
            if (tokener != null) {
              tokener.RestoreState (state2);
            }
            break;
          }
        }
        index = ParseFWS (str, index, endIndex, tokener);
      } while (false);
      if (tokener != null && index == indexStart) {
        tokener.RestoreState (state);
      }
      return index;
    }
    public static int ParseHeaderMmhsPrimaryPrecedence(String str, int index,
      int endIndex, ITokener tokener) {
      int indexStart, indexStart3, indexTemp2, indexTemp3, state;
      indexStart = index;
      state = (tokener != null) ? tokener.GetState() : 0;
      do {
        index = ParseFWS (str, index, endIndex, tokener);
        do {
          indexTemp2 = index;
          do {
            if (index < endIndex && (str.charAt(index) == 48)) {
              ++indexTemp2;
              break;
            }
            indexTemp3 = index;
            do {
              indexStart3 = index;
              if (index < endIndex && (str.charAt(index) >= 49 && str.charAt(index) <= 57)) {
                ++index;
              } else {
                break;
              }
              while (index < endIndex && (str.charAt(index) >= 48 && str.charAt(index) <=
                57)) {
                ++index;
              }
              indexTemp3 = index;
              index = indexStart3;
            } while (false);
            if (indexTemp3 != index) {
              indexTemp2 = indexTemp3;
              break;
            }
            if (endIndex - index > 7 && (str.charAt(index) & ~32) == 68 &&
              (str.charAt(index + 1) & ~32) == 69 && (str.charAt(index + 2) & ~32) == 70 &&
              (str.charAt(index + 3) & ~32) == 69 &&
              (str.charAt(index + 4) & ~32) == 82 && (str.charAt(index + 5) & ~32) == 82 &&
              (str.charAt(index + 6) & ~32) == 69 && (str.charAt(index + 7) & ~32) == 68) {
              indexTemp2 += 8;
              break;
            }
            if (endIndex - index > 6 && (str.charAt(index) & ~32) == 82 &&
              (str.charAt(index + 1) & ~32) == 79 && (str.charAt(index + 2) & ~32) == 85 &&
              (str.charAt(index + 3) & ~32) == 84 &&
              (str.charAt(index + 4) & ~32) == 73 && (str.charAt(index + 5) & ~32) == 78 &&
              (str.charAt(index + 6) & ~32) == 69) {
              indexTemp2 += 7;
              break;
            }
            if (endIndex - index > 7 && (str.charAt(index) & ~32) == 80 &&
              (str.charAt(index + 1) & ~32) == 82 && (str.charAt(index + 2) & ~32) == 73 &&
              (str.charAt(index + 3) & ~32) == 79 &&
              (str.charAt(index + 4) & ~32) == 82 && (str.charAt(index + 5) & ~32) == 73 &&
              (str.charAt(index + 6) & ~32) == 84 && (str.charAt(index + 7) & ~32) == 89) {
              indexTemp2 += 8;
              break;
            }
            if (endIndex - index > 8 && (str.charAt(index) & ~32) == 73 &&
              (str.charAt(index + 1) & ~32) == 77 && (str.charAt(index + 2) & ~32) == 77 &&
              (str.charAt(index + 3) & ~32) == 69 &&
              (str.charAt(index + 4) & ~32) == 68 && (str.charAt(index + 5) & ~32) == 73 &&
              (str.charAt(index + 6) & ~32) == 65 && (str.charAt(index + 7) & ~32) == 84 &&
              (str.charAt(index + 8) & ~32) == 69) {
              indexTemp2 += 9;
              break;
            }
            if (endIndex - index > 4 && (str.charAt(index) & ~32) == 70 &&
              (str.charAt(index + 1) & ~32) == 76 && (str.charAt(index + 2) & ~32) == 65 &&
              (str.charAt(index + 3) & ~32) == 83 && (str.charAt(index + 4) & ~32) == 72) {
              indexTemp2 += 5;
              break;
            }
            if (endIndex - index > 7 && (str.charAt(index) & ~32) == 79 &&
              (str.charAt(index + 1) & ~32) == 86 && (str.charAt(index + 2) & ~32) == 69 &&
              (str.charAt(index + 3) & ~32) == 82 &&
              (str.charAt(index + 4) & ~32) == 82 && (str.charAt(index + 5) & ~32) == 73 &&
              (str.charAt(index + 6) & ~32) == 68 && (str.charAt(index + 7) & ~32) == 69) {
              indexTemp2 += 8;
              break;
            }
          } while (false);
          if (indexTemp2 != index) {
            index = indexTemp2;
          } else {
            index = indexStart;
            break;
          }
        } while (false);
        if (index == indexStart) {
          break;
        }
        index = ParseCFWS (str, index, endIndex, tokener);
      } while (false);
      if (tokener != null && index == indexStart) {
        tokener.RestoreState (state);
      }
      return index;
    }
    public static int ParseHeaderMmhsSubjectIndicatorCodes(String str, int
      index, int endIndex, ITokener tokener) {
      int i, i2, indexStart, indexStart2, indexTemp2, state, state2;
      indexStart = index;
      state = (tokener != null) ? tokener.GetState() : 0;
      do {
        index = ParseFWS (str, index, endIndex, tokener);
        for (i = 0; i < 8; ++i) {
          if (index < endIndex && ((str.charAt(index) >= 65 && str.charAt(index) <= 90) ||
            (str.charAt(index) >= 97 && str.charAt(index) <= 122) || (str.charAt(index) == 32) ||
            (str.charAt(index) >= 39 && str.charAt(index) <= 41) || (str.charAt(index) >= 43 &&
            str.charAt(index) <= 58) || (str.charAt(index) == 61) || (str.charAt(index) == 63))) {
            ++index;
          } else if (i < 3) {
            index = indexStart;
            break;
          } else {
            break;
          }
        }
        if (index == indexStart) {
          break;
        }
        while (true) {
          state2 = (tokener != null) ? tokener.GetState() : 0;
          indexTemp2 = index;
          do {
            indexStart2 = index;
            index = ParseFWS (str, index, endIndex, tokener);
            if (index < endIndex && (str.charAt(index) == 59)) {
              ++index;
            } else {
              index = indexStart2;
              break;
            }
            index = ParseFWS (str, index, endIndex, tokener);
            for (i2 = 0; i2 < 8; ++i2) {
              if (index < endIndex && ((str.charAt(index) >= 65 && str.charAt(index) <= 90) ||
                (str.charAt(index) >= 97 && str.charAt(index) <= 122) || (str.charAt(index) ==
                32) || (str.charAt(index)
                  >= 39 && str.charAt(index) <= 41) || (str.charAt(index) >= 43 &&
                  str.charAt(index) <= 58) ||
                (str.charAt(index) == 61) || (str.charAt(index) == 63))) {
                ++index;
              } else if (i2 < 3) {
                index = indexStart2;
                break;
              } else {
                break;
              }
            }
            if (index == indexStart2) {
              break;
            }
            indexTemp2 = index;
            index = indexStart2;
          } while (false);
          if (indexTemp2 != index) {
            index = indexTemp2;
          } else {
            if (tokener != null) {
              tokener.RestoreState (state2);
            }
            break;
          }
        }
        index = ParseFWS (str, index, endIndex, tokener);
      } while (false);
      if (tokener != null && index == indexStart) {
        tokener.RestoreState (state);
      }
      return index;
    }
    public static int ParseHeaderMtPriority(String str, int index,
      int endIndex,
      ITokener tokener) {
      int indexStart, indexStart2, indexTemp2, state, state2;
      indexStart = index;
      state = (tokener != null) ? tokener.GetState() : 0;
      do {
        state2 = (tokener != null) ? tokener.GetState() : 0;
        indexTemp2 = index;
        do {
          indexStart2 = index;
          index = ParseCFWS (str, index, endIndex, tokener);
          if (index < endIndex && (str.charAt(index) == 45)) {
            ++index;
          }
          if (index < endIndex && (str.charAt(index) >= 49 && str.charAt(index) <= 57)) {
            ++index;
          } else {
            index = indexStart2;
            break;
          }
          indexTemp2 = index;
          index = indexStart2;
        } while (false);
        if (indexTemp2 != index) {
          index = indexTemp2;
          break;
        }
        if (tokener != null) {
          tokener.RestoreState (state2);
        }
        state2 = (tokener != null) ? tokener.GetState() : 0;
        indexTemp2 = index;
        do {
          indexStart2 = index;
          if (index < endIndex && (str.charAt(index) == 48)) {
            ++index;
          } else {
            break;
          }
          index = ParseCFWS (str, index, endIndex, tokener);
          indexTemp2 = index;
          index = indexStart2;
        } while (false);
        if (indexTemp2 != index) {
          index = indexTemp2;
          break;
        }
        if (tokener != null) {
          tokener.RestoreState (state2);
        }
      } while (false);
      if (tokener != null && index == indexStart) {
        tokener.RestoreState (state);
      }
      return index;
    }
    public static int ParseHeaderNewsMsgId(String str, int index, int endIndex,
      ITokener tokener) {
      int i, i2, indexStart, indexStart2, indexStart3, indexTemp2, indexTemp3,
          state;
      indexStart = index;
      state = (tokener != null) ? tokener.GetState() : 0;
      do {
        while (index < endIndex && ((str.charAt(index) == 32) || (str.charAt(index) == 9))) {
          ++index;
        }
        if (index < endIndex && (str.charAt(index) == 60)) {
          ++index;
        } else {
          index = indexStart;
          break;
        }
        for (i = 0; true; ++i) {
          indexTemp2 = ParseAtext (str, index, endIndex, tokener);
          if (indexTemp2 != index) {
            index = indexTemp2;
          } else {
            if (i < 1) {
              index = indexStart;
            }
            break;
          }
        }
        if (index == indexStart) {
          break;
        }
        if (index < endIndex && (str.charAt(index) == 64)) {
          ++index;
        } else {
          index = indexStart;
          break;
        }
        do {
          indexTemp2 = index;
          do {
            indexTemp3 = index;
            indexStart2 = index;
            for (i2 = 0; true; ++i2) {
              indexTemp3 = ParseAtext (str, index, endIndex, tokener);
              if (indexTemp3 == index) {
                if (i2 < 1) {
                  indexTemp2 = indexStart2;
                }
                break;
              }
              index = indexTemp3;
            }
            index = indexStart2;
            if (indexTemp3 != indexStart2) {
              indexTemp2 = indexTemp3;
              break;
            }
            indexTemp3 = index;
            do {
              indexStart3 = index;
              if (index < endIndex && (str.charAt(index) == 91)) {
                ++index;
              } else {
                break;
              }
              while (index < endIndex && ((str.charAt(index) >= 33 && str.charAt(index) <=
                61) || (str.charAt(index) >= 63 && str.charAt(index) <= 90) || (str.charAt(index) >=
                  94 && str.charAt(index) <= 126))) {
                ++index;
              }
              if (index < endIndex && (str.charAt(index) == 93)) {
                ++index;
              } else {
                index = indexStart3;
                break;
              }
              indexTemp3 = index;
              index = indexStart3;
            } while (false);
            if (indexTemp3 != index) {
              indexTemp2 = indexTemp3;
              break;
            }
          } while (false);
          if (indexTemp2 != index) {
            index = indexTemp2;
          } else {
            index = indexStart;
            break;
          }
        } while (false);
        if (index == indexStart) {
          break;
        }
        if (index < endIndex && (str.charAt(index) == 62)) {
          ++index;
        } else {
          index = indexStart;
          break;
        }
        while (index < endIndex && ((str.charAt(index) == 32) || (str.charAt(index) == 9))) {
          ++index;
        }
      } while (false);
      if (tokener != null && index == indexStart) {
        tokener.RestoreState (state);
      }
      return index;
    }
    public static int ParseHeaderNewsSupersedes(String str, int index, int
      endIndex, ITokener tokener) {
      int i, i2, indexStart, indexStart2, indexStart3, indexTemp2, indexTemp3,
          state;
      indexStart = index;
      state = (tokener != null) ? tokener.GetState() : 0;
      do {
        while (index < endIndex && ((str.charAt(index) == 32) || (str.charAt(index) == 9))) {
          ++index;
        }
        if (index < endIndex && (str.charAt(index) == 60)) {
          ++index;
        } else {
          index = indexStart;
          break;
        }
        for (i = 0; true; ++i) {
          indexTemp2 = ParseAtext (str, index, endIndex, tokener);
          if (indexTemp2 != index) {
            index = indexTemp2;
          } else {
            if (i < 1) {
              index = indexStart;
            }
            break;
          }
        }
        if (index == indexStart) {
          break;
        }
        if (index < endIndex && (str.charAt(index) == 64)) {
          ++index;
        } else {
          index = indexStart;
          break;
        }
        do {
          indexTemp2 = index;
          do {
            indexTemp3 = index;
            indexStart2 = index;
            for (i2 = 0; true; ++i2) {
              indexTemp3 = ParseAtext (str, index, endIndex, tokener);
              if (indexTemp3 == index) {
                if (i2 < 1) {
                  indexTemp2 = indexStart2;
                }
                break;
              }
              index = indexTemp3;
            }
            index = indexStart2;
            if (indexTemp3 != indexStart2) {
              indexTemp2 = indexTemp3;
              break;
            }
            indexTemp3 = index;
            do {
              indexStart3 = index;
              if (index < endIndex && (str.charAt(index) == 91)) {
                ++index;
              } else {
                break;
              }
              while (index < endIndex && ((str.charAt(index) >= 33 && str.charAt(index) <=
                61) || (str.charAt(index) >= 63 && str.charAt(index) <= 90) || (str.charAt(index) >=
                  94 && str.charAt(index) <= 126))) {
                ++index;
              }
              if (index < endIndex && (str.charAt(index) == 93)) {
                ++index;
              } else {
                index = indexStart3;
                break;
              }
              indexTemp3 = index;
              index = indexStart3;
            } while (false);
            if (indexTemp3 != index) {
              indexTemp2 = indexTemp3;
              break;
            }
          } while (false);
          if (indexTemp2 != index) {
            index = indexTemp2;
          } else {
            index = indexStart;
            break;
          }
        } while (false);
        if (index == indexStart) {
          break;
        }
        if (index < endIndex && (str.charAt(index) == 62)) {
          ++index;
        } else {
          index = indexStart;
          break;
        }
        while (index < endIndex && ((str.charAt(index) == 32) || (str.charAt(index) == 9))) {
          ++index;
        }
      } while (false);
      if (tokener != null && index == indexStart) {
        tokener.RestoreState (state);
      }
      return index;
    }
    public static int ParseHeaderNewsgroups(String str, int index,
      int endIndex,
      ITokener tokener) {
      int indexStart, indexStart2, indexStart3, indexTemp2, indexTemp3, state,
          state2;
      indexStart = index;
      state = (tokener != null) ? tokener.GetState() : 0;
      do {
        while (index < endIndex && (str.charAt(index) == 32)) {
          ++index;
        }
        while (index < endIndex && ((str.charAt(index) == 32) || (str.charAt(index) == 9))) {
          ++index;
        }
        if (index < endIndex && ((str.charAt(index) >= 65 && str.charAt(index) <= 90) ||
          (str.charAt(index) >= 97 && str.charAt(index) <= 122) || (str.charAt(index) >= 48 &&
          str.charAt(index) <= 57) || (str.charAt(index) == 43) || (str.charAt(index) == 45) ||
          (str.charAt(index) == 95))) {
          ++index;
          while (index < endIndex && ((str.charAt(index) >= 65 && str.charAt(index) <= 90) ||
            (str.charAt(index) >= 97 && str.charAt(index) <= 122) || (str.charAt(index) >= 48 &&
            str.charAt(index) <= 57) || (str.charAt(index) == 43) || (str.charAt(index) == 45) ||
            (str.charAt(index) == 95))) {
            ++index;
          }
        } else {
          index = indexStart;
          break;
        }
        while (true) {
          indexTemp2 = index;
          do {
            indexStart2 = index;
            if (index < endIndex && (str.charAt(index) == 46)) {
              ++index;
            } else {
              break;
            }
            if (index < endIndex && ((str.charAt(index) >= 65 && str.charAt(index) <= 90) ||
              (str.charAt(index) >= 97 && str.charAt(index) <= 122) || (str.charAt(index) >= 48 &&
              str.charAt(index) <= 57) || (str.charAt(index) == 43) || (str.charAt(index) == 45) ||
              (str.charAt(index) == 95))) {
              ++index;
              while (index < endIndex && ((str.charAt(index) >= 65 && str.charAt(index) <=
                90) || (str.charAt(index) >= 97 && str.charAt(index) <= 122) || (str.charAt(index) >=
                  48 && str.charAt(index)
                  <= 57) || (str.charAt(index) == 43) || (str.charAt(index) == 45) ||
                (str.charAt(index) == 95))) {
                ++index;
              }
            } else {
              index = indexStart2;
              break;
            }
            indexTemp2 = index;
            index = indexStart2;
          } while (false);
          if (indexTemp2 != index) {
            index = indexTemp2;
          } else {
            break;
          }
        }
        while (true) {
          state2 = (tokener != null) ? tokener.GetState() : 0;
          indexTemp2 = index;
          do {
            indexStart2 = index;
            index = ParseFWS (str, index, endIndex, tokener);
            if (index < endIndex && (str.charAt(index) == 44)) {
              ++index;
            } else {
              index = indexStart2;
              break;
            }
            index = ParseFWS (str, index, endIndex, tokener);
            if (index < endIndex && ((str.charAt(index) >= 65 && str.charAt(index) <= 90) ||
              (str.charAt(index) >= 97 && str.charAt(index) <= 122) || (str.charAt(index) >= 48 &&
              str.charAt(index) <= 57) || (str.charAt(index) == 43) || (str.charAt(index) == 45) ||
              (str.charAt(index) == 95))) {
              ++index;
              while (index < endIndex && ((str.charAt(index) >= 65 && str.charAt(index) <=
                90) || (str.charAt(index) >= 97 && str.charAt(index) <= 122) || (str.charAt(index) >=
                  48 && str.charAt(index)
                  <= 57) || (str.charAt(index) == 43) || (str.charAt(index) == 45) ||
                (str.charAt(index) == 95))) {
                ++index;
              }
            } else {
              index = indexStart2;
              break;
            }
            while (true) {
              indexTemp3 = index;
              do {
                indexStart3 = index;
                if (index < endIndex && (str.charAt(index) == 46)) {
                  ++index;
                } else {
                  break;
                }
                if (index < endIndex && ((str.charAt(index) >= 65 && str.charAt(index) <=
                  90) || (str.charAt(index) >= 97 && str.charAt(index) <= 122) || (str.charAt(index)
                    >= 48 && str.charAt(index)
                    <= 57) || (str.charAt(index) == 43) || (str.charAt(index) == 45) ||
                  (str.charAt(index) == 95))) {
                  ++index;
                  while (index < endIndex && ((str.charAt(index) >= 65 &&
                    str.charAt(index) <= 90) ||
                    (str.charAt(index) >= 97 && str.charAt(index) <= 122) || (str.charAt(index)
                    >= 48 && str.charAt(index)
                    <= 57) || (str.charAt(index) == 43) || (str.charAt(index) == 45) ||
                    (str.charAt(index) == 95))) {
                    ++index;
                  }
                } else {
                  index = indexStart3;
                  break;
                }
                indexTemp3 = index;
                index = indexStart3;
              } while (false);
              if (indexTemp3 != index) {
                index = indexTemp3;
              } else {
                break;
              }
            }
            indexTemp2 = index;
            index = indexStart2;
          } while (false);
          if (indexTemp2 != index) {
            index = indexTemp2;
          } else {
            if (tokener != null) {
              tokener.RestoreState (state2);
            }
            break;
          }
        }
        while (index < endIndex && ((str.charAt(index) == 32) || (str.charAt(index) == 9))) {
          ++index;
        }
      } while (false);
      if (tokener != null && index == indexStart) {
        tokener.RestoreState (state);
      }
      return index;
    }
    public static int ParseHeaderNntpPostingHost(String str, int index, int
      endIndex, ITokener tokener) {
      int indexStart, state;
      indexStart = index;
      state = (tokener != null) ? tokener.GetState() : 0;
      do {
        index = ParseCFWS (str, index, endIndex, tokener);
        if (index < endIndex && ((str.charAt(index) == 33) || (str.charAt(index) >= 35 &&
          str.charAt(index) <= 36) || (str.charAt(index) >= 45 && str.charAt(index) <= 46) ||
          (str.charAt(index)
            >= 48 && str.charAt(index) <= 57) || (str.charAt(index) >= 65 && str.charAt(index)
            <= 90) ||
          (str.charAt(index) >= 94 && str.charAt(index) <= 126) || (str.charAt(index) >= 42 &&
          str.charAt(index) <= 43) || (str.charAt(index) >= 38 && str.charAt(index) <= 39) ||
          (str.charAt(index) == 63))) {
          ++index;
          while (index < endIndex && ((str.charAt(index) == 33) || (str.charAt(index) >= 35 &&
            str.charAt(index) <= 36) || (str.charAt(index) >= 45 && str.charAt(index) <= 46) ||
            (str.charAt(index) >= 48 && str.charAt(index) <= 57) || (str.charAt(index) >= 65 &&
            str.charAt(index) <= 90) ||
            (str.charAt(index) >= 94 && str.charAt(index) <= 126) || (str.charAt(index) >= 42 &&
            str.charAt(index) <= 43) || (str.charAt(index) >= 38 && str.charAt(index) <= 39) ||
            (str.charAt(index) == 63))) {
            ++index;
          }
        } else {
          index = indexStart;
          break;
        }
        index = ParseCFWS (str, index, endIndex, tokener);
      } while (false);
      if (tokener != null && index == indexStart) {
        tokener.RestoreState (state);
      }
      return index;
    }
    public static int ParseHeaderObsoletes(String str, int index, int endIndex,
      ITokener tokener) {
      int indexStart, indexStart2, indexTemp2, state, state2, tx2, tx3;
      indexStart = index;
      state = (tokener != null) ? tokener.GetState() : 0;
      do {
        index = ParseCFWS (str, index, endIndex, tokener);
        if (index < endIndex && (str.charAt(index) == 60)) {
          ++index;
        } else {
          index = indexStart;
          break;
        }
        tx2 = ParseIdLeft (str, index, endIndex, tokener);
        if (tx2 == index) {
          index = indexStart;
          break;
        }
        index = tx2;
        if (index < endIndex && (str.charAt(index) == 64)) {
          ++index;
        } else {
          index = indexStart;
          break;
        }
        tx2 = ParseIdRight (str, index, endIndex, tokener);
        if (tx2 == index) {
          index = indexStart;
          break;
        }
        index = tx2;
        if (index < endIndex && (str.charAt(index) == 62)) {
          ++index;
        } else {
          index = indexStart;
          break;
        }
        index = ParseCFWS (str, index, endIndex, tokener);
        while (true) {
          state2 = (tokener != null) ? tokener.GetState() : 0;
          indexTemp2 = index;
          do {
            indexStart2 = index;
            if (index < endIndex && (str.charAt(index) == 44)) {
              ++index;
            } else {
              break;
            }
            index = ParseCFWS (str, index, endIndex, tokener);
            if (index < endIndex && (str.charAt(index) == 60)) {
              ++index;
            } else {
              index = indexStart2;
              break;
            }
            tx3 = ParseIdLeft (str, index, endIndex, tokener);
            if (tx3 == index) {
              index = indexStart2;
              break;
            }
            index = tx3;
            if (index < endIndex && (str.charAt(index) == 64)) {
              ++index;
            } else {
              index = indexStart2;
              break;
            }
            tx3 = ParseIdRight (str, index, endIndex, tokener);
            if (tx3 == index) {
              index = indexStart2;
              break;
            }
            index = tx3;
            if (index < endIndex && (str.charAt(index) == 62)) {
              ++index;
            } else {
              index = indexStart2;
              break;
            }
            index = ParseCFWS (str, index, endIndex, tokener);
            indexTemp2 = index;
            index = indexStart2;
          } while (false);
          if (indexTemp2 != index) {
            index = indexTemp2;
          } else {
            if (tokener != null) {
              tokener.RestoreState (state2);
            }
            break;
          }
        }
      } while (false);
      if (tokener != null && index == indexStart) {
        tokener.RestoreState (state);
      }
      return index;
    }
    public static int ParseHeaderOriginalRecipient(String str, int index, int
      endIndex, ITokener tokener) {
      int i, indexStart, indexTemp2, state;
      indexStart = index;
      state = (tokener != null) ? tokener.GetState() : 0;
      do {
        index = ParseCFWS (str, index, endIndex, tokener);
        for (i = 0; true; ++i) {
          indexTemp2 = ParseAtext (str, index, endIndex, tokener);
          if (indexTemp2 != index) {
            index = indexTemp2;
          } else {
            if (i < 1) {
              index = indexStart;
            }
            break;
          }
        }
        if (index == indexStart) {
          break;
        }
        index = ParseCFWS (str, index, endIndex, tokener);
        if (index < endIndex && (str.charAt(index) == 59)) {
          ++index;
        } else {
          index = indexStart;
          break;
        }
        index = ParseCFWS (str, index, endIndex, tokener);
        while (true) {
          indexTemp2 = ParseTextExceptOpeningParen (str, index, endIndex,
              tokener);
          if (indexTemp2 != index) {
            index = indexTemp2;
          } else {
            break;
          }
        }
        index = ParseCFWS (str, index, endIndex, tokener);
      } while (false);
      if (tokener != null && index == indexStart) {
        tokener.RestoreState (state);
      }
      return index;
    }
    public static int ParseHeaderPath(String str, int index, int endIndex,
      ITokener tokener) {
      int indexStart, indexTemp2, state;
      indexStart = index;
      state = (tokener != null) ? tokener.GetState() : 0;
      do {
        while (index < endIndex && ((str.charAt(index) == 32) || (str.charAt(index) == 9))) {
          ++index;
        }
        while (true) {
          indexTemp2 = ParsePathList (str, index, endIndex, tokener);
          if (indexTemp2 != index) {
            index = indexTemp2;
          } else {
            break;
          }
        }
        if (index < endIndex && ((str.charAt(index) >= 65 && str.charAt(index) <= 90) ||
          (str.charAt(index) >= 97 && str.charAt(index) <= 122) || (str.charAt(index) >= 48 &&
          str.charAt(index) <= 57) || (str.charAt(index) == 45) || (str.charAt(index) == 95))) {
          ++index;
          while (index < endIndex && ((str.charAt(index) >= 65 && str.charAt(index) <= 90) ||
            (str.charAt(index) >= 97 && str.charAt(index) <= 122) || (str.charAt(index) >= 48 &&
            str.charAt(index) <= 57) || (str.charAt(index) == 45) || (str.charAt(index) == 95))) {
            ++index;
          }
        } else {
          index = indexStart;
          break;
        }
        while (index < endIndex && ((str.charAt(index) == 32) || (str.charAt(index) == 9))) {
          ++index;
        }
      } while (false);
      if (tokener != null && index == indexStart) {
        tokener.RestoreState (state);
      }
      return index;
    }
    public static int ParseHeaderPreventNondeliveryReport(String str,
      int index,
      int endIndex, ITokener tokener) {
      return ParseFWS (str, index, endIndex, tokener);
    }
    public static int ParseHeaderPriority(String str, int index, int endIndex,
      ITokener tokener) {
      return ParseMixerKeyword (str, index, endIndex, tokener);
    }
    public static int ParseHeaderReceived(String str, int index, int endIndex,
      ITokener tokener) {
      int i, i2, indexStart, indexStart2, indexTemp2, indexTemp3, state, tx2;
      indexStart = index;
      state = (tokener != null) ? tokener.GetState() : 0;
      do {
        do {
          indexTemp2 = index;
          do {
            indexTemp3 = index;
            indexStart2 = index;
            for (i2 = 0; true; ++i2) {
              indexTemp3 = ParseReceivedToken (str, index, endIndex, tokener);
              if (indexTemp3 == index) {
                if (i2 < 1) {
                  indexTemp2 = indexStart2;
                }
                break;
              }
              index = indexTemp3;
            }
            index = indexStart2;
            if (indexTemp3 != indexStart2) {
              indexTemp2 = indexTemp3;
              break;
            }
            indexTemp3 = ParseCFWS (str, index, endIndex, tokener);
            if (indexTemp3 != index) {
              indexTemp2 = indexTemp3;
              break;
            }
          } while (false);
          if (indexTemp2 != index) {
            index = indexTemp2;
          } else {
            break;
          }
        } while (false);
        if (index < endIndex && (str.charAt(index) == 59)) {
          ++index;
        } else {
          index = indexStart;
          break;
        }
        do {
          indexTemp2 = index;
          do {
            indexStart2 = index;
            index = ParseCFWS (str, index, endIndex, tokener);
            if (endIndex - index > 2 && (((str.charAt(index) & ~32) == 77 &&
              (str.charAt(index + 1) & ~32) == 79 && (str.charAt(index + 2) & ~32)
              == 78) || ((str.charAt(index) & ~32) == 84 &&
                (str.charAt(index + 1) & ~32) == 85 && (str.charAt(index + 2) & ~32) ==
                69) ||
              ((str.charAt(index) & ~32) == 87 && (str.charAt(index + 1) & ~32) == 69 &&
              (str.charAt(index + 2) & ~32) == 68) || ((str.charAt(index) & ~32) == 84 &&
                (str.charAt(index + 1) & ~32) == 72 &&
                (str.charAt(index + 2) & ~32) == 85) || ((str.charAt(index) & ~32) == 70 &&
                (str.charAt(index + 1) & ~32) == 82 && (str.charAt(index + 2) & ~32) == 73) ||
              ((str.charAt(index) & ~32) ==
              83 && (str.charAt(index + 1) & ~32) == 65 && (str.charAt(index + 2) & ~32)
              == 84) ||
              ((str.charAt(index) & ~32) == 83 && (str.charAt(index + 1) & ~32) == 85 &&
              (str.charAt(index + 2) & ~32) == 78))) {
              index += 3;
            } else {
              index = indexStart2;
              break;
            }
            index = ParseCFWS (str, index, endIndex, tokener);
            if (index < endIndex && (str.charAt(index) == 44)) {
              ++index;
            } else {
              index = indexStart2;
              break;
            }
            indexTemp2 = index;
            index = indexStart2;
          } while (false);
          if (indexTemp2 != index) {
            index = indexTemp2;
          } else {
            break;
          }
        } while (false);
        index = ParseCFWS (str, index, endIndex, tokener);
        for (i = 0; i < 2; ++i) {
          if (index < endIndex && (str.charAt(index) >= 48 && str.charAt(index) <= 57)) {
            ++index;
          } else if (i < 1) {
            index = indexStart;
            break;
          } else {
            break;
          }
        }
        if (index == indexStart) {
          break;
        }
        index = ParseCFWS (str, index, endIndex, tokener);
        if (endIndex - index > 2 && (((str.charAt(index) & ~32) == 74 &&
          (str.charAt(index + 1) & ~32) == 65 && (str.charAt(index + 2) & ~32) == 78) ||
          ((str.charAt(index) & ~32) == 70 &&
          (str.charAt(index + 1) & ~32) == 69 && (str.charAt(index + 2) & ~32) == 66) ||
          ((str.charAt(index) & ~32) == 77 && (str.charAt(index + 1) & ~32) == 65 &&
          (str.charAt(index + 2) & ~32) == 82) || ((str.charAt(index) & ~32) == 65 &&
            (str.charAt(index + 1) & ~32) == 80 &&
            (str.charAt(index + 2) & ~32) == 82) || ((str.charAt(index) & ~32) == 77 &&
            (str.charAt(index + 1) & ~32) == 65 && (str.charAt(index + 2) & ~32) == 89) ||
          ((str.charAt(index) & ~32) ==
          74 && (str.charAt(index + 1) & ~32) == 85 && (str.charAt(index + 2) & ~32)
          == 78) || ((str.charAt(index) & ~32) == 74 && (str.charAt(index + 1) & ~32) == 85 &&
            (str.charAt(index + 2) & ~32) == 76) || ((str.charAt(index) & ~32) == 65 &&
            (str.charAt(index + 1) & ~32) == 85 &&
            (str.charAt(index + 2) & ~32) == 71) || ((str.charAt(index) & ~32) == 83 &&
            (str.charAt(index + 1) & ~32) == 69 && (str.charAt(index + 2) & ~32) == 80) ||
          ((str.charAt(index) & ~32) ==
          79 && (str.charAt(index + 1) & ~32) == 67 && (str.charAt(index + 2) & ~32)
          == 84) || ((str.charAt(index) & ~32) == 78 && (str.charAt(index + 1) & ~32) == 79 &&
            (str.charAt(index + 2) & ~32) == 86) || ((str.charAt(index) & ~32) == 68 &&
            (str.charAt(index + 1) & ~32) == 69 && (str.charAt(index + 2) & ~32) == 67))) {
          index += 3;
        } else {
          index = indexStart;
          break;
        }
        index = ParseCFWS (str, index, endIndex, tokener);
        if (endIndex - index > 1 && ((str.charAt(index) >= 48 && str.charAt(index) <= 57) &&
          (str.charAt(index + 1) >= 48 && str.charAt(index + 1) <= 57))) {
          index += 2;
        } else {
          index = indexStart;
          break;
        }
        while (index < endIndex && (str.charAt(index) >= 48 && str.charAt(index) <= 57)) {
          ++index;
        }
        index = ParseCFWS (str, index, endIndex, tokener);
        index = ParseCFWS (str, index, endIndex, tokener);
        if (endIndex - index > 1 && ((str.charAt(index) >= 48 && str.charAt(index) <= 57) &&
          (str.charAt(index + 1) >= 48 && str.charAt(index + 1) <= 57))) {
          index += 2;
        } else {
          index = indexStart;
          break;
        }
        index = ParseCFWS (str, index, endIndex, tokener);
        if (index < endIndex && (str.charAt(index) == 58)) {
          ++index;
        } else {
          index = indexStart;
          break;
        }
        index = ParseCFWS (str, index, endIndex, tokener);
        if (endIndex - index > 1 && ((str.charAt(index) >= 48 && str.charAt(index) <= 57) &&
          (str.charAt(index + 1) >= 48 && str.charAt(index + 1) <= 57))) {
          index += 2;
        } else {
          index = indexStart;
          break;
        }
        do {
          indexTemp2 = index;
          do {
            indexStart2 = index;
            index = ParseCFWS (str, index, endIndex, tokener);
            if (index < endIndex && (str.charAt(index) == 58)) {
              ++index;
            } else {
              index = indexStart2;
              break;
            }
            index = ParseCFWS (str, index, endIndex, tokener);
            if (endIndex - index > 1 && ((str.charAt(index) >= 48 && str.charAt(index) <=
              57) && (str.charAt(index + 1) >= 48 && str.charAt(index + 1) <= 57))) {
              index += 2;
            } else {
              index = indexStart2;
              break;
            }
            indexTemp2 = index;
            index = indexStart2;
          } while (false);
          if (indexTemp2 != index) {
            index = indexTemp2;
          } else {
            break;
          }
        } while (false);
        tx2 = ParseZone (str, index, endIndex, tokener);
        if (tx2 == index) {
          index = indexStart;
          break;
        }
        index = tx2;
        index = ParseCFWS (str, index, endIndex, tokener);
      } while (false);
      if (tokener != null && index == indexStart) {
        tokener.RestoreState (state);
      }
      return index;
    }
    public static int ParseHeaderReceivedSpf(String str, int index, int
      endIndex, ITokener tokener) {
      int i2, indexStart, indexStart2, indexStart3, indexTemp2, indexTemp3,
          indexTemp4, indexTemp5, state, state3, tx3;
      indexStart = index;
      state = (tokener != null) ? tokener.GetState() : 0;
      do {
        index = ParseCFWS (str, index, endIndex, tokener);
        do {
          indexTemp2 = index;
          if (endIndex - index > 3 && (str.charAt(index) & ~32) == 80 &&
            (str.charAt(index + 1) & ~32) == 65 && (str.charAt(index + 2) & ~32) == 83 &&
            (str.charAt(index + 3) & ~32) == 83) {
            indexTemp2 += 4;
          } else if (endIndex - index > 3 && (str.charAt(index) & ~32) == 70 &&
            (str.charAt(index + 1) & ~32) == 65 && (str.charAt(index + 2) & ~32) == 73 &&
            (str.charAt(index + 3) & ~32) == 76) {
            indexTemp2 += 4;
          } else if (endIndex - index > 7 && (str.charAt(index) & ~32) == 83 &&
            (str.charAt(index + 1) & ~32) == 79 && (str.charAt(index + 2) & ~32) == 70 &&
            (str.charAt(index + 3) & ~32) == 84 &&
            (str.charAt(index + 4) & ~32) == 70 && (str.charAt(index + 5) & ~32) == 65 &&
            (str.charAt(index + 6) & ~32) == 73 && (str.charAt(index + 7) & ~32) == 76) {
            indexTemp2 += 8;
          } else if (endIndex - index > 6 && (str.charAt(index) & ~32) == 78 &&
            (str.charAt(index + 1) & ~32) == 69 && (str.charAt(index + 2) & ~32) == 85 &&
            (str.charAt(index + 3) & ~32) == 84 &&
            (str.charAt(index + 4) & ~32) == 82 && (str.charAt(index + 5) & ~32) == 65 &&
            (str.charAt(index + 6) & ~32) == 76) {
            indexTemp2 += 7;
          } else if (endIndex - index > 3 && (str.charAt(index) & ~32) == 78 &&
            (str.charAt(index + 1) & ~32) == 79 && (str.charAt(index + 2) & ~32) == 78 &&
            (str.charAt(index + 3) & ~32) == 69) {
            indexTemp2 += 4;
          } else if (endIndex - index > 8 && (str.charAt(index) & ~32) == 84 &&
            (str.charAt(index + 1) & ~32) == 69 && (str.charAt(index + 2) & ~32) == 77 &&
            (str.charAt(index + 3) & ~32) == 80 &&
            (str.charAt(index + 4) & ~32) == 69 && (str.charAt(index + 5) & ~32) == 82 &&
            (str.charAt(index + 6) & ~32) == 82 && (str.charAt(index + 7) & ~32) == 79 &&
            (str.charAt(index + 8) & ~32) == 82) {
            indexTemp2 += 9;
          } else if (endIndex - index > 8 && (str.charAt(index) & ~32) == 80 &&
            (str.charAt(index + 1) & ~32) == 69 && (str.charAt(index + 2) & ~32) == 82 &&
            (str.charAt(index + 3) & ~32) == 77 &&
            (str.charAt(index + 4) & ~32) == 69 && (str.charAt(index + 5) & ~32) == 82 &&
            (str.charAt(index + 6) & ~32) == 82 && (str.charAt(index + 7) & ~32) == 79 &&
            (str.charAt(index + 8) & ~32) == 82) {
            indexTemp2 += 9;
          }
          if (indexTemp2 != index) {
            index = indexTemp2;
          } else {
            index = indexStart;
            break;
          }
        } while (false);
        if (index == indexStart) {
          break;
        }
        do {
          indexTemp2 = index;
          do {
            indexStart2 = index;
            for (i2 = 0; true; ++i2) {
              indexTemp3 = ParseFWS (str, index, endIndex, tokener);
              if (indexTemp3 != index) {
                index = indexTemp3;
              } else {
                if (i2 < 1) {
                  index = indexStart2;
                }
                break;
              }
            }
            if (index == indexStart2) {
              break;
            }
            tx3 = HeaderParserUtility.ParseCommentLax (str, index, endIndex,
                tokener);
            if (tx3 == index) {
              index = indexStart2;
              break;
            }
            index = tx3;
            indexTemp2 = index;
            index = indexStart2;
          } while (false);
          if (indexTemp2 != index) {
            index = indexTemp2;
          } else {
            break;
          }
        } while (false);
        do {
          indexTemp2 = index;
          do {
            indexStart2 = index;
            for (i2 = 0; true; ++i2) {
              indexTemp3 = ParseFWS (str, index, endIndex, tokener);
              if (indexTemp3 != index) {
                index = indexTemp3;
              } else {
                if (i2 < 1) {
                  index = indexStart2;
                }
                break;
              }
            }
            if (index == indexStart2) {
              break;
            }
            if (index < endIndex && ((str.charAt(index) >= 65 && str.charAt(index) <= 90) ||
              (str.charAt(index) >= 97 && str.charAt(index) <= 122))) {
              ++index;
            } else {
              index = indexStart2;
              break;
            }
            while (index < endIndex && ((str.charAt(index) >= 65 && str.charAt(index) <=
              90) ||
              (str.charAt(index) >= 97 && str.charAt(index) <= 122) || (str.charAt(index) >= 48 &&
              str.charAt(index) <= 57) || (str.charAt(index) == 95) || (str.charAt(index) >= 45 &&
                str.charAt(index) <= 46))) {
              ++index;
            }
            index = ParseCFWS (str, index, endIndex, tokener);
            if (index < endIndex && (str.charAt(index) == 61)) {
              ++index;
            } else {
              index = indexStart2;
              break;
            }
            do {
              indexTemp3 = index;
              do {
                indexTemp4 = ParseDotAtom (str, index, endIndex, tokener);
                if (indexTemp4 != index) {
                  indexTemp3 = indexTemp4;
                  break;
                }
                indexTemp4 = ParseQuotedString (str, index, endIndex, tokener);
                if (indexTemp4 != index) {
                  indexTemp3 = indexTemp4;
                  break;
                }
              } while (false);
              if (indexTemp3 != index) {
                index = indexTemp3;
              } else {
                index = indexStart2;
                break;
              }
            } while (false);
            if (index == indexStart2) {
              break;
            }
            while (true) {
              state3 = (tokener != null) ? tokener.GetState() : 0;
              indexTemp3 = index;
              do {
                indexStart3 = index;
                if (index < endIndex && (str.charAt(index) == 59)) {
                  ++index;
                } else {
                  break;
                }
                index = ParseCFWS (str, index, endIndex, tokener);
                if (index < endIndex && ((str.charAt(index) >= 65 && str.charAt(index) <=
                  90) || (str.charAt(index) >= 97 && str.charAt(index) <= 122))) {
                  ++index;
                } else {
                  index = indexStart3;
                  break;
                }
                while (index < endIndex && ((str.charAt(index) >= 65 && str.charAt(index)
                  <= 90) || (str.charAt(index) >= 97 && str.charAt(index) <= 122) ||
                  (str.charAt(index) >= 48 && str.charAt(index)
                    <= 57) || (str.charAt(index) == 95) || (str.charAt(index) >= 45 &&
                    str.charAt(index) <= 46))) {
                  ++index;
                }
                index = ParseCFWS (str, index, endIndex, tokener);
                if (index < endIndex && (str.charAt(index) == 61)) {
                  ++index;
                } else {
                  index = indexStart3;
                  break;
                }
                do {
                  indexTemp4 = index;
                  do {
                    indexTemp5 = ParseDotAtom (str, index, endIndex, tokener);
                    if (indexTemp5 != index) {
                      indexTemp4 = indexTemp5;
                      break;
                    }
                    indexTemp5 = ParseQuotedString (str, index, endIndex,
                        tokener);
                    if (indexTemp5 != index) {
                      indexTemp4 = indexTemp5;
                      break;
                    }
                  } while (false);
                  if (indexTemp4 != index) {
                    index = indexTemp4;
                  } else {
                    index = indexStart3;
                    break;
                  }
                } while (false);
                if (index == indexStart3) {
                  break;
                }
                indexTemp3 = index;
                index = indexStart3;
              } while (false);
              if (indexTemp3 != index) {
                index = indexTemp3;
              } else {
                if (tokener != null) {
                  tokener.RestoreState (state3);
                }
                break;
              }
            }
            if (index < endIndex && (str.charAt(index) == 59)) {
              ++index;
            }
            indexTemp2 = index;
            index = indexStart2;
          } while (false);
          if (indexTemp2 != index) {
            index = indexTemp2;
          } else {
            break;
          }
        } while (false);
        index = ParseFWS (str, index, endIndex, tokener);
      } while (false);
      if (tokener != null && index == indexStart) {
        tokener.RestoreState (state);
      }
      return index;
    }
    public static int ParseHeaderRequireRecipientValidSince(String str, int
      index, int endIndex, ITokener tokener) {
      int i, indexStart, indexStart2, indexTemp2, state, tx2;
      indexStart = index;
      state = (tokener != null) ? tokener.GetState() : 0;
      do {
        tx2 = ParseLocalPart (str, index, endIndex, tokener);
        if (tx2 == index) {
          break;
        }
        index = tx2;
        if (index < endIndex && (str.charAt(index) == 64)) {
          ++index;
        } else {
          index = indexStart;
          break;
        }
        index = ParseCFWS (str, index, endIndex, tokener);
        tx2 = ParseDomainCore (str, index, endIndex, tokener);
        if (tx2 == index) {
          index = indexStart;
          break;
        }
        index = tx2;
        index = ParseCFWS (str, index, endIndex, tokener);
        if (index < endIndex && (str.charAt(index) == 59)) {
          ++index;
        } else {
          index = indexStart;
          break;
        }
        do {
          indexTemp2 = index;
          do {
            indexStart2 = index;
            index = ParseCFWS (str, index, endIndex, tokener);
            if (endIndex - index > 2 && (((str.charAt(index) & ~32) == 77 &&
              (str.charAt(index + 1) & ~32) == 79 && (str.charAt(index + 2) & ~32)
              == 78) || ((str.charAt(index) & ~32) == 84 &&
                (str.charAt(index + 1) & ~32) == 85 && (str.charAt(index + 2) & ~32) ==
                69) ||
              ((str.charAt(index) & ~32) == 87 && (str.charAt(index + 1) & ~32) == 69 &&
              (str.charAt(index + 2) & ~32) == 68) || ((str.charAt(index) & ~32) == 84 &&
                (str.charAt(index + 1) & ~32) == 72 &&
                (str.charAt(index + 2) & ~32) == 85) || ((str.charAt(index) & ~32) == 70 &&
                (str.charAt(index + 1) & ~32) == 82 && (str.charAt(index + 2) & ~32) == 73) ||
              ((str.charAt(index) & ~32) ==
              83 && (str.charAt(index + 1) & ~32) == 65 && (str.charAt(index + 2) & ~32)
              == 84) ||
              ((str.charAt(index) & ~32) == 83 && (str.charAt(index + 1) & ~32) == 85 &&
              (str.charAt(index + 2) & ~32) == 78))) {
              index += 3;
            } else {
              index = indexStart2;
              break;
            }
            index = ParseCFWS (str, index, endIndex, tokener);
            if (index < endIndex && (str.charAt(index) == 44)) {
              ++index;
            } else {
              index = indexStart2;
              break;
            }
            indexTemp2 = index;
            index = indexStart2;
          } while (false);
          if (indexTemp2 != index) {
            index = indexTemp2;
          } else {
            break;
          }
        } while (false);
        index = ParseCFWS (str, index, endIndex, tokener);
        for (i = 0; i < 2; ++i) {
          if (index < endIndex && (str.charAt(index) >= 48 && str.charAt(index) <= 57)) {
            ++index;
          } else if (i < 1) {
            index = indexStart;
            break;
          } else {
            break;
          }
        }
        if (index == indexStart) {
          break;
        }
        index = ParseCFWS (str, index, endIndex, tokener);
        if (endIndex - index > 2 && (((str.charAt(index) & ~32) == 74 &&
          (str.charAt(index + 1) & ~32) == 65 && (str.charAt(index + 2) & ~32) == 78) ||
          ((str.charAt(index) & ~32) == 70 &&
          (str.charAt(index + 1) & ~32) == 69 && (str.charAt(index + 2) & ~32) == 66) ||
          ((str.charAt(index) & ~32) == 77 && (str.charAt(index + 1) & ~32) == 65 &&
          (str.charAt(index + 2) & ~32) == 82) || ((str.charAt(index) & ~32) == 65 &&
            (str.charAt(index + 1) & ~32) == 80 &&
            (str.charAt(index + 2) & ~32) == 82) || ((str.charAt(index) & ~32) == 77 &&
            (str.charAt(index + 1) & ~32) == 65 && (str.charAt(index + 2) & ~32) == 89) ||
          ((str.charAt(index) & ~32) ==
          74 && (str.charAt(index + 1) & ~32) == 85 && (str.charAt(index + 2) & ~32)
          == 78) || ((str.charAt(index) & ~32) == 74 && (str.charAt(index + 1) & ~32) == 85 &&
            (str.charAt(index + 2) & ~32) == 76) || ((str.charAt(index) & ~32) == 65 &&
            (str.charAt(index + 1) & ~32) == 85 &&
            (str.charAt(index + 2) & ~32) == 71) || ((str.charAt(index) & ~32) == 83 &&
            (str.charAt(index + 1) & ~32) == 69 && (str.charAt(index + 2) & ~32) == 80) ||
          ((str.charAt(index) & ~32) ==
          79 && (str.charAt(index + 1) & ~32) == 67 && (str.charAt(index + 2) & ~32)
          == 84) || ((str.charAt(index) & ~32) == 78 && (str.charAt(index + 1) & ~32) == 79 &&
            (str.charAt(index + 2) & ~32) == 86) || ((str.charAt(index) & ~32) == 68 &&
            (str.charAt(index + 1) & ~32) == 69 && (str.charAt(index + 2) & ~32) == 67))) {
          index += 3;
        } else {
          index = indexStart;
          break;
        }
        index = ParseCFWS (str, index, endIndex, tokener);
        if (endIndex - index > 1 && ((str.charAt(index) >= 48 && str.charAt(index) <= 57) &&
          (str.charAt(index + 1) >= 48 && str.charAt(index + 1) <= 57))) {
          index += 2;
        } else {
          index = indexStart;
          break;
        }
        while (index < endIndex && (str.charAt(index) >= 48 && str.charAt(index) <= 57)) {
          ++index;
        }
        index = ParseCFWS (str, index, endIndex, tokener);
        index = ParseCFWS (str, index, endIndex, tokener);
        if (endIndex - index > 1 && ((str.charAt(index) >= 48 && str.charAt(index) <= 57) &&
          (str.charAt(index + 1) >= 48 && str.charAt(index + 1) <= 57))) {
          index += 2;
        } else {
          index = indexStart;
          break;
        }
        index = ParseCFWS (str, index, endIndex, tokener);
        if (index < endIndex && (str.charAt(index) == 58)) {
          ++index;
        } else {
          index = indexStart;
          break;
        }
        index = ParseCFWS (str, index, endIndex, tokener);
        if (endIndex - index > 1 && ((str.charAt(index) >= 48 && str.charAt(index) <= 57) &&
          (str.charAt(index + 1) >= 48 && str.charAt(index + 1) <= 57))) {
          index += 2;
        } else {
          index = indexStart;
          break;
        }
        do {
          indexTemp2 = index;
          do {
            indexStart2 = index;
            index = ParseCFWS (str, index, endIndex, tokener);
            if (index < endIndex && (str.charAt(index) == 58)) {
              ++index;
            } else {
              index = indexStart2;
              break;
            }
            index = ParseCFWS (str, index, endIndex, tokener);
            if (endIndex - index > 1 && ((str.charAt(index) >= 48 && str.charAt(index) <=
              57) && (str.charAt(index + 1) >= 48 && str.charAt(index + 1) <= 57))) {
              index += 2;
            } else {
              index = indexStart2;
              break;
            }
            indexTemp2 = index;
            index = indexStart2;
          } while (false);
          if (indexTemp2 != index) {
            index = indexTemp2;
          } else {
            break;
          }
        } while (false);
        tx2 = ParseZone (str, index, endIndex, tokener);
        if (tx2 == index) {
          index = indexStart;
          break;
        }
        index = tx2;
        index = ParseCFWS (str, index, endIndex, tokener);
      } while (false);
      if (tokener != null && index == indexStart) {
        tokener.RestoreState (state);
      }
      return index;
    }
    public static int ParseHeaderResentTo(String str, int index, int endIndex,
      ITokener tokener) {
      return ParseStrictHeaderTo (str, index, endIndex, tokener);
    }
    public static int ParseHeaderReturnPath(String str, int index,
      int endIndex,
      ITokener tokener) {
      return ParsePath (str, index, endIndex, tokener);
    }
    public static int ParseHeaderSender(String str, int index, int endIndex,
      ITokener tokener) {
      int indexStart, indexTemp2, state;
      indexStart = index;
      state = (tokener != null) ? tokener.GetState() : 0;
      do {
        indexTemp2 = ParseMailbox (str, index, endIndex, tokener);
        if (indexTemp2 != index) {
          index = indexTemp2;
          break;
        }
        indexTemp2 = ParseMailbox (str, index, endIndex, tokener);
        if (indexTemp2 != index) {
          index = indexTemp2;
          break;
        }
        indexTemp2 = ParseGroup (str, index, endIndex, tokener);
        if (indexTemp2 != index) {
          index = indexTemp2;
          break;
        }
      } while (false);
      if (tokener != null && index == indexStart) {
        tokener.RestoreState (state);
      }
      return index;
    }
    public static int ParseHeaderSensitivity(String str, int index, int
      endIndex, ITokener tokener) {
      return ParseMixerKeyword (str, index, endIndex, tokener);
    }
    public static int ParseHeaderSioLabel(String str, int index, int endIndex,
      ITokener tokener) {
      return ParseNoEncodedWords (str, index, endIndex, tokener);
    }
    public static int ParseHeaderSolicitation(String str, int index, int
      endIndex, ITokener tokener) {
      int indexStart, indexStart2, indexTemp2, state;
      indexStart = index;
      state = (tokener != null) ? tokener.GetState() : 0;
      do {
        index = ParseFWS (str, index, endIndex, tokener);
        if (index < endIndex && ((str.charAt(index) >= 65 && str.charAt(index) <= 90) ||
          (str.charAt(index) >= 97 && str.charAt(index) <= 122))) {
          ++index;
        } else {
          index = indexStart;
          break;
        }
        while (index < endIndex && ((str.charAt(index) >= 45 && str.charAt(index) <= 46) ||
          (str.charAt(index) == 95) || (str.charAt(index) >= 65 && str.charAt(index) <= 90) ||
          (str.charAt(index)
            >= 97 && str.charAt(index) <= 122) || (str.charAt(index) >= 48 && str.charAt(index)
            <= 58))) {
          ++index;
        }
        while (true) {
          indexTemp2 = index;
          do {
            indexStart2 = index;
            if (endIndex - index > 1 && (str.charAt(index) == 44) && ((str.charAt(index +
              1) >= 65 && str.charAt(index + 1) <= 90) || (str.charAt(index + 1) >= 97 &&
                str.charAt(index + 1) <= 122))) {
              index += 2;
            } else {
              break;
            }
            while (index < endIndex && ((str.charAt(index) >= 45 && str.charAt(index) <=
              46) ||
              (str.charAt(index) == 95) || (str.charAt(index) >= 65 && str.charAt(index) <= 90) ||
              (str.charAt(index) >= 97 && str.charAt(index) <= 122) || (str.charAt(index) >= 48 &&
              str.charAt(index) <= 58))) {
              ++index;
            }
            indexTemp2 = index;
            index = indexStart2;
          } while (false);
          if (indexTemp2 != index) {
            index = indexTemp2;
          } else {
            break;
          }
        }
      } while (false);
      if (tokener != null && index == indexStart) {
        tokener.RestoreState (state);
      }
      return index;
    }
    public static int ParseHeaderSupersedes(String str, int index,
      int endIndex,
      ITokener tokener) {
      int i, indexStart, indexStart2, indexTemp2, state, tx3;
      indexStart = index;
      state = (tokener != null) ? tokener.GetState() : 0;
      do {
        for (i = 0; true; ++i) {
          indexTemp2 = index;
          do {
            indexStart2 = index;
            index = ParseCFWS (str, index, endIndex, tokener);
            if (index < endIndex && (str.charAt(index) == 60)) {
              ++index;
            } else {
              index = indexStart2;
              break;
            }
            tx3 = ParseIdLeft (str, index, endIndex, tokener);
            if (tx3 == index) {
              index = indexStart2;
              break;
            }
            index = tx3;
            if (index < endIndex && (str.charAt(index) == 64)) {
              ++index;
            } else {
              index = indexStart2;
              break;
            }
            tx3 = ParseIdRight (str, index, endIndex, tokener);
            if (tx3 == index) {
              index = indexStart2;
              break;
            }
            index = tx3;
            if (index < endIndex && (str.charAt(index) == 62)) {
              ++index;
            } else {
              index = indexStart2;
              break;
            }
            index = ParseCFWS (str, index, endIndex, tokener);
            indexTemp2 = index;
            index = indexStart2;
          } while (false);
          if (indexTemp2 != index) {
            index = indexTemp2;
          } else {
            if (i < 1) {
              index = indexStart;
            }
            break;
          }
        }
        if (index == indexStart) {
          break;
        }
      } while (false);
      if (tokener != null && index == indexStart) {
        tokener.RestoreState (state);
      }
      return index;
    }
    public static int ParseHeaderTlsReportDomain(String str, int index, int
      endIndex, ITokener tokener) {
      return ParseDomain (str, index, endIndex, tokener);
    }
    public static int ParseHeaderTlsReportSubmitter(String str, int index, int
      endIndex, ITokener tokener) {
      return ParseDomain (str, index, endIndex, tokener);
    }
    public static int ParseHeaderTlsRequired(String str, int index, int
      endIndex, ITokener tokener) {
      int indexStart, state;
      indexStart = index;
      state = (tokener != null) ? tokener.GetState() : 0;
      do {
        index = ParseFWS (str, index, endIndex, tokener);
        if (endIndex - index > 1 && (str.charAt(index) & ~32) == 78 &&
          (str.charAt(index + 1) & ~32) == 79) {
          index += 2;
        } else {
          index = indexStart;
          break;
        }
      } while (false);
      if (tokener != null && index == indexStart) {
        tokener.RestoreState (state);
      }
      return index;
    }
    public static int ParseHeaderTo(String str, int index, int endIndex,
      ITokener tokener) {
      return ParseLaxHeaderTo (str, index, endIndex, tokener);
    }
    public static int ParseHeaderUserAgent(String str, int index, int endIndex,
      ITokener tokener) {
      int i, indexStart, indexStart2, indexStart3, indexTemp2, indexTemp3,
          state;
      indexStart = index;
      state = (tokener != null) ? tokener.GetState() : 0;
      do {
        for (i = 0; true; ++i) {
          indexTemp2 = index;
          do {
            indexStart2 = index;
            index = ParseCFWS (str, index, endIndex, tokener);
            if (index < endIndex && ((str.charAt(index) == 33) || (str.charAt(index) >= 35 &&
              str.charAt(index) <= 36) || (str.charAt(index) >= 45 && str.charAt(index) <=
                46) || (str.charAt(index)
                >= 48 && str.charAt(index) <= 57) || (str.charAt(index) >= 65 &&
                str.charAt(index) <= 90) ||
              (str.charAt(index) >= 94 && str.charAt(index) <= 126) || (str.charAt(index) >= 42 &&
              str.charAt(index) <= 43) || (str.charAt(index) >= 38 && str.charAt(index) <= 39) ||
              (str.charAt(index) == 63))) {
              ++index;
              while (index < endIndex && ((str.charAt(index) == 33) || (str.charAt(index)
                >= 35 && str.charAt(index) <= 36) || (str.charAt(index) >= 45 && str.charAt(index) <=
                  46) || (str.charAt(index)
                  >= 48 && str.charAt(index) <= 57) || (str.charAt(index) >= 65 &&
                  str.charAt(index) <= 90) ||
                (str.charAt(index) >= 94 && str.charAt(index) <= 126) || (str.charAt(index) >=
                42 && str.charAt(index)
                <= 43) || (str.charAt(index) >= 38 && str.charAt(index) <= 39) ||
                (str.charAt(index) == 63))) {
                ++index;
              }
            } else {
              index = indexStart2;
              break;
            }
            do {
              indexTemp3 = index;
              do {
                indexStart3 = index;
                index = ParseCFWS (str, index, endIndex, tokener);
                if (index < endIndex && (str.charAt(index) == 47)) {
                  ++index;
                } else {
                  index = indexStart3;
                  break;
                }
                index = ParseCFWS (str, index, endIndex, tokener);
                if (index < endIndex && ((str.charAt(index) == 33) || (str.charAt(index)
                  >= 35 && str.charAt(index) <= 36) || (str.charAt(index) >= 45 && str.charAt(index)
                    <= 46) || (str.charAt(index)
                    >= 48 && str.charAt(index) <= 57) || (str.charAt(index) >= 65 &&
                    str.charAt(index) <= 90) ||
                  (str.charAt(index) >= 94 && str.charAt(index) <= 126) || (str.charAt(index)
                  >= 42 && str.charAt(index)
                  <= 43) || (str.charAt(index) >= 38 && str.charAt(index) <= 39) ||
                  (str.charAt(index) == 63))) {
                  ++index;
                  while (index < endIndex && ((str.charAt(index) == 33) ||
                    (str.charAt(index) >= 35 &&
                      str.charAt(index) <= 36) || (str.charAt(index) >= 45 && str.charAt(index)
                      <= 46) || (str.charAt(index)
                      >= 48 && str.charAt(index) <= 57) || (str.charAt(index) >= 65 &&
                      str.charAt(index) <= 90) ||
                    (str.charAt(index) >= 94 && str.charAt(index) <= 126) || (str.charAt(index)
                    >= 42 && str.charAt(index)
                    <= 43) || (str.charAt(index) >= 38 && str.charAt(index) <= 39) ||
                    (str.charAt(index) == 63))) {
                    ++index;
                  }
                } else {
                  index = indexStart3;
                  break;
                }
                indexTemp3 = index;
                index = indexStart3;
              } while (false);
              if (indexTemp3 != index) {
                index = indexTemp3;
              } else {
                break;
              }
            } while (false);
            indexTemp2 = index;
            index = indexStart2;
          } while (false);
          if (indexTemp2 != index) {
            index = indexTemp2;
          } else {
            if (i < 1) {
              index = indexStart;
            }
            break;
          }
        }
        if (index == indexStart) {
          break;
        }
        index = ParseCFWS (str, index, endIndex, tokener);
      } while (false);
      if (tokener != null && index == indexStart) {
        tokener.RestoreState (state);
      }
      return index;
    }
    public static int ParseHeaderVbrInfo(String str, int index, int endIndex,
      ITokener tokener) {
      int i, indexStart, indexStart2, indexTemp2, indexTemp3, indexTemp4, state;
      indexStart = index;
      state = (tokener != null) ? tokener.GetState() : 0;
      do {
        for (i = 0; true; ++i) {
          indexTemp2 = index;
          do {
            indexStart2 = index;
            index = ParseFWS (str, index, endIndex, tokener);
            do {
              indexTemp3 = index;
              do {
                indexTemp4 = ParseMdElement (str, index, endIndex, tokener);
                if (indexTemp4 != index) {
                  indexTemp3 = indexTemp4;
                  break;
                }
                indexTemp4 = ParseMcElement (str, index, endIndex, tokener);
                if (indexTemp4 != index) {
                  indexTemp3 = indexTemp4;
                  break;
                }
                indexTemp4 = ParseMvElement (str, index, endIndex, tokener);
                if (indexTemp4 != index) {
                  indexTemp3 = indexTemp4;
                  break;
                }
              } while (false);
              if (indexTemp3 != index) {
                index = indexTemp3;
              } else {
                index = indexStart2;
                break;
              }
            } while (false);
            if (index == indexStart2) {
              break;
            }
            index = ParseFWS (str, index, endIndex, tokener);
            if (index < endIndex && (str.charAt(index) == 59)) {
              ++index;
            } else {
              index = indexStart2;
              break;
            }
            indexTemp2 = index;
            index = indexStart2;
          } while (false);
          if (indexTemp2 != index) {
            index = indexTemp2;
          } else {
            if (i < 1) {
              index = indexStart;
            }
            break;
          }
        }
        if (index == indexStart) {
          break;
        }
      } while (false);
      if (tokener != null && index == indexStart) {
        tokener.RestoreState (state);
      }
      return index;
    }
    public static int ParseHeaderX400ContentIdentifier(String str, int index,
      int endIndex, ITokener tokener) {
      return ParseNoEncodedWords (str, index, endIndex, tokener);
    }
    public static int ParseHeaderX400ContentReturn(String str, int index, int
      endIndex, ITokener tokener) {
      return ParseMixerKeyword (str, index, endIndex, tokener);
    }
    public static int ParseHeaderX400MtsIdentifier(String str, int index, int
      endIndex, ITokener tokener) {
      return ParseNoEncodedWords (str, index, endIndex, tokener);
    }
    public static int ParseHeaderX400Originator(String str, int index, int
      endIndex, ITokener tokener) {
      return ParseMailbox (str, index, endIndex, tokener);
    }
    public static int ParseHeaderX400Received(String str, int index, int
      endIndex, ITokener tokener) {
      return ParseNoEncodedWords (str, index, endIndex, tokener);
    }
    public static int ParseHeaderX400Recipients(String str, int index, int
      endIndex, ITokener tokener) {
      return ParseMailboxList (str, index, endIndex, tokener);
    }
    public static int ParseHeaderXArchivedAt(String str, int index, int
      endIndex, ITokener tokener) {
      int indexStart, state;
      indexStart = index;
      state = (tokener != null) ? tokener.GetState() : 0;
      do {
        index = ParseFWS (str, index, endIndex, tokener);
        if (index < endIndex && ((str.charAt(index) >= 33 && str.charAt(index) <= 59) ||
          (str.charAt(index) == 61) || (str.charAt(index) >= 63 && str.charAt(index) <= 126))) {
          ++index;
          while (index < endIndex && ((str.charAt(index) >= 33 && str.charAt(index) <= 59) ||
            (str.charAt(index) == 61) || (str.charAt(index) >= 63 && str.charAt(index) <= 126))) {
            ++index;
          }
        } else {
          index = indexStart;
          break;
        }
      } while (false);
      if (tokener != null && index == indexStart) {
        tokener.RestoreState (state);
      }
      return index;
    }
    public static int ParseHeaderXPgpSig(String str, int index, int endIndex,
      ITokener tokener) {
      return ParseNoEncodedWords (str, index, endIndex, tokener);
    }
    public static int ParseHeaderXRicevuta(String str, int index, int endIndex,
      ITokener tokener) {
      return ParseGeneralKeyword (str, index, endIndex, tokener);
    }
    public static int ParseHeaderXTiporicevuta(String str, int index, int
      endIndex, ITokener tokener) {
      return ParseGeneralKeyword (str, index, endIndex, tokener);
    }
    public static int ParseHeaderXTrasporto(String str, int index,
      int endIndex,
      ITokener tokener) {
      return ParseGeneralKeyword (str, index, endIndex, tokener);
    }
    public static int ParseHeaderXVerificasicurezza(String str, int index, int
      endIndex, ITokener tokener) {
      return ParseGeneralKeyword (str, index, endIndex, tokener);
    }
    public static int ParseHeaderXref(String str, int index, int endIndex,
      ITokener tokener) {
      int i, i2, indexStart, indexStart2, indexStart3, indexTemp2, indexTemp3,
          state, tx2;
      indexStart = index;
      state = (tokener != null) ? tokener.GetState() : 0;
      do {
        while (index < endIndex && ((str.charAt(index) == 32) || (str.charAt(index) == 9))) {
          ++index;
        }
        tx2 = ParsePathIdentity (str, index, endIndex, tokener);
        if (tx2 == index) {
          index = indexStart;
          break;
        }
        index = tx2;
        for (i = 0; true; ++i) {
          indexTemp2 = index;
          do {
            indexStart2 = index;
            for (i2 = 0; true; ++i2) {
              indexTemp3 = ParseFWS (str, index, endIndex, tokener);
              if (indexTemp3 != index) {
                index = indexTemp3;
              } else {
                if (i2 < 1) {
                  index = indexStart2;
                }
                break;
              }
            }
            if (index == indexStart2) {
              break;
            }
            if (index < endIndex && ((str.charAt(index) >= 65 && str.charAt(index) <= 90) ||
              (str.charAt(index) >= 97 && str.charAt(index) <= 122) || (str.charAt(index) >= 48 &&
              str.charAt(index) <= 57) || (str.charAt(index) == 43) || (str.charAt(index) == 45) ||
              (str.charAt(index) == 95))) {
              ++index;
              while (index < endIndex && ((str.charAt(index) >= 65 && str.charAt(index) <=
                90) || (str.charAt(index) >= 97 && str.charAt(index) <= 122) || (str.charAt(index) >=
                  48 && str.charAt(index)
                  <= 57) || (str.charAt(index) == 43) || (str.charAt(index) == 45) ||
                (str.charAt(index) == 95))) {
                ++index;
              }
            } else {
              index = indexStart2;
              break;
            }
            while (true) {
              indexTemp3 = index;
              do {
                indexStart3 = index;
                if (index < endIndex && (str.charAt(index) == 46)) {
                  ++index;
                } else {
                  break;
                }
                if (index < endIndex && ((str.charAt(index) >= 65 && str.charAt(index) <=
                  90) || (str.charAt(index) >= 97 && str.charAt(index) <= 122) || (str.charAt(index)
                    >= 48 && str.charAt(index)
                    <= 57) || (str.charAt(index) == 43) || (str.charAt(index) == 45) ||
                  (str.charAt(index) == 95))) {
                  ++index;
                  while (index < endIndex && ((str.charAt(index) >= 65 &&
                    str.charAt(index) <= 90) ||
                    (str.charAt(index) >= 97 && str.charAt(index) <= 122) || (str.charAt(index)
                    >= 48 && str.charAt(index)
                    <= 57) || (str.charAt(index) == 43) || (str.charAt(index) == 45) ||
                    (str.charAt(index) == 95))) {
                    ++index;
                  }
                } else {
                  index = indexStart3;
                  break;
                }
                indexTemp3 = index;
                index = indexStart3;
              } while (false);
              if (indexTemp3 != index) {
                index = indexTemp3;
              } else {
                break;
              }
            }
            if (index < endIndex && (str.charAt(index) == 58)) {
              ++index;
            } else {
              index = indexStart2;
              break;
            }
            if (index < endIndex && ((str.charAt(index) >= 33 && str.charAt(index) <= 39) ||
              (str.charAt(index) >= 41 && str.charAt(index) <= 58) || (str.charAt(index) >= 60 &&
              str.charAt(index) <= 126))) {
              ++index;
              while (index < endIndex && ((str.charAt(index) >= 33 && str.charAt(index) <=
                39) || (str.charAt(index) >= 41 && str.charAt(index) <= 58) || (str.charAt(index) >=
                  60 && str.charAt(index) <= 126))) {
                ++index;
              }
            } else {
              index = indexStart2;
              break;
            }
            indexTemp2 = index;
            index = indexStart2;
          } while (false);
          if (indexTemp2 != index) {
            index = indexTemp2;
          } else {
            if (i < 1) {
              index = indexStart;
            }
            break;
          }
        }
        if (index == indexStart) {
          break;
        }
        while (index < endIndex && ((str.charAt(index) == 32) || (str.charAt(index) == 9))) {
          ++index;
        }
      } while (false);
      if (tokener != null && index == indexStart) {
        tokener.RestoreState (state);
      }
      return index;
    }
    public static int ParseIdLeft(String str, int index, int endIndex, ITokener
      tokener) {
      return ParseLocalPart (str, index, endIndex, tokener);
    }
    public static int ParseIdRight(String str, int index, int endIndex,
      ITokener tokener) {
      int indexStart, indexTemp2, state;
      indexStart = index;
      state = (tokener != null) ? tokener.GetState() : 0;
      do {
        indexTemp2 = ParseDomain (str, index, endIndex, tokener);
        if (indexTemp2 != index) {
          index = indexTemp2;
          break;
        }
        indexTemp2 = ParseNoFoldLiteral (str, index, endIndex, tokener);
        if (indexTemp2 != index) {
          index = indexTemp2;
          break;
        }
      } while (false);
      if (tokener != null && index == indexStart) {
        tokener.RestoreState (state);
      }
      return index;
    }
    public static int ParseLanguageDescription(String str, int index, int
      endIndex, ITokener tokener) {
      return ParsePrintablestring (str, index, endIndex, tokener);
    }

    public static int ParseLanguageRange(String str, int index, int
      endIndex,
      ITokener tokener) {
      int i2, i3, indexStart2, indexStart3, indexTemp2, indexTemp3;
      do {
        indexTemp2 = index;
        do {
          indexStart2 = index;
          for (i2 = 0; i2 < 8; ++i2) {
            if (index < endIndex && ((str.charAt(index) >= 65 && str.charAt(index) <= 90) ||
              (str.charAt(index) >= 97 && str.charAt(index) <= 122))) {
              ++index;
            } else if (i2 < 1) {
              index = indexStart2;
              break;
            } else {
              break;
            }
          }
          if (index == indexStart2) {
            break;
          }
          while (true) {
            indexTemp3 = index;
            do {
              indexStart3 = index;
              if (index < endIndex && (str.charAt(index) == 45)) {
                ++index;
              } else {
                break;
              }
              for (i3 = 0; i3 < 8; ++i3) {
                if (index < endIndex && ((str.charAt(index) >= 65 && str.charAt(index) <=
                  90) || (str.charAt(index) >= 97 && str.charAt(index) <= 122) || (str.charAt(index)
                    >= 48 && str.charAt(index) <= 57))) {
                  ++index;
                } else if (i3 < 1) {
                  index = indexStart3;
                  break;
                } else {
                  break;
                }
              }
              if (index == indexStart3) {
                break;
              }
              indexTemp3 = index;
              index = indexStart3;
            } while (false);
            if (indexTemp3 != index) {
              index = indexTemp3;
            } else {
              break;
            }
          }
          indexTemp2 = index;
          index = indexStart2;
        } while (false);
        if (indexTemp2 != index) {
          index = indexTemp2;
          break;
        }
        if (index < endIndex && (str.charAt(index) == 42)) {
          ++index;
          break;
        }
      } while (false);
      return index;
    }
    public static int ParseLaxHeaderTo(String str, int index, int endIndex,
      ITokener tokener) {
      int indexStart, indexTemp2, indexTemp3, state;
      indexStart = index;
      state = (tokener != null) ? tokener.GetState() : 0;
      do {
        do {
          indexTemp2 = index;
          do {
            indexTemp3 = ParseAddressList (str, index, endIndex, tokener);
            if (indexTemp3 != index) {
              indexTemp2 = indexTemp3;
              break;
            }
            indexTemp3 = ParseCFWS (str, index, endIndex, tokener);
            if (indexTemp3 != index) {
              indexTemp2 = indexTemp3;
              break;
            }
          } while (false);
          if (indexTemp2 != index) {
            index = indexTemp2;
          } else {
            break;
          }
        } while (false);
      } while (false);
      if (tokener != null && index == indexStart) {
        tokener.RestoreState (state);
      }
      return index;
    }

    public static int ParseLdhStr(String str, int index, int
      endIndex, ITokener tokener) {
      int i, indexStart, indexStart3, indexTemp2, indexTemp3;
      indexStart = index;
      for (i = 0; true; ++i) {
        indexTemp2 = index;
        do {
          if (index < endIndex && ((str.charAt(index) >= 65 && str.charAt(index) <= 90) ||
            (str.charAt(index) >= 97 && str.charAt(index) <= 122))) {
            ++indexTemp2;
            break;
          }
          if (index < endIndex && (str.charAt(index) >= 48 && str.charAt(index) <= 57)) {
            ++indexTemp2;
            break;
          }
          indexTemp3 = index;
          do {
            indexStart3 = index;
            if (index < endIndex && (str.charAt(index) == 45)) {
              ++index;
              while (index < endIndex && (str.charAt(index) == 45)) {
                ++index;
              }
            } else {
              break;
            }
            if (index < endIndex && ((str.charAt(index) >= 65 && str.charAt(index) <= 90) ||
              (str.charAt(index) >= 97 && str.charAt(index) <= 122) || (str.charAt(index) >= 48 &&
              str.charAt(index) <= 57))) {
              ++index;
            } else {
              index = indexStart3;
              break;
            }
            indexTemp3 = index;
            index = indexStart3;
          } while (false);
          if (indexTemp3 != index) {
            indexTemp2 = indexTemp3;
            break;
          }
        } while (false);
        if (indexTemp2 != index) {
          index = indexTemp2;
        } else {
          if (i < 1) {
            index = indexStart;
          }
          break;
        }
      }
      if (index == indexStart) {
        {
          return indexStart;
        }
      }
      return index;
    }
    public static int ParseListHeaderUrlList(String str, int index, int
      endIndex, ITokener tokener) {
      int indexStart, indexStart2, indexStart3, indexTemp2, indexTemp3, state,
          state2, state3;
      indexStart = index;
      state = (tokener != null) ? tokener.GetState() : 0;
      do {
        index = ParseCFWS (str, index, endIndex, tokener);
        if (index < endIndex && (str.charAt(index) == 60)) {
          ++index;
        } else {
          index = indexStart;
          break;
        }
        index = ParseFWS (str, index, endIndex, tokener);
        if (index < endIndex && ((str.charAt(index) >= 33 && str.charAt(index) <= 59) ||
          (str.charAt(index) == 61) || (str.charAt(index) >= 63 && str.charAt(index) <= 126))) {
          ++index;
        } else {
          index = indexStart;
          break;
        }
        while (true) {
          state2 = (tokener != null) ? tokener.GetState() : 0;
          indexTemp2 = index;
          do {
            indexStart2 = index;
            index = ParseFWS (str, index, endIndex, tokener);
            if (index < endIndex && ((str.charAt(index) >= 33 && str.charAt(index) <= 59) ||
              (str.charAt(index) == 61) || (str.charAt(index) >= 63 && str.charAt(index) <=
              126))) {
              ++index;
            } else {
              index = indexStart2;
              break;
            }
            indexTemp2 = index;
            index = indexStart2;
          } while (false);
          if (indexTemp2 != index) {
            index = indexTemp2;
          } else {
            if (tokener != null) {
              tokener.RestoreState (state2);
            }
            break;
          }
        }
        index = ParseFWS (str, index, endIndex, tokener);
        if (index < endIndex && (str.charAt(index) == 62)) {
          ++index;
        } else {
          index = indexStart;
          break;
        }
        index = ParseCFWS (str, index, endIndex, tokener);
        while (true) {
          state2 = (tokener != null) ? tokener.GetState() : 0;
          indexTemp2 = index;
          do {
            indexStart2 = index;
            if (index < endIndex && (str.charAt(index) == 44)) {
              ++index;
            } else {
              break;
            }
            index = ParseCFWS (str, index, endIndex, tokener);
            if (index < endIndex && (str.charAt(index) == 60)) {
              ++index;
            } else {
              index = indexStart2;
              break;
            }
            index = ParseFWS (str, index, endIndex, tokener);
            if (index < endIndex && ((str.charAt(index) >= 33 && str.charAt(index) <= 59) ||
              (str.charAt(index) == 61) || (str.charAt(index) >= 63 && str.charAt(index) <=
              126))) {
              ++index;
            } else {
              index = indexStart2;
              break;
            }
            while (true) {
              state3 = (tokener != null) ? tokener.GetState() : 0;
              indexTemp3 = index;
              do {
                indexStart3 = index;
                index = ParseFWS (str, index, endIndex, tokener);
                if (index < endIndex && ((str.charAt(index) >= 33 && str.charAt(index) <=
                  59) || (str.charAt(index) == 61) || (str.charAt(index) >= 63 &&
                    str.charAt(index) <= 126))) {
                  ++index;
                } else {
                  index = indexStart3;
                  break;
                }
                indexTemp3 = index;
                index = indexStart3;
              } while (false);
              if (indexTemp3 != index) {
                index = indexTemp3;
              } else {
                if (tokener != null) {
                  tokener.RestoreState (state3);
                }
                break;
              }
            }
            index = ParseFWS (str, index, endIndex, tokener);
            if (index < endIndex && (str.charAt(index) == 62)) {
              ++index;
            } else {
              index = indexStart2;
              break;
            }
            index = ParseCFWS (str, index, endIndex, tokener);
            indexTemp2 = index;
            index = indexStart2;
          } while (false);
          if (indexTemp2 != index) {
            index = indexTemp2;
          } else {
            if (tokener != null) {
              tokener.RestoreState (state2);
            }
            break;
          }
        }
      } while (false);
      if (tokener != null && index == indexStart) {
        tokener.RestoreState (state);
      }
      return index;
    }
    public static int ParseLocalPart(String str, int index, int endIndex,
      ITokener tokener) {
      int indexStart, indexStart2, indexTemp2, state, state2, tx2, tx3;
      indexStart = index;
      state = (tokener != null) ? tokener.GetState() : 0;
      do {
        tx2 = ParseWord (str, index, endIndex, tokener);
        if (tx2 == index) {
          break;
        }
        index = tx2;
        while (true) {
          state2 = (tokener != null) ? tokener.GetState() : 0;
          indexTemp2 = index;
          do {
            indexStart2 = index;
            if (index < endIndex && (str.charAt(index) == 46)) {
              ++index;
            } else {
              break;
            }
            tx3 = ParseWord (str, index, endIndex, tokener);
            if (tx3 == index) {
              index = indexStart2;
              break;
            }
            index = tx3;
            indexTemp2 = index;
            index = indexStart2;
          } while (false);
          if (indexTemp2 != index) {
            index = indexTemp2;
          } else {
            if (tokener != null) {
              tokener.RestoreState (state2);
            }
            break;
          }
        }
      } while (false);
      if (tokener != null) {
        if (index == indexStart) {
          tokener.RestoreState (state);
        } else {
          tokener.Commit (7, indexStart, index);
        }
      }
      return index;
    }
    public static int ParseLocalPartNoCfws(String str, int index, int endIndex,
      ITokener tokener) {
      int indexStart, indexStart2, indexStart4, indexTemp2, indexTemp3,
          indexTemp4, indexTemp5, state;
      indexStart = index;
      state = (tokener != null) ? tokener.GetState() : 0;
      do {
        indexTemp2 = ParseDotAtomText (str, index, endIndex, tokener);
        if (indexTemp2 != index) {
          index = indexTemp2;
          break;
        }
        indexTemp2 = index;
        do {
          indexStart2 = index;
          if (index < endIndex && (str.charAt(index) == 34)) {
            ++index;
          } else {
            break;
          }
          while (true) {
            indexTemp3 = index;
            do {
              if (index < endIndex && ((str.charAt(index) == 32) || (str.charAt(index) ==
                9))) {
                ++indexTemp3;
                break;
              }
              if (index < endIndex && ((str.charAt(index) == 33) || (str.charAt(index) >=
                35 && str.charAt(index) <= 91) || (str.charAt(index) >= 93 && str.charAt(index) <=
                  126))) {
                ++indexTemp3;
                break;
              }
              indexTemp4 = index;
              do {
                indexStart4 = index;
                if (index < endIndex && (str.charAt(index) == 92)) {
                  ++index;
                }
                do {
                  indexTemp5 = index;
                  if (index < endIndex && ((str.charAt(index) >= 128 && str.charAt(index)
                    <= 55295) || (str.charAt(index) >= 57344 && str.charAt(index) <=
                      65535))) {
                    ++indexTemp5;
                  } else if (endIndex - index > 1 && ((str.charAt(index) >= 55296 &&
                    str.charAt(index) <=
                    56319) && (str.charAt(index + 1) >= 56320 && str.charAt(index + 1)
                      <= 57343))) {
                    indexTemp5 += 2;
                  }
                  if (indexTemp5 != index) {
                    index = indexTemp5;
                  } else {
                    index = indexStart4;
                    break;
                  }
                } while (false);
                if (index == indexStart4) {
                  break;
                }
                indexTemp4 = index;
                index = indexStart4;
              } while (false);
              if (indexTemp4 != index) {
                indexTemp3 = indexTemp4;
                break;
              }
              if (endIndex - index > 1 && ((str.charAt(index) == 92) && ((str.charAt(index+
                1) >= 32 && str.charAt(index + 1) <= 126) || (str.charAt(index + 1) == 9)))) {
                indexTemp3 += 2;
                break;
              }
            } while (false);
            if (indexTemp3 != index) {
              index = indexTemp3;
            } else {
              break;
            }
          }
          if (index < endIndex && (str.charAt(index) == 34)) {
            ++index;
          } else {
            index = indexStart2;
            break;
          }
          indexTemp2 = index;
          index = indexStart2;
        } while (false);
        if (indexTemp2 != index) {
          index = indexTemp2;
          break;
        }
      } while (false);
      if (tokener != null && index == indexStart) {
        tokener.RestoreState (state);
      }
      return index;
    }
    public static int ParseMailbox(String str, int index, int endIndex,
      ITokener tokener) {
      int indexStart, indexTemp2, state;
      indexStart = index;
      state = (tokener != null) ? tokener.GetState() : 0;
      do {
        indexTemp2 = ParseNameAddr (str, index, endIndex, tokener);
        if (indexTemp2 != index) {
          index = indexTemp2;
          break;
        }
        indexTemp2 = ParseAddrSpec (str, index, endIndex, tokener);
        if (indexTemp2 != index) {
          index = indexTemp2;
          break;
        }
      } while (false);
      if (tokener != null) {
        if (index == indexStart) {
          tokener.RestoreState (state);
        } else {
          tokener.Commit (5, indexStart, index);
        }
      }
      return index;
    }
    public static int ParseMailboxList(String str, int index, int endIndex,
      ITokener tokener) {
      int indexStart, indexStart2, indexTemp2, indexTemp3, indexTemp4, state,
          state2, tx2;
      indexStart = index;
      state = (tokener != null) ? tokener.GetState() : 0;
      do {
        while (true) {
          state2 = (tokener != null) ? tokener.GetState() : 0;
          indexTemp2 = index;
          do {
            indexStart2 = index;
            index = ParseCFWS (str, index, endIndex, tokener);
            if (index < endIndex && (str.charAt(index) == 44)) {
              ++index;
            } else {
              index = indexStart2;
              break;
            }
            indexTemp2 = index;
            index = indexStart2;
          } while (false);
          if (indexTemp2 != index) {
            index = indexTemp2;
          } else {
            if (tokener != null) {
              tokener.RestoreState (state2);
            }
            break;
          }
        }
        tx2 = ParseMailbox (str, index, endIndex, tokener);
        if (tx2 == index) {
          index = indexStart;
          break;
        }
        index = tx2;
        while (true) {
          state2 = (tokener != null) ? tokener.GetState() : 0;
          indexTemp2 = index;
          do {
            indexStart2 = index;
            if (index < endIndex && (str.charAt(index) == 44)) {
              ++index;
            } else {
              break;
            }
            do {
              indexTemp3 = index;
              do {
                indexTemp4 = ParseMailbox (str, index, endIndex, tokener);
                if (indexTemp4 != index) {
                  indexTemp3 = indexTemp4;
                  break;
                }
                indexTemp4 = ParseCFWS (str, index, endIndex, tokener);
                if (indexTemp4 != index) {
                  indexTemp3 = indexTemp4;
                  break;
                }
              } while (false);
              if (indexTemp3 != index) {
                index = indexTemp3;
              } else {
                break;
              }
            } while (false);
            indexTemp2 = index;
            index = indexStart2;
          } while (false);
          if (indexTemp2 != index) {
            index = indexTemp2;
          } else {
            if (tokener != null) {
              tokener.RestoreState (state2);
            }
            break;
          }
        }
      } while (false);
      if (tokener != null && index == indexStart) {
        tokener.RestoreState (state);
      }
      return index;
    }
    public static int ParseMcElement(String str, int index, int endIndex,
      ITokener tokener) {
      int indexStart, state, tx2;
      indexStart = index;
      state = (tokener != null) ? tokener.GetState() : 0;
      do {
        if (endIndex - index > 2 && (str.charAt(index) & ~32) == 77 &&
          (str.charAt(index + 1) & ~32) == 67 && str.charAt(index + 2) == 61) {
          index += 3;
        } else {
          break;
        }
        index = ParseFWS (str, index, endIndex, tokener);
        tx2 = ParseTypeString (str, index, endIndex, tokener);
        if (tx2 == index) {
          index = indexStart;
          break;
        }
        index = tx2;
      } while (false);
      if (tokener != null && index == indexStart) {
        tokener.RestoreState (state);
      }
      return index;
    }
    public static int ParseMdElement(String str, int index, int endIndex,
      ITokener tokener) {
      int i, indexStart, indexStart2, indexTemp2, state;
      indexStart = index;
      state = (tokener != null) ? tokener.GetState() : 0;
      do {
        if (endIndex - index > 2 && (str.charAt(index) & ~32) == 77 &&
          (str.charAt(index + 1) & ~32) == 68 && str.charAt(index + 2) == 61) {
          index += 3;
        } else {
          break;
        }
        index = ParseFWS (str, index, endIndex, tokener);
        if (index < endIndex && ((str.charAt(index) >= 65 && str.charAt(index) <= 90) ||
          (str.charAt(index) >= 97 && str.charAt(index) <= 122) || (str.charAt(index) >= 48 &&
          str.charAt(index) <= 57))) {
          ++index;
        } else {
          index = indexStart;
          break;
        }
        index = ParseLdhStr (str, index, endIndex, tokener);
        for (i = 0; true; ++i) {
          indexTemp2 = index;
          do {
            indexStart2 = index;
            if (endIndex - index > 1 && (str.charAt(index) == 46) && ((str.charAt(index +
              1) >= 65 && str.charAt(index + 1) <= 90) || (str.charAt(index + 1) >= 97 &&
                str.charAt(index + 1) <= 122) ||
              (str.charAt(index + 1) >= 48 && str.charAt(index + 1) <= 57))) {
              index += 2;
            } else {
              break;
            }
            index = ParseLdhStr (str, index, endIndex, tokener);
            indexTemp2 = index;
            index = indexStart2;
          } while (false);
          if (indexTemp2 != index) {
            index = indexTemp2;
          } else {
            if (i < 1) {
              index = indexStart;
            }
            break;
          }
        }
        if (index == indexStart) {
          break;
        }
      } while (false);
      if (tokener != null && index == indexStart) {
        tokener.RestoreState (state);
      }
      return index;
    }

    public static int ParseMilitaryString(String str, int index, int
      endIndex,
      ITokener tokener) {
      int i, indexStart;
      indexStart = index;
      for (i = 0; i < 69; ++i) {
        if (index < endIndex && ((str.charAt(index) >= 65 && str.charAt(index) <= 90) ||
          (str.charAt(index) >= 97 && str.charAt(index) <= 122) || (str.charAt(index) == 32) ||
          (str.charAt(index)
            >= 39 && str.charAt(index) <= 41) || (str.charAt(index) >= 43 && str.charAt(index)
            <= 58) || (str.charAt(index) == 61) || (str.charAt(index) == 63))) {
          ++index;
        } else if (i < 1) {
          index = indexStart;
          break;
        } else {
          break;
        }
      }
      return (index == indexStart) ? (indexStart) : (index);
    }
    public static int ParseMixerKeyword(String str, int index, int endIndex,
      ITokener tokener) {
      int indexStart, state;
      indexStart = index;
      state = (tokener != null) ? tokener.GetState() : 0;
      do {
        index = ParseFWS (str, index, endIndex, tokener);
        if (index < endIndex && ((str.charAt(index) >= 65 && str.charAt(index) <= 90) ||
          (str.charAt(index) >= 97 && str.charAt(index) <= 122) || (str.charAt(index) >= 48 &&
          str.charAt(index) <= 57) || (str.charAt(index) == 45))) {
          ++index;
          while (index < endIndex && ((str.charAt(index) >= 65 && str.charAt(index) <= 90) ||
            (str.charAt(index) >= 97 && str.charAt(index) <= 122) || (str.charAt(index) >= 48 &&
            str.charAt(index) <= 57) || (str.charAt(index) == 45))) {
            ++index;
          }
        } else {
          index = indexStart;
          break;
        }
        index = ParseFWS (str, index, endIndex, tokener);
      } while (false);
      if (tokener != null && index == indexStart) {
        tokener.RestoreState (state);
      }
      return index;
    }
    public static int ParseMsgId(String str, int index, int endIndex, ITokener
      tokener) {
      int indexStart, state, tx2;
      indexStart = index;
      state = (tokener != null) ? tokener.GetState() : 0;
      do {
        index = ParseCFWS (str, index, endIndex, tokener);
        if (index < endIndex && (str.charAt(index) == 60)) {
          ++index;
        } else {
          index = indexStart;
          break;
        }
        tx2 = ParseIdLeft (str, index, endIndex, tokener);
        if (tx2 == index) {
          index = indexStart;
          break;
        }
        index = tx2;
        if (index < endIndex && (str.charAt(index) == 64)) {
          ++index;
        } else {
          index = indexStart;
          break;
        }
        tx2 = ParseIdRight (str, index, endIndex, tokener);
        if (tx2 == index) {
          index = indexStart;
          break;
        }
        index = tx2;
        if (index < endIndex && (str.charAt(index) == 62)) {
          ++index;
        } else {
          index = indexStart;
          break;
        }
        index = ParseCFWS (str, index, endIndex, tokener);
      } while (false);
      if (tokener != null && index == indexStart) {
        tokener.RestoreState (state);
      }
      return index;
    }
    public static int ParseMvElement(String str, int index, int endIndex,
      ITokener tokener) {
      int i, i2, indexStart, indexStart2, indexStart3, indexTemp2, indexTemp3,
          state, state2;
      indexStart = index;
      state = (tokener != null) ? tokener.GetState() : 0;
      do {
        if (endIndex - index > 2 && (str.charAt(index) & ~32) == 77 &&
          (str.charAt(index + 1) & ~32) == 86 && str.charAt(index + 2) == 61) {
          index += 3;
        } else {
          break;
        }
        index = ParseFWS (str, index, endIndex, tokener);
        if (index < endIndex && ((str.charAt(index) >= 65 && str.charAt(index) <= 90) ||
          (str.charAt(index) >= 97 && str.charAt(index) <= 122) || (str.charAt(index) >= 48 &&
          str.charAt(index) <= 57))) {
          ++index;
        } else {
          index = indexStart;
          break;
        }
        index = ParseLdhStr (str, index, endIndex, tokener);
        for (i = 0; true; ++i) {
          indexTemp2 = index;
          do {
            indexStart2 = index;
            if (endIndex - index > 1 && (str.charAt(index) == 46) && ((str.charAt(index +
              1) >= 65 && str.charAt(index + 1) <= 90) || (str.charAt(index + 1) >= 97 &&
                str.charAt(index + 1) <= 122) ||
              (str.charAt(index + 1) >= 48 && str.charAt(index + 1) <= 57))) {
              index += 2;
            } else {
              break;
            }
            index = ParseLdhStr (str, index, endIndex, tokener);
            indexTemp2 = index;
            index = indexStart2;
          } while (false);
          if (indexTemp2 != index) {
            index = indexTemp2;
          } else {
            if (i < 1) {
              index = indexStart;
            }
            break;
          }
        }
        if (index == indexStart) {
          break;
        }
        while (true) {
          state2 = (tokener != null) ? tokener.GetState() : 0;
          indexTemp2 = index;
          do {
            indexStart2 = index;
            if (endIndex - index > 1 && (str.charAt(index) == 58) && ((str.charAt(index +
              1) >= 65 && str.charAt(index + 1) <= 90) || (str.charAt(index + 1) >= 97 &&
                str.charAt(index + 1) <= 122) ||
              (str.charAt(index + 1) >= 48 && str.charAt(index + 1) <= 57))) {
              index += 2;
            } else {
              break;
            }
            index = ParseLdhStr (str, index, endIndex, tokener);
            for (i2 = 0; true; ++i2) {
              indexTemp3 = index;
              do {
                indexStart3 = index;
                if (endIndex - index > 1 && (str.charAt(index) == 46) &&
                  ((str.charAt(index + 1) >= 65 &&
                  str.charAt(index + 1) <= 90) || (str.charAt(index + 1) >= 97 &&
                    str.charAt(index + 1) <= 122) ||
                  (str.charAt(index + 1) >= 48 && str.charAt(index + 1) <= 57))) {
                  index += 2;
                } else {
                  break;
                }
                index = ParseLdhStr (str, index, endIndex, tokener);
                indexTemp3 = index;
                index = indexStart3;
              } while (false);
              if (indexTemp3 != index) {
                index = indexTemp3;
              } else {
                if (i2 < 1) {
                  index = indexStart2;
                }
                break;
              }
            }
            if (index == indexStart2) {
              break;
            }
            indexTemp2 = index;
            index = indexStart2;
          } while (false);
          if (indexTemp2 != index) {
            index = indexTemp2;
          } else {
            if (tokener != null) {
              tokener.RestoreState (state2);
            }
            break;
          }
        }
      } while (false);
      if (tokener != null && index == indexStart) {
        tokener.RestoreState (state);
      }
      return index;
    }
    public static int ParseNameAddr(String str, int index, int endIndex,
      ITokener tokener) {
      int indexStart, state, tx2;
      indexStart = index;
      state = (tokener != null) ? tokener.GetState() : 0;
      do {
        index = ParseDisplayName (str, index, endIndex, tokener);
        index = ParseCFWS (str, index, endIndex, tokener);
        if (index < endIndex && (str.charAt(index) == 60)) {
          ++index;
        } else {
          index = indexStart;
          break;
        }
        index = ParseObsRoute (str, index, endIndex, tokener);
        tx2 = ParseLocalPart (str, index, endIndex, tokener);
        if (tx2 == index) {
          index = indexStart;
          break;
        }
        index = tx2;
        if (index < endIndex && (str.charAt(index) == 64)) {
          ++index;
        } else {
          index = indexStart;
          break;
        }
        index = ParseCFWS (str, index, endIndex, tokener);
        tx2 = ParseDomainCore (str, index, endIndex, tokener);
        if (tx2 == index) {
          index = indexStart;
          break;
        }
        index = tx2;
        index = ParseCFWS (str, index, endIndex, tokener);
        if (index < endIndex && (str.charAt(index) == 62)) {
          ++index;
        } else {
          index = indexStart;
          break;
        }
        index = ParseCFWS (str, index, endIndex, tokener);
      } while (false);
      if (tokener != null && index == indexStart) {
        tokener.RestoreState (state);
      }
      return index;
    }
    public static int ParseNewsgroupList(String str, int index, int endIndex,
      ITokener tokener) {
      int indexStart, indexStart2, indexStart3, indexTemp2, indexTemp3, state,
          state2;
      indexStart = index;
      state = (tokener != null) ? tokener.GetState() : 0;
      do {
        while (index < endIndex && ((str.charAt(index) == 32) || (str.charAt(index) == 9))) {
          ++index;
        }
        if (index < endIndex && ((str.charAt(index) >= 65 && str.charAt(index) <= 90) ||
          (str.charAt(index) >= 97 && str.charAt(index) <= 122) || (str.charAt(index) >= 48 &&
          str.charAt(index) <= 57) || (str.charAt(index) == 43) || (str.charAt(index) == 45) ||
          (str.charAt(index) == 95))) {
          ++index;
          while (index < endIndex && ((str.charAt(index) >= 65 && str.charAt(index) <= 90) ||
            (str.charAt(index) >= 97 && str.charAt(index) <= 122) || (str.charAt(index) >= 48 &&
            str.charAt(index) <= 57) || (str.charAt(index) == 43) || (str.charAt(index) == 45) ||
            (str.charAt(index) == 95))) {
            ++index;
          }
        } else {
          index = indexStart;
          break;
        }
        while (true) {
          indexTemp2 = index;
          do {
            indexStart2 = index;
            if (index < endIndex && (str.charAt(index) == 46)) {
              ++index;
            } else {
              break;
            }
            if (index < endIndex && ((str.charAt(index) >= 65 && str.charAt(index) <= 90) ||
              (str.charAt(index) >= 97 && str.charAt(index) <= 122) || (str.charAt(index) >= 48 &&
              str.charAt(index) <= 57) || (str.charAt(index) == 43) || (str.charAt(index) == 45) ||
              (str.charAt(index) == 95))) {
              ++index;
              while (index < endIndex && ((str.charAt(index) >= 65 && str.charAt(index) <=
                90) || (str.charAt(index) >= 97 && str.charAt(index) <= 122) || (str.charAt(index) >=
                  48 && str.charAt(index)
                  <= 57) || (str.charAt(index) == 43) || (str.charAt(index) == 45) ||
                (str.charAt(index) == 95))) {
                ++index;
              }
            } else {
              index = indexStart2;
              break;
            }
            indexTemp2 = index;
            index = indexStart2;
          } while (false);
          if (indexTemp2 != index) {
            index = indexTemp2;
          } else {
            break;
          }
        }
        while (true) {
          state2 = (tokener != null) ? tokener.GetState() : 0;
          indexTemp2 = index;
          do {
            indexStart2 = index;
            index = ParseFWS (str, index, endIndex, tokener);
            if (index < endIndex && (str.charAt(index) == 44)) {
              ++index;
            } else {
              index = indexStart2;
              break;
            }
            index = ParseFWS (str, index, endIndex, tokener);
            if (index < endIndex && ((str.charAt(index) >= 65 && str.charAt(index) <= 90) ||
              (str.charAt(index) >= 97 && str.charAt(index) <= 122) || (str.charAt(index) >= 48 &&
              str.charAt(index) <= 57) || (str.charAt(index) == 43) || (str.charAt(index) == 45) ||
              (str.charAt(index) == 95))) {
              ++index;
              while (index < endIndex && ((str.charAt(index) >= 65 && str.charAt(index) <=
                90) || (str.charAt(index) >= 97 && str.charAt(index) <= 122) || (str.charAt(index) >=
                  48 && str.charAt(index)
                  <= 57) || (str.charAt(index) == 43) || (str.charAt(index) == 45) ||
                (str.charAt(index) == 95))) {
                ++index;
              }
            } else {
              index = indexStart2;
              break;
            }
            while (true) {
              indexTemp3 = index;
              do {
                indexStart3 = index;
                if (index < endIndex && (str.charAt(index) == 46)) {
                  ++index;
                } else {
                  break;
                }
                if (index < endIndex && ((str.charAt(index) >= 65 && str.charAt(index) <=
                  90) || (str.charAt(index) >= 97 && str.charAt(index) <= 122) || (str.charAt(index)
                    >= 48 && str.charAt(index)
                    <= 57) || (str.charAt(index) == 43) || (str.charAt(index) == 45) ||
                  (str.charAt(index) == 95))) {
                  ++index;
                  while (index < endIndex && ((str.charAt(index) >= 65 &&
                    str.charAt(index) <= 90) ||
                    (str.charAt(index) >= 97 && str.charAt(index) <= 122) || (str.charAt(index)
                    >= 48 && str.charAt(index)
                    <= 57) || (str.charAt(index) == 43) || (str.charAt(index) == 45) ||
                    (str.charAt(index) == 95))) {
                    ++index;
                  }
                } else {
                  index = indexStart3;
                  break;
                }
                indexTemp3 = index;
                index = indexStart3;
              } while (false);
              if (indexTemp3 != index) {
                index = indexTemp3;
              } else {
                break;
              }
            }
            indexTemp2 = index;
            index = indexStart2;
          } while (false);
          if (indexTemp2 != index) {
            index = indexTemp2;
          } else {
            if (tokener != null) {
              tokener.RestoreState (state2);
            }
            break;
          }
        }
        while (index < endIndex && ((str.charAt(index) == 32) || (str.charAt(index) == 9))) {
          ++index;
        }
      } while (false);
      if (tokener != null && index == indexStart) {
        tokener.RestoreState (state);
      }
      return index;
    }
    public static int ParseNoEncodedWords(String str, int index, int endIndex,
      ITokener tokener) {
      return ParseObsUnstruct (str, index, endIndex, tokener);
    }
    public static int ParseNoFoldLiteral(String str, int index, int endIndex,
      ITokener tokener) {
      int indexStart, indexTemp2, state;
      indexStart = index;
      state = (tokener != null) ? tokener.GetState() : 0;
      do {
        if (index < endIndex && (str.charAt(index) == 91)) {
          ++index;
        } else {
          break;
        }
        while (true) {
          indexTemp2 = ParseDtext (str, index, endIndex, tokener);
          if (indexTemp2 != index) {
            index = indexTemp2;
          } else {
            break;
          }
        }
        if (index < endIndex && (str.charAt(index) == 93)) {
          ++index;
        } else {
          index = indexStart;
          break;
        }
      } while (false);
      if (tokener != null && index == indexStart) {
        tokener.RestoreState (state);
      }
      return index;
    }
    public static int ParseNoResult(String str, int index, int endIndex,
      ITokener tokener) {
      int indexStart, state;
      indexStart = index;
      state = (tokener != null) ? tokener.GetState() : 0;
      do {
        index = ParseCFWS (str, index, endIndex, tokener);
        if (index < endIndex && (str.charAt(index) == 59)) {
          ++index;
        } else {
          index = indexStart;
          break;
        }
        index = ParseCFWS (str, index, endIndex, tokener);
        if (endIndex - index > 3 && (str.charAt(index) & ~32) == 78 &&
          (str.charAt(index + 1) & ~32) == 79 && (str.charAt(index + 2) & ~32) == 78 &&
          (str.charAt(index + 3) & ~32) == 69) {
          index += 4;
        } else {
          index = indexStart;
          break;
        }
      } while (false);
      if (tokener != null && index == indexStart) {
        tokener.RestoreState (state);
      }
      return index;
    }

    public static int ParseNodeid(String str, int index, int
      endIndex, ITokener tokener) {
      int indexTemp2;
      while (true) {
        indexTemp2 = index;
        if (index < endIndex && ((str.charAt(index) >= 65 && str.charAt(index) <= 90) ||
          (str.charAt(index) >= 97 && str.charAt(index) <= 122) || (str.charAt(index) >= 48 &&
          str.charAt(index) <= 57) || (str.charAt(index) >= 45 && str.charAt(index) <= 46) ||
          (str.charAt(index) == 95) || (str.charAt(index) == 126))) {
          ++indexTemp2;
        } else if (endIndex - index > 2 && (((str.charAt(index) == 37) &&
          (((str.charAt(index + 1)
          >= 48 && str.charAt(index + 1) <= 57) || (str.charAt(index + 1) >= 65 &&
            str.charAt(index + 1) <=
            70) || (str.charAt(index + 1) >= 97 && str.charAt(index + 1) <= 102))&&
          ((str.charAt(index + 2)
          >= 48 && str.charAt(index + 2) <= 57) || (str.charAt(index + 2) >= 65 &&
            str.charAt(index + 2) <= 70) || (str.charAt(index + 2) >= 97 && str.charAt(index + 2) <=
            102)))))) {
          indexTemp2 += 3;
        } else if (index < endIndex && ((str.charAt(index) == 33) || (str.charAt(index) ==
          36) || (str.charAt(index) >= 40 && str.charAt(index) <= 44) || (str.charAt(index) == 59) ||
          (str.charAt(index) == 61))) {
          ++indexTemp2;
        }
        if (indexTemp2 != index) {
          index = indexTemp2;
        } else {
          break;
        }
      }
      return index;
    }

    public static int ParseNonnegInteger(String str, int index, int
      endIndex,
      ITokener tokener) {
      int indexStart2, indexTemp2;
      do {
        if (index < endIndex && (str.charAt(index) == 48)) {
          ++index;
          break;
        }
        indexTemp2 = index;
        do {
          indexStart2 = index;
          if (index < endIndex && (str.charAt(index) >= 49 && str.charAt(index) <= 57)) {
            ++index;
          } else {
            break;
          }
          while (index < endIndex && (str.charAt(index) >= 48 && str.charAt(index) <= 57)) {
            ++index;
          }
          indexTemp2 = index;
          index = indexStart2;
        } while (false);
        if (indexTemp2 != index) {
          index = indexTemp2;
          break;
        }
      } while (false);
      return index;
    }
    public static int ParseObsAcceptLanguage(String str, int index, int
      endIndex, ITokener tokener) {
      int indexStart, indexStart2, indexStart3, indexTemp2, indexTemp3, state,
          state2, tx2, tx3, tx4;
      indexStart = index;
      state = (tokener != null) ? tokener.GetState() : 0;
      do {
        index = ParseCFWS (str, index, endIndex, tokener);
        tx2 = ParseLanguageRange (str, index, endIndex, tokener);
        if (tx2 == index) {
          index = indexStart;
          break;
        }
        index = tx2;
        do {
          indexTemp2 = index;
          do {
            indexStart2 = index;
            index = ParseCFWS (str, index, endIndex, tokener);
            if (index < endIndex && (str.charAt(index) == 59)) {
              ++index;
            } else {
              index = indexStart2;
              break;
            }
            index = ParseCFWS (str, index, endIndex, tokener);
            if (index < endIndex && ((str.charAt(index) == 81) || (str.charAt(index) ==
              113))) {
              ++index;
            } else {
              index = indexStart2;
              break;
            }
            index = ParseCFWS (str, index, endIndex, tokener);
            if (index < endIndex && (str.charAt(index) == 61)) {
              ++index;
            } else {
              index = indexStart2;
              break;
            }
            tx3 = ParseQvalue (str, index, endIndex, tokener);
            if (tx3 == index) {
              index = indexStart2;
              break;
            }
            index = tx3;
            indexTemp2 = index;
            index = indexStart2;
          } while (false);
          if (indexTemp2 != index) {
            index = indexTemp2;
          } else {
            break;
          }
        } while (false);
        index = ParseCFWS (str, index, endIndex, tokener);
        while (true) {
          state2 = (tokener != null) ? tokener.GetState() : 0;
          indexTemp2 = index;
          do {
            indexStart2 = index;
            if (index < endIndex && (str.charAt(index) == 44)) {
              ++index;
            } else {
              break;
            }
            index = ParseCFWS (str, index, endIndex, tokener);
            tx3 = ParseLanguageRange (str, index, endIndex, tokener);
            if (tx3 == index) {
              index = indexStart2;
              break;
            }
            index = tx3;
            do {
              indexTemp3 = index;
              do {
                indexStart3 = index;
                index = ParseCFWS (str, index, endIndex, tokener);
                if (index < endIndex && (str.charAt(index) == 59)) {
                  ++index;
                } else {
                  index = indexStart3;
                  break;
                }
                index = ParseCFWS (str, index, endIndex, tokener);
                if (index < endIndex && ((str.charAt(index) == 81) || (str.charAt(index)
                  == 113))) {
                  ++index;
                } else {
                  index = indexStart3;
                  break;
                }
                index = ParseCFWS (str, index, endIndex, tokener);
                if (index < endIndex && (str.charAt(index) == 61)) {
                  ++index;
                } else {
                  index = indexStart3;
                  break;
                }
                tx4 = ParseQvalue (str, index, endIndex, tokener);
                if (tx4 == index) {
                  index = indexStart3;
                  break;
                }
                index = tx4;
                indexTemp3 = index;
                index = indexStart3;
              } while (false);
              if (indexTemp3 != index) {
                index = indexTemp3;
              } else {
                break;
              }
            } while (false);
            index = ParseCFWS (str, index, endIndex, tokener);
            indexTemp2 = index;
            index = indexStart2;
          } while (false);
          if (indexTemp2 != index) {
            index = indexTemp2;
          } else {
            if (tokener != null) {
              tokener.RestoreState (state2);
            }
            break;
          }
        }
        index = ParseCFWS (str, index, endIndex, tokener);
      } while (false);
      if (tokener != null && index == indexStart) {
        tokener.RestoreState (state);
      }
      return index;
    }
    public static int ParseObsGroupList(String str, int index, int endIndex,
      ITokener tokener) {
      int i, indexStart, indexStart2, indexTemp2, state;
      indexStart = index;
      state = (tokener != null) ? tokener.GetState() : 0;
      do {
        for (i = 0; true; ++i) {
          indexTemp2 = index;
          do {
            indexStart2 = index;
            index = ParseCFWS (str, index, endIndex, tokener);
            if (index < endIndex && (str.charAt(index) == 44)) {
              ++index;
            } else {
              index = indexStart2;
              break;
            }
            indexTemp2 = index;
            index = indexStart2;
          } while (false);
          if (indexTemp2 != index) {
            index = indexTemp2;
          } else {
            if (i < 1) {
              index = indexStart;
            }
            break;
          }
        }
        if (index == indexStart) {
          break;
        }
        index = ParseCFWS (str, index, endIndex, tokener);
      } while (false);
      if (tokener != null && index == indexStart) {
        tokener.RestoreState (state);
      }
      return index;
    }

    public static int ParseObsNOWSCTL(String str, int index, int
      endIndex,
      ITokener tokener) {
      if (index < endIndex && ((str.charAt(index) >= 1 && str.charAt(index) <= 8) ||
        (str.charAt(index)
          >= 11 && str.charAt(index) <= 12) || (str.charAt(index) >= 14 && str.charAt(index) <=
          31) || (str.charAt(index) == 127))) {
        ++index;
      }
      return index;
    }
    public static int ParseObsRoute(String str, int index, int endIndex,
      ITokener tokener) {
      int indexStart, indexStart2, indexStart3, indexTemp2, indexTemp3, state,
          state2, tx2, tx4;
      indexStart = index;
      state = (tokener != null) ? tokener.GetState() : 0;
      do {
        while (true) {
          state2 = (tokener != null) ? tokener.GetState() : 0;
          indexTemp2 = index;
          do {
            indexTemp3 = ParseCFWS (str, index, endIndex, tokener);
            if (indexTemp3 != index) {
              indexTemp2 = indexTemp3;
              break;
            }
            if (index < endIndex && (str.charAt(index) == 44)) {
              ++indexTemp2;
              break;
            }
          } while (false);
          if (indexTemp2 != index) {
            index = indexTemp2;
          } else {
            if (tokener != null) {
              tokener.RestoreState (state2);
            }
            break;
          }
        }
        if (index < endIndex && (str.charAt(index) == 64)) {
          ++index;
        } else {
          index = indexStart;
          break;
        }
        index = ParseCFWS (str, index, endIndex, tokener);
        tx2 = ParseDomainCore (str, index, endIndex, tokener);
        if (tx2 == index) {
          index = indexStart;
          break;
        }
        index = tx2;
        index = ParseCFWS (str, index, endIndex, tokener);
        while (true) {
          state2 = (tokener != null) ? tokener.GetState() : 0;
          indexTemp2 = index;
          do {
            indexStart2 = index;
            if (index < endIndex && (str.charAt(index) == 44)) {
              ++index;
            } else {
              break;
            }
            index = ParseCFWS (str, index, endIndex, tokener);
            do {
              indexTemp3 = index;
              do {
                indexStart3 = index;
                if (index < endIndex && (str.charAt(index) == 64)) {
                  ++index;
                } else {
                  break;
                }
                index = ParseCFWS (str, index, endIndex, tokener);
                tx4 = ParseDomainCore (str, index, endIndex, tokener);
                if (tx4 == index) {
                  index = indexStart3;
                  break;
                }
                index = tx4;
                index = ParseCFWS (str, index, endIndex, tokener);
                indexTemp3 = index;
                index = indexStart3;
              } while (false);
              if (indexTemp3 != index) {
                index = indexTemp3;
              } else {
                break;
              }
            } while (false);
            indexTemp2 = index;
            index = indexStart2;
          } while (false);
          if (indexTemp2 != index) {
            index = indexTemp2;
          } else {
            if (tokener != null) {
              tokener.RestoreState (state2);
            }
            break;
          }
        }
        if (index < endIndex && (str.charAt(index) == 58)) {
          ++index;
        } else {
          index = indexStart;
          break;
        }
      } while (false);
      if (tokener != null && index == indexStart) {
        tokener.RestoreState (state);
      }
      return index;
    }
    public static int ParseObsUnstruct(String str, int index, int endIndex,
      ITokener tokener) {
      int i3, i4, indexStart, indexStart3, indexStart4, indexTemp2, indexTemp3,
          indexTemp4, indexTemp5, state, state2, state3;
      indexStart = index;
      state = (tokener != null) ? tokener.GetState() : 0;
      do {
        while (true) {
          state2 = (tokener != null) ? tokener.GetState() : 0;
          indexTemp2 = index;
          do {
            state3 = (tokener != null) ? tokener.GetState() : 0;
            indexTemp3 = index;
            do {
              indexStart3 = index;
              while (index < endIndex && (str.charAt(index) == 13)) {
                ++index;
              }
              for (i3 = 0; true; ++i3) {
                indexTemp4 = index;
                do {
                  indexTemp5 = index;
                  if (index < endIndex && ((str.charAt(index) >= 0 && str.charAt(index) <=
                    8) || (str.charAt(index)
                      >= 11 && str.charAt(index) <= 12) || (str.charAt(index) >= 14 &&
                      str.charAt(index) <= 31) ||
                    (str.charAt(index) >= 33 && str.charAt(index) <= 55295) ||
                    (str.charAt(index) >= 57344 && str.charAt(index) <= 65535))) {
                    ++indexTemp5;
                  } else if (endIndex - index > 1 && ((str.charAt(index) >= 55296 &&
                    str.charAt(index) <=
                    56319) && (str.charAt(index + 1) >= 56320 && str.charAt(index + 1)
                      <= 57343))) {
                    indexTemp5 += 2;
                  }
                  if (indexTemp5 != index) {
                    indexTemp4 = indexTemp5;
                    break;
                  }
                  indexStart4 = index;
                  for (i4 = 0; true; ++i4) {
                    indexTemp5 = ParseFWS (str, index, endIndex, tokener);
                    if (indexTemp5 == index) {
                      if (i4 < 1) {
                        indexTemp4 = indexStart4;
                      }
                      break;
                    }
                    index = indexTemp5;
                  }
                  index = indexStart4;
                  if (indexTemp5 != indexStart4) {
                    indexTemp4 = indexTemp5;
                    break;
                  }
                } while (false);
                if (indexTemp4 != index) {
                  index = indexTemp4;
                } else {
                  if (i3 < 1) {
                    index = indexStart3;
                  }
                  break;
                }
              }
              if (index == indexStart3) {
                break;
              }
              indexTemp3 = index;
              index = indexStart3;
            } while (false);
            if (indexTemp3 != index) {
              indexTemp2 = indexTemp3;
              break;
            }
            if (tokener != null) {
              tokener.RestoreState (state3);
            }
            if (index < endIndex && (str.charAt(index) == 10)) {
              ++indexTemp2;
              while (indexTemp2 < endIndex && (str.charAt(indexTemp2) == 10)) {
                ++indexTemp2;
              }
              break;
            }
          } while (false);
          if (indexTemp2 != index) {
            index = indexTemp2;
          } else {
            if (tokener != null) {
              tokener.RestoreState (state2);
            }
            break;
          }
        }
        while (index < endIndex && (str.charAt(index) == 13)) {
          ++index;
        }
      } while (false);
      if (tokener != null && index == indexStart) {
        tokener.RestoreState (state);
      }
      return index;
    }
    public static int ParsePath(String str, int index, int endIndex, ITokener
      tokener) {
      int indexStart, indexStart2, indexTemp2, state, state2;
      indexStart = index;
      state = (tokener != null) ? tokener.GetState() : 0;
      do {
        indexTemp2 = ParseAngleAddr (str, index, endIndex, tokener);
        if (indexTemp2 != index) {
          index = indexTemp2;
          break;
        }
        state2 = (tokener != null) ? tokener.GetState() : 0;
        indexTemp2 = index;
        do {
          indexStart2 = index;
          index = ParseCFWS (str, index, endIndex, tokener);
          if (index < endIndex && (str.charAt(index) == 60)) {
            ++index;
          } else {
            index = indexStart2;
            break;
          }
          index = ParseCFWS (str, index, endIndex, tokener);
          if (index < endIndex && (str.charAt(index) == 62)) {
            ++index;
          } else {
            index = indexStart2;
            break;
          }
          index = ParseCFWS (str, index, endIndex, tokener);
          indexTemp2 = index;
          index = indexStart2;
        } while (false);
        if (indexTemp2 != index) {
          index = indexTemp2;
          break;
        }
        if (tokener != null) {
          tokener.RestoreState (state2);
        }
      } while (false);
      if (tokener != null && index == indexStart) {
        tokener.RestoreState (state);
      }
      return index;
    }

    public static int ParsePathIdentity(String str, int index, int
      endIndex,
      ITokener tokener) {
      int i2, i4, indexStart2, indexStart3, indexStart4, indexTemp2, indexTemp3,
          indexTemp4, indexTemp5;
      do {
        indexTemp2 = index;
        do {
          indexStart2 = index;
          for (i2 = 0; true; ++i2) {
            indexTemp3 = index;
            do {
              indexStart3 = index;
              if (index < endIndex && ((str.charAt(index) >= 65 && str.charAt(index) <= 90) ||
                (str.charAt(index) >= 97 && str.charAt(index) <= 122) || (str.charAt(index) >=
                48 && str.charAt(index) <= 57))) {
                ++index;
              } else {
                break;
              }
              while (true) {
                indexTemp4 = index;
                if (endIndex - index > 1 && ((str.charAt(index) == 45) &&
                  ((str.charAt(index + 1) >= 65 &&
                  str.charAt(index + 1) <= 90) || (str.charAt(index + 1) >= 97 &&
                    str.charAt(index + 1) <= 122) ||
                  (str.charAt(index + 1) >= 48 && str.charAt(index + 1) <= 57)))) {
                  indexTemp4 += 2;
                } else if (index < endIndex && ((str.charAt(index) >= 65 &&
                  str.charAt(index) <= 90) ||
                  (str.charAt(index) >= 97 && str.charAt(index) <= 122) || (str.charAt(index)
                  >= 48 && str.charAt(index) <= 57))) {
                  ++indexTemp4;
                }
                if (indexTemp4 != index) {
                  index = indexTemp4;
                } else {
                  break;
                }
              }
              if (index < endIndex && (str.charAt(index) == 46)) {
                ++index;
              } else {
                index = indexStart3;
                break;
              }
              indexTemp3 = index;
              index = indexStart3;
            } while (false);
            if (indexTemp3 != index) {
              index = indexTemp3;
            } else {
              if (i2 < 1) {
                index = indexStart2;
              }
              break;
            }
          }
          if (index == indexStart2) {
            break;
          }
          do {
            indexTemp3 = index;
            do {
              indexTemp4 = index;
              do {
                indexStart4 = index;
                if (index < endIndex && ((str.charAt(index) >= 65 && str.charAt(index) <=
                  90) || (str.charAt(index) >= 97 && str.charAt(index) <= 122))) {
                  ++index;
                } else {
                  break;
                }
                for (i4 = 0; true; ++i4) {
                  indexTemp5 = index;
                  if (endIndex - index > 1 && ((str.charAt(index) == 45) &&
                    ((str.charAt(index + 1) >= 65 &&
                    str.charAt(index + 1) <= 90) || (str.charAt(index + 1) >= 97 &&
                      str.charAt(index + 1) <= 122) ||
                    (str.charAt(index + 1) >= 48 && str.charAt(index + 1) <= 57)))) {
                    indexTemp5 += 2;
                  } else if (index < endIndex && ((str.charAt(index) >= 65 &&
                    str.charAt(index) <= 90) ||
                    (str.charAt(index) >= 97 && str.charAt(index) <= 122) || (str.charAt(index)
                    >= 48 && str.charAt(index) <= 57))) {
                    ++indexTemp5;
                  }
                  if (indexTemp5 != index) {
                    index = indexTemp5;
                  } else {
                    if (i4 < 1) {
                      index = indexStart4;
                    }
                    break;
                  }
                }
                if (index == indexStart4) {
                  break;
                }
                indexTemp4 = index;
                index = indexStart4;
              } while (false);
              if (indexTemp4 != index) {
                indexTemp3 = indexTemp4;
                break;
              }
              indexTemp4 = index;
              do {
                indexStart4 = index;
                if (index < endIndex && (str.charAt(index) >= 48 && str.charAt(index) <=
                  57)) {
                  ++index;
                } else {
                  break;
                }
                while (index < endIndex && ((str.charAt(index) >= 48 && str.charAt(index)
                  <= 57) || (str.charAt(index) == 45))) {
                  ++index;
                }
                if (index < endIndex && ((str.charAt(index) >= 65 && str.charAt(index) <=
                  90) || (str.charAt(index) >= 97 && str.charAt(index) <= 122))) {
                  ++index;
                } else {
                  index = indexStart4;
                  break;
                }
                while (true) {
                  indexTemp5 = index;
                  if (endIndex - index > 1 && ((str.charAt(index) == 45) &&
                    ((str.charAt(index + 1) >= 65 &&
                    str.charAt(index + 1) <= 90) || (str.charAt(index + 1) >= 97 &&
                      str.charAt(index + 1) <= 122) ||
                    (str.charAt(index + 1) >= 48 && str.charAt(index + 1) <= 57)))) {
                    indexTemp5 += 2;
                  } else if (index < endIndex && ((str.charAt(index) >= 65 &&
                    str.charAt(index) <= 90) ||
                    (str.charAt(index) >= 97 && str.charAt(index) <= 122) || (str.charAt(index)
                    >= 48 && str.charAt(index) <= 57))) {
                    ++indexTemp5;
                  }
                  if (indexTemp5 != index) {
                    index = indexTemp5;
                  } else {
                    break;
                  }
                }
                indexTemp4 = index;
                index = indexStart4;
              } while (false);
              if (indexTemp4 != index) {
                indexTemp3 = indexTemp4;
                break;
              }
            } while (false);
            if (indexTemp3 != index) {
              index = indexTemp3;
            } else {
              index = indexStart2;
              break;
            }
          } while (false);
          if (index == indexStart2) {
            break;
          }
          indexTemp2 = index;
          index = indexStart2;
        } while (false);
        if (indexTemp2 != index) {
          index = indexTemp2;
          break;
        }
        if (index < endIndex && ((str.charAt(index) >= 65 && str.charAt(index) <= 90) ||
          (str.charAt(index) >= 97 && str.charAt(index) <= 122) || (str.charAt(index) >= 48 &&
          str.charAt(index) <= 57) || (str.charAt(index) == 45) || (str.charAt(index) == 95))) {
          ++index;
          while (index < endIndex && ((str.charAt(index) >= 65 && str.charAt(index) <= 90) ||
            (str.charAt(index) >= 97 && str.charAt(index) <= 122) || (str.charAt(index) >= 48 &&
            str.charAt(index) <= 57) || (str.charAt(index) == 45) || (str.charAt(index) == 95))) {
            ++index;
          }
          break;
        }
      } while (false);
      return index;
    }
    public static int ParsePathList(String str, int index, int endIndex,
      ITokener tokener) {
      int i4, indexStart, indexStart2, indexStart4, indexStart5, indexStart6,
          indexStart7, indexTemp2, indexTemp3, indexTemp4, indexTemp5,
          indexTemp6,
          indexTemp7, state, state2, state4, tx3, tx6;
      indexStart = index;
      state = (tokener != null) ? tokener.GetState() : 0;
      do {
        while (true) {
          state2 = (tokener != null) ? tokener.GetState() : 0;
          indexTemp2 = index;
          do {
            indexStart2 = index;
            tx3 = ParsePathIdentity (str, index, endIndex, tokener);
            if (tx3 == index) {
              break;
            }
            index = tx3;
            index = ParseFWS (str, index, endIndex, tokener);
            do {
              indexTemp3 = index;
              do {
                state4 = (tokener != null) ? tokener.GetState() : 0;
                indexTemp4 = index;
                do {
                  indexStart4 = index;
                  if (endIndex - index > 1 && str.charAt(index) == 33 && str.charAt(index +
                      1) == 46) {
                    index += 2;
                  } else {
                    break;
                  }
                  if (index < endIndex && ((str.charAt(index) >= 65 && str.charAt(index)
                    <= 90) || (str.charAt(index) >= 97 && str.charAt(index) <= 122))) {
                    ++index;
                    while (index < endIndex && ((str.charAt(index) >= 65 &&
                      str.charAt(index) <= 90) || (str.charAt(index) >= 97 && str.charAt(index)
                        <= 122))) {
                      ++index;
                    }
                  } else {
                    index = indexStart4;
                    break;
                  }
                  do {
                    indexTemp5 = index;
                    do {
                      indexStart5 = index;
                      if (index < endIndex && (str.charAt(index) == 46)) {
                        ++index;
                      } else {
                        break;
                      }
                      tx6 = ParseDiagIdentity (str, index, endIndex, tokener);
                      if (tx6 == index) {
                        index = indexStart5;
                        break;
                      }
                      index = tx6;
                      indexTemp5 = index;
                      index = indexStart5;
                    } while (false);
                    if (indexTemp5 != index) {
                      index = indexTemp5;
                    } else {
                      break;
                    }
                  } while (false);
                  index = ParseFWS (str, index, endIndex, tokener);
                  if (index < endIndex && (str.charAt(index) == 33)) {
                    ++index;
                  } else {
                    index = indexStart4;
                    break;
                  }
                  indexTemp4 = index;
                  index = indexStart4;
                } while (false);
                if (indexTemp4 != index) {
                  indexTemp3 = indexTemp4;
                  break;
                }
                if (tokener != null) {
                  tokener.RestoreState (state4);
                }
                state4 = (tokener != null) ? tokener.GetState() : 0;
                indexTemp4 = index;
                do {
                  indexStart4 = index;
                  if (index < endIndex && (str.charAt(index) == 33)) {
                    ++index;
                  } else {
                    break;
                  }
                  do {
                    indexTemp5 = index;
                    do {
                      indexTemp6 = index;
                      do {
                        indexStart6 = index;
                        if (endIndex - index > 1 && str.charAt(index) == 50 &&
                          str.charAt(index + 1) == 53) {
                          index += 2;
                        } else {
                          break;
                        }
                        if (index < endIndex && (str.charAt(index) >= 48 &&
                          str.charAt(index) <= 53)) {
                          ++index;
                        } else {
                          index = indexStart6;
                          break;
                        }
                        indexTemp6 = index;
                        index = indexStart6;
                      } while (false);
                      if (indexTemp6 != index) {
                        indexTemp5 = indexTemp6;
                        break;
                      }
                      indexTemp6 = index;
                      do {
                        indexStart6 = index;
                        if (endIndex - index > 1 && (str.charAt(index) == 50)&&
                          (str.charAt(index + 1) >= 48 && str.charAt(index + 1) <= 52)) {
                          index += 2;
                        } else {
                          break;
                        }
                        if (index < endIndex && (str.charAt(index) >= 48 &&
                          str.charAt(index) <= 57)) {
                          ++index;
                        } else {
                          index = indexStart6;
                          break;
                        }
                        indexTemp6 = index;
                        index = indexStart6;
                      } while (false);
                      if (indexTemp6 != index) {
                        indexTemp5 = indexTemp6;
                        break;
                      }
                      if (endIndex - index > 2 && ((str.charAt(index) == 49) &&
                        ((str.charAt(index + 1) >= 48 &&
                        str.charAt(index + 1) <= 57) || (str.charAt(index + 2) >= 48 &&
                          str.charAt(index + 2) <= 57)))) {
                        indexTemp5 += 3;
                        break;
                      }
                      if (endIndex - index > 1 && ((str.charAt(index) >= 49 &&
                        str.charAt(index) <= 57) &&
                        (str.charAt(index + 1) >= 48 && str.charAt(index + 1) <= 57))) {
                        indexTemp5 += 2;
                        break;
                      }
                      if (index < endIndex && (str.charAt(index) >= 48 &&
                        str.charAt(index) <= 57)) {
                        ++indexTemp5;
                        break;
                      }
                    } while (false);
                    if (indexTemp5 != index) {
                      index = indexTemp5;
                    } else {
                      index = indexStart4;
                      break;
                    }
                  } while (false);
                  if (index == indexStart4) {
                    break;
                  }
                  for (i4 = 0; i4 < 3; ++i4) {
                    indexTemp5 = index;
                    do {
                      indexStart5 = index;
                      if (index < endIndex && (str.charAt(index) == 46)) {
                        ++index;
                      } else {
                        break;
                      }
                      do {
                        indexTemp6 = index;
                        do {
                          indexTemp7 = index;
                          do {
                            indexStart7 = index;
                            if (endIndex - index > 1 && str.charAt(index) == 50 &&
                              str.charAt(index + 1) == 53) {
                              index += 2;
                            } else {
                              break;
                            }
                            if (index < endIndex && (str.charAt(index) >= 48 &&
                              str.charAt(index) <= 53)) {
                              ++index;
                            } else {
                              index = indexStart7;
                              break;
                            }
                            indexTemp7 = index;
                            index = indexStart7;
                          } while (false);
                          if (indexTemp7 != index) {
                            indexTemp6 = indexTemp7;
                            break;
                          }
                          indexTemp7 = index;
                          do {
                            indexStart7 = index;
                            if (endIndex - index > 1 && (str.charAt(index) == 50)&&
                              (str.charAt(index + 1) >= 48 && str.charAt(index + 1) <= 52)) {
                              index += 2;
                            } else {
                              break;
                            }
                            if (index < endIndex && (str.charAt(index) >= 48 &&
                              str.charAt(index) <= 57)) {
                              ++index;
                            } else {
                              index = indexStart7;
                              break;
                            }
                            indexTemp7 = index;
                            index = indexStart7;
                          } while (false);
                          if (indexTemp7 != index) {
                            indexTemp6 = indexTemp7;
                            break;
                          }
                          if (endIndex - index > 2 && ((str.charAt(index) == 49) &&
                            ((str.charAt(index + 1) >= 48 &&
                            str.charAt(index + 1) <= 57) || (str.charAt(index + 2)
                              >= 48 && str.charAt(index + 2) <= 57)))) {
                            indexTemp6 += 3;
                            break;
                          }
                          if (endIndex - index > 1 && ((str.charAt(index) >= 49 &&
                            str.charAt(index) <= 57) &&
                            (str.charAt(index + 1) >= 48 && str.charAt(index + 1) <= 57))) {
                            indexTemp6 += 2;
                            break;
                          }
                          if (index < endIndex && (str.charAt(index) >= 48 &&
                            str.charAt(index) <= 57)) {
                            ++indexTemp6;
                            break;
                          }
                        } while (false);
                        if (indexTemp6 != index) {
                          index = indexTemp6;
                        } else {
                          index = indexStart5;
                          break;
                        }
                      } while (false);
                      if (index == indexStart5) {
                        break;
                      }
                      indexTemp5 = index;
                      index = indexStart5;
                    } while (false);
                    if (indexTemp5 != index) {
                      index = indexTemp5;
                    } else {
                      if (i4 < 3) {
                        index = indexStart4;
                      }
                      break;
                    }
                  }
                  if (index == indexStart4) {
                    break;
                  }
                  index = ParseFWS (str, index, endIndex, tokener);
                  if (index < endIndex && (str.charAt(index) == 33)) {
                    ++index;
                  } else {
                    index = indexStart4;
                    break;
                  }
                  indexTemp4 = index;
                  index = indexStart4;
                } while (false);
                if (indexTemp4 != index) {
                  indexTemp3 = indexTemp4;
                  break;
                }
                if (tokener != null) {
                  tokener.RestoreState (state4);
                }
                if (endIndex - index > 1 && str.charAt(index) == 33 && str.charAt(index +
                    1) == 33) {
                  indexTemp3 += 2;
                  break;
                }
                if (index < endIndex && (str.charAt(index) == 33)) {
                  ++indexTemp3;
                  break;
                }
              } while (false);
              if (indexTemp3 != index) {
                index = indexTemp3;
              } else {
                index = indexStart2;
                break;
              }
            } while (false);
            if (index == indexStart2) {
              break;
            }
            indexTemp2 = index;
            index = indexStart2;
          } while (false);
          if (indexTemp2 != index) {
            index = indexTemp2;
          } else {
            if (tokener != null) {
              tokener.RestoreState (state2);
            }
            break;
          }
        }
      } while (false);
      if (tokener != null && index == indexStart) {
        tokener.RestoreState (state);
      }
      return index;
    }
    public static int ParsePhrase(String str, int index, int endIndex, ITokener
      tokener) {
      int indexStart, indexTemp2, indexTemp3, state, state2, tx2;
      indexStart = index;
      state = (tokener != null) ? tokener.GetState() : 0;
      do {
        tx2 = ParsePhraseWord (str, index, endIndex, tokener);
        if (tx2 == index) {
          break;
        }
        index = tx2;
        while (true) {
          state2 = (tokener != null) ? tokener.GetState() : 0;
          indexTemp2 = index;
          do {
            indexTemp3 = ParsePhraseWord (str, index, endIndex, tokener);
            if (indexTemp3 != index) {
              indexTemp2 = indexTemp3;
              break;
            }
            if (index < endIndex && (str.charAt(index) == 46)) {
              ++indexTemp2;
              break;
            }
            indexTemp3 = ParseCFWS (str, index, endIndex, tokener);
            if (indexTemp3 != index) {
              indexTemp2 = indexTemp3;
              break;
            }
          } while (false);
          if (indexTemp2 != index) {
            index = indexTemp2;
          } else {
            if (tokener != null) {
              tokener.RestoreState (state2);
            }
            break;
          }
        }
      } while (false);
      if (tokener != null) {
        if (index == indexStart) {
          tokener.RestoreState (state);
        } else {
          tokener.Commit (1, indexStart, index);
        }
      }
      return index;
    }
    public static int ParsePhraseAtom(String str, int index, int endIndex,
      ITokener tokener) {
      int i, indexStart, indexTemp2, state;
      indexStart = index;
      state = (tokener != null) ? tokener.GetState() : 0;
      for (i = 0; true; ++i) {
        indexTemp2 = index;
        if (index < endIndex && ((str.charAt(index) >= 65 && str.charAt(index) <= 90) ||
          (str.charAt(index) == 33) || (str.charAt(index) >= 35 && str.charAt(index) <= 39) ||
          (str.charAt(index) >= 42 && str.charAt(index) <= 43) || (str.charAt(index) == 45) ||
          (str.charAt(index) >= 47 &&
            str.charAt(index) <= 57) || (str.charAt(index) == 61) || (str.charAt(index) == 63) ||
          (str.charAt(index) >= 94 && str.charAt(index) <= 126) || (str.charAt(index) >= 128 &&
          str.charAt(index) <= 55295) ||
          (str.charAt(index) >= 57344 && str.charAt(index) <= 65535))) {
          ++indexTemp2;
        } else if (endIndex - index > 1 && ((str.charAt(index) >= 55296 &&
          str.charAt(index) <=
          56319) && (str.charAt(index + 1) >= 56320 && str.charAt(index + 1) <= 57343))) {
          indexTemp2 += 2;
        }
        if (indexTemp2 != index) {
          index = indexTemp2;
        } else {
          if (i < 1) {
            index = indexStart;
          }
          break;
        }
      }
      if (index == indexStart) {
      { if (tokener != null) {
            tokener.RestoreState (state);
          }
          return indexStart;
        }
      }
      if (tokener != null) {
        if (index == indexStart) {
          tokener.RestoreState (state);
        } else {
          tokener.Commit (3, indexStart, index);
        }
      }
      return index;
    }
    public static int ParsePhraseWord(String str, int index, int endIndex,
      ITokener tokener) {
      int indexStart, indexStart2, indexTemp2, state, state2, tx3;
      indexStart = index;
      state = (tokener != null) ? tokener.GetState() : 0;
      do {
        state2 = (tokener != null) ? tokener.GetState() : 0;
        indexTemp2 = index;
        do {
          indexStart2 = index;
          index = ParseCFWS (str, index, endIndex, tokener);
          tx3 = ParsePhraseAtom (str, index, endIndex, tokener);
          if (tx3 == index) {
            index = indexStart2;
            break;
          }
          index = tx3;
          index = ParseCFWS (str, index, endIndex, tokener);
          indexTemp2 = index;
          index = indexStart2;
        } while (false);
        if (indexTemp2 != index) {
          index = indexTemp2;
          break;
        }
        if (tokener != null) {
          tokener.RestoreState (state2);
        }
        indexTemp2 = ParseQuotedString (str, index, endIndex, tokener);
        if (indexTemp2 != index) {
          index = indexTemp2;
          break;
        }
      } while (false);
      if (tokener != null && index == indexStart) {
        tokener.RestoreState (state);
      }
      return index;
    }

    public static int ParsePrintablestring(String str, int index, int
      endIndex,
      ITokener tokener) {
      while (index < endIndex && ((str.charAt(index) >= 65 && str.charAt(index) <= 90) ||
        (str.charAt(index) >= 97 && str.charAt(index) <= 122) || (str.charAt(index) == 32) ||
        (str.charAt(index)
          >= 39 && str.charAt(index) <= 41) || (str.charAt(index) >= 43 && str.charAt(index) <=
          58) || (str.charAt(index) == 61) || (str.charAt(index) == 63))) {
        ++index;
      }
      return index;
    }
    public static int ParseQcontent(String str, int index, int endIndex,
      ITokener tokener) {
      int indexStart, indexTemp2, state;
      indexStart = index;
      state = (tokener != null) ? tokener.GetState() : 0;
      do {
        if (index < endIndex && ((str.charAt(index) == 33) || (str.charAt(index) >= 35 &&
          str.charAt(index) <= 91) || (str.charAt(index) >= 93 && str.charAt(index) <= 126))) {
          ++index;
          break;
        }
        indexTemp2 = ParseObsNOWSCTL (str, index, endIndex, tokener);
        if (indexTemp2 != index) {
          index = indexTemp2;
          break;
        }
        if (index < endIndex && ((str.charAt(index) >= 128 && str.charAt(index) <= 55295) ||
          (str.charAt(index) >= 57344 && str.charAt(index) <= 65535))) {
          ++index;
          break;
        }
        if (endIndex - index > 1 && ((str.charAt(index) >= 55296 && str.charAt(index) <=
          56319) && (str.charAt(index + 1) >= 56320 && str.charAt(index + 1) <= 57343))) {
          index += 2;
          break;
        }
        indexTemp2 = ParseQuotedPair (str, index, endIndex, tokener);
        if (indexTemp2 != index) {
          index = indexTemp2;
          break;
        }
      } while (false);
      if (tokener != null && index == indexStart) {
        tokener.RestoreState (state);
      }
      return index;
    }

    public static int ParseQuotedPair(String str, int index, int
      endIndex,
      ITokener tokener) {
      int indexStart, indexTemp2;
      indexStart = index;
      if (index < endIndex && (str.charAt(index) == 92)) {
        ++index;
      } else {
        {
          return indexStart;
        }
      }
      indexTemp2 = index;
      if (index < endIndex && (str.charAt(index) >= 57344 && str.charAt(index) <= 65535)) {
        ++indexTemp2;
      } else if (endIndex - index > 1 && ((str.charAt(index) >= 55296 && str.charAt(index) <=
        56319) && (str.charAt(index + 1) >= 56320 && str.charAt(index + 1) <= 57343))) {
        indexTemp2 += 2;
      } else if (index < endIndex && (str.charAt(index) >= 0 && str.charAt(index) <= 55295)) {
        ++indexTemp2;
      }
      if (indexTemp2 != index) {
        index = indexTemp2;
      } else {
        return indexStart;
      }
      return index;
    }
    public static int ParseQuotedString(String str, int index, int endIndex,
      ITokener tokener) {
      int indexStart, indexStart2, indexTemp2, state, state2, tx3;
      indexStart = index;
      state = (tokener != null) ? tokener.GetState() : 0;
      do {
        index = ParseCFWS (str, index, endIndex, tokener);
        if (index < endIndex && (str.charAt(index) == 34)) {
          ++index;
        } else {
          index = indexStart;
          break;
        }
        while (true) {
          state2 = (tokener != null) ? tokener.GetState() : 0;
          indexTemp2 = index;
          do {
            indexStart2 = index;
            index = ParseFWS (str, index, endIndex, tokener);
            tx3 = ParseQcontent (str, index, endIndex, tokener);
            if (tx3 == index) {
              index = indexStart2;
              break;
            }
            index = tx3;
            indexTemp2 = index;
            index = indexStart2;
          } while (false);
          if (indexTemp2 != index) {
            index = indexTemp2;
          } else {
            if (tokener != null) {
              tokener.RestoreState (state2);
            }
            break;
          }
        }
        index = ParseFWS (str, index, endIndex, tokener);
        if (index < endIndex && (str.charAt(index) == 34)) {
          ++index;
        } else {
          index = indexStart;
          break;
        }
        index = ParseCFWS (str, index, endIndex, tokener);
      } while (false);
      if (tokener != null) {
        if (index == indexStart) {
          tokener.RestoreState (state);
        } else {
          tokener.Commit (6, indexStart, index);
        }
      }
      return index;
    }

    public static int ParseQvalue(String str, int index, int
      endIndex, ITokener tokener) {
      int i3, indexStart2, indexStart3, indexTemp2, indexTemp3;
      do {
        indexTemp2 = index;
        do {
          indexStart2 = index;
          if (index < endIndex && (str.charAt(index) == 48)) {
            ++index;
          } else {
            break;
          }
          do {
            indexTemp3 = index;
            do {
              indexStart3 = index;
              if (index < endIndex && (str.charAt(index) == 46)) {
                ++index;
              } else {
                break;
              }
              for (i3 = 0; i3 < 3; ++i3) {
                if (index < endIndex && (str.charAt(index) >= 48 && str.charAt(index) <=
                  57)) {
                  ++index;
                } else {
                  break;
                }
              }
              indexTemp3 = index;
              index = indexStart3;
            } while (false);
            if (indexTemp3 != index) {
              index = indexTemp3;
            } else {
              break;
            }
          } while (false);
          indexTemp2 = index;
          index = indexStart2;
        } while (false);
        if (indexTemp2 != index) {
          index = indexTemp2;
          break;
        }
        indexTemp2 = index;
        do {
          indexStart2 = index;
          if (index < endIndex && (str.charAt(index) == 49)) {
            ++index;
          } else {
            break;
          }
          do {
            indexTemp3 = index;
            do {
              indexStart3 = index;
              if (index < endIndex && (str.charAt(index) == 46)) {
                ++index;
              } else {
                break;
              }
              for (i3 = 0; i3 < 3; ++i3) {
                if (index < endIndex && (str.charAt(index) == 48)) {
                  ++index;
                } else {
                  break;
                }
              }
              indexTemp3 = index;
              index = indexStart3;
            } while (false);
            if (indexTemp3 != index) {
              index = indexTemp3;
            } else {
              break;
            }
          } while (false);
          indexTemp2 = index;
          index = indexStart2;
        } while (false);
        if (indexTemp2 != index) {
          index = indexTemp2;
          break;
        }
      } while (false);
      return index;
    }
    public static int ParseReceivedToken(String str, int index, int endIndex,
      ITokener tokener) {
      int indexStart, indexTemp2, state;
      indexStart = index;
      state = (tokener != null) ? tokener.GetState() : 0;
      do {
        indexTemp2 = ParseAngleAddr (str, index, endIndex, tokener);
        if (indexTemp2 != index) {
          index = indexTemp2;
          break;
        }
        indexTemp2 = ParseAddrSpec (str, index, endIndex, tokener);
        if (indexTemp2 != index) {
          index = indexTemp2;
          break;
        }
        indexTemp2 = ParseDomain (str, index, endIndex, tokener);
        if (indexTemp2 != index) {
          index = indexTemp2;
          break;
        }
        indexTemp2 = ParseAtom (str, index, endIndex, tokener);
        if (indexTemp2 != index) {
          index = indexTemp2;
          break;
        }
        indexTemp2 = ParseQuotedString (str, index, endIndex, tokener);
        if (indexTemp2 != index) {
          index = indexTemp2;
          break;
        }
      } while (false);
      if (tokener != null && index == indexStart) {
        tokener.RestoreState (state);
      }
      return index;
    }

    public static int ParseRegName(String str, int index, int endIndex,
      ITokener tokener) {
      int indexTemp2;
      while (true) {
        indexTemp2 = index;
        if (index < endIndex && ((str.charAt(index) >= 65 && str.charAt(index) <= 90) ||
          (str.charAt(index) >= 97 && str.charAt(index) <= 122) || (str.charAt(index) >= 48 &&
          str.charAt(index) <= 57) || (str.charAt(index) >= 45 && str.charAt(index) <= 46) ||
          (str.charAt(index) == 95) || (str.charAt(index) == 126))) {
          ++indexTemp2;
        } else if (endIndex - index > 2 && (((str.charAt(index) == 37) &&
          (((str.charAt(index + 1)
          >= 48 && str.charAt(index + 1) <= 57) || (str.charAt(index + 1) >= 65 &&
            str.charAt(index + 1) <=
            70) || (str.charAt(index + 1) >= 97 && str.charAt(index + 1) <= 102))&&
          ((str.charAt(index + 2)
          >= 48 && str.charAt(index + 2) <= 57) || (str.charAt(index + 2) >= 65 &&
            str.charAt(index + 2) <= 70) || (str.charAt(index + 2) >= 97 && str.charAt(index + 2) <=
            102)))))) {
          indexTemp2 += 3;
        } else if (index < endIndex && ((str.charAt(index) == 33) || (str.charAt(index) ==
          36) || (str.charAt(index) >= 38 && str.charAt(index) <= 44) || (str.charAt(index) == 59) ||
          (str.charAt(index) == 61))) {
          ++indexTemp2;
        }
        if (indexTemp2 != index) {
          index = indexTemp2;
        } else {
          break;
        }
      }
      return index;
    }

    public static int ParseResid(String str, int index, int endIndex,
      ITokener tokener) {
      int indexTemp2;
      while (true) {
        indexTemp2 = index;
        if (index < endIndex && ((str.charAt(index) >= 65 && str.charAt(index) <= 90) ||
          (str.charAt(index) >= 97 && str.charAt(index) <= 122) || (str.charAt(index) >= 48 &&
          str.charAt(index) <= 57) || (str.charAt(index) >= 45 && str.charAt(index) <= 46) ||
          (str.charAt(index) == 95) || (str.charAt(index) == 126))) {
          ++indexTemp2;
        } else if (index < endIndex && ((str.charAt(index) == 33) || (str.charAt(index) ==
          36) || (str.charAt(index) >= 38 && str.charAt(index) <= 44) || (str.charAt(index) >= 58 &&
            str.charAt(index) <= 59) || (str.charAt(index) == 61))) {
          ++indexTemp2;
        } else if (endIndex - index > 2 && (((str.charAt(index) == 37) &&
          (((str.charAt(index + 1)
          >= 48 && str.charAt(index + 1) <= 57) || (str.charAt(index + 1) >= 65 &&
            str.charAt(index + 1) <=
            70) || (str.charAt(index + 1) >= 97 && str.charAt(index + 1) <= 102))&&
          ((str.charAt(index + 2)
          >= 48 && str.charAt(index + 2) <= 57) || (str.charAt(index + 2) >= 65 &&
            str.charAt(index + 2) <= 70) || (str.charAt(index + 2) >= 97 && str.charAt(index + 2) <=
            102)))))) {
          indexTemp2 += 3;
        }
        if (indexTemp2 != index) {
          index = indexTemp2;
        } else {
          break;
        }
      }
      return index;
    }
    public static int ParseResinfo(String str, int index, int endIndex,
      ITokener tokener) {
      int i, i4, indexStart, indexStart2, indexStart4, indexStart5, indexTemp2,
          indexTemp3, indexTemp4, indexTemp5, state, state2, state4, tx2,
          tx3, tx5;
      indexStart = index;
      state = (tokener != null) ? tokener.GetState() : 0;
      do {
        index = ParseCFWS (str, index, endIndex, tokener);
        if (index < endIndex && (str.charAt(index) == 59)) {
          ++index;
        } else {
          index = indexStart;
          break;
        }
        index = ParseCFWS (str, index, endIndex, tokener);
        for (i = 0; true; ++i) {
          indexTemp2 = ParseLdhStr (str, index, endIndex, tokener);
          if (indexTemp2 != index) {
            index = indexTemp2;
          } else {
            if (i < 1) {
              index = indexStart;
            }
            break;
          }
        }
        if (index == indexStart) {
          break;
        }
        do {
          indexTemp2 = index;
          do {
            indexStart2 = index;
            index = ParseCFWS (str, index, endIndex, tokener);
            if (index < endIndex && (str.charAt(index) == 47)) {
              ++index;
            } else {
              index = indexStart2;
              break;
            }
            index = ParseCFWS (str, index, endIndex, tokener);
            if (index < endIndex && (str.charAt(index) >= 48 && str.charAt(index) <= 57)) {
              ++index;
              while (index < endIndex && (str.charAt(index) >= 48 && str.charAt(index) <=
                57)) {
                ++index;
              }
            } else {
              index = indexStart2;
              break;
            }
            index = ParseCFWS (str, index, endIndex, tokener);
            indexTemp2 = index;
            index = indexStart2;
          } while (false);
          if (indexTemp2 != index) {
            index = indexTemp2;
          } else {
            break;
          }
        } while (false);
        index = ParseCFWS (str, index, endIndex, tokener);
        if (index < endIndex && (str.charAt(index) == 61)) {
          ++index;
        } else {
          index = indexStart;
          break;
        }
        index = ParseCFWS (str, index, endIndex, tokener);
        tx2 = ParseSmtpKeyword (str, index, endIndex, tokener);
        if (tx2 == index) {
          index = indexStart;
          break;
        }
        index = tx2;
        do {
          indexTemp2 = index;
          do {
            indexStart2 = index;
            tx3 = ParseCFWS (str, index, endIndex, tokener);
            if (tx3 == index) {
              break;
            }
            index = tx3;
            if (endIndex - index > 5 && (str.charAt(index) & ~32) == 82 &&
              (str.charAt(index + 1) & ~32) == 69 && (str.charAt(index + 2) & ~32) == 65 &&
              (str.charAt(index + 3) & ~32) == 83 &&
              (str.charAt(index + 4) & ~32) == 79 && (str.charAt(index + 5) & ~32) == 78) {
              index += 6;
            } else {
              index = indexStart2;
              break;
            }
            index = ParseCFWS (str, index, endIndex, tokener);
            if (index < endIndex && (str.charAt(index) == 61)) {
              ++index;
            } else {
              index = indexStart2;
              break;
            }
            index = ParseCFWS (str, index, endIndex, tokener);
            tx3 = ParseValue (str, index, endIndex, tokener);
            if (tx3 == index) {
              index = indexStart2;
              break;
            }
            index = tx3;
            indexTemp2 = index;
            index = indexStart2;
          } while (false);
          if (indexTemp2 != index) {
            index = indexTemp2;
          } else {
            break;
          }
        } while (false);
        while (true) {
          state2 = (tokener != null) ? tokener.GetState() : 0;
          indexTemp2 = index;
          do {
            indexStart2 = index;
            tx3 = ParseCFWS (str, index, endIndex, tokener);
            if (tx3 == index) {
              break;
            }
            index = tx3;
            tx3 = ParseSmtpKeyword (str, index, endIndex, tokener);
            if (tx3 == index) {
              index = indexStart2;
              break;
            }
            index = tx3;
            index = ParseCFWS (str, index, endIndex, tokener);
            if (index < endIndex && (str.charAt(index) == 46)) {
              ++index;
            } else {
              index = indexStart2;
              break;
            }
            index = ParseCFWS (str, index, endIndex, tokener);
            tx3 = ParseSmtpKeyword (str, index, endIndex, tokener);
            if (tx3 == index) {
              index = indexStart2;
              break;
            }
            index = tx3;
            index = ParseCFWS (str, index, endIndex, tokener);
            if (index < endIndex && (str.charAt(index) == 61)) {
              ++index;
            } else {
              index = indexStart2;
              break;
            }
            index = ParseCFWS (str, index, endIndex, tokener);
            do {
              indexTemp3 = index;
              do {
                state4 = (tokener != null) ? tokener.GetState() : 0;
                indexTemp4 = index;
                do {
                  indexStart4 = index;
                  tx5 = ParseLocalPart (str, index, endIndex, tokener);
                  if (tx5 == index) {
                    break;
                  }
                  index = tx5;
                  if (endIndex - index > 1 && (str.charAt(index) == 64) &&
                    ((str.charAt(index + 1) >= 65 &&
                    str.charAt(index + 1) <= 90) || (str.charAt(index + 1) >= 97 &&
                      str.charAt(index + 1) <= 122) ||
                    (str.charAt(index + 1) >= 48 && str.charAt(index + 1) <= 57))) {
                    index += 2;
                  } else {
                    index = indexStart4;
                    break;
                  }
                  index = ParseLdhStr (str, index, endIndex, tokener);
                  for (i4 = 0; true; ++i4) {
                    indexTemp5 = index;
                    do {
                      indexStart5 = index;
                      if (endIndex - index > 1 && (str.charAt(index) == 46) &&
                        ((str.charAt(index + 1) >= 65 &&
                        str.charAt(index + 1) <= 90) || (str.charAt(index + 1) >= 97 &&
                          str.charAt(index + 1) <= 122) ||
                        (str.charAt(index + 1) >= 48 && str.charAt(index + 1) <= 57))) {
                        index += 2;
                      } else {
                        break;
                      }
                      index = ParseLdhStr (str, index, endIndex, tokener);
                      indexTemp5 = index;
                      index = indexStart5;
                    } while (false);
                    if (indexTemp5 != index) {
                      index = indexTemp5;
                    } else {
                      if (i4 < 1) {
                        index = indexStart4;
                      }
                      break;
                    }
                  }
                  if (index == indexStart4) {
                    break;
                  }
                  indexTemp4 = index;
                  index = indexStart4;
                } while (false);
                if (indexTemp4 != index) {
                  indexTemp3 = indexTemp4;
                  break;
                }
                if (tokener != null) {
                  tokener.RestoreState (state4);
                }
                state4 = (tokener != null) ? tokener.GetState() : 0;
                indexTemp4 = index;
                do {
                  indexStart4 = index;
                  if (endIndex - index > 1 && (str.charAt(index) == 64) &&
                    ((str.charAt(index + 1) >= 65 &&
                    str.charAt(index + 1) <= 90) || (str.charAt(index + 1) >= 97 &&
                      str.charAt(index + 1) <= 122) ||
                    (str.charAt(index + 1) >= 48 && str.charAt(index + 1) <= 57))) {
                    index += 2;
                  } else {
                    break;
                  }
                  index = ParseLdhStr (str, index, endIndex, tokener);
                  for (i4 = 0; true; ++i4) {
                    indexTemp5 = index;
                    do {
                      indexStart5 = index;
                      if (endIndex - index > 1 && (str.charAt(index) == 46) &&
                        ((str.charAt(index + 1) >= 65 &&
                        str.charAt(index + 1) <= 90) || (str.charAt(index + 1) >= 97 &&
                          str.charAt(index + 1) <= 122) ||
                        (str.charAt(index + 1) >= 48 && str.charAt(index + 1) <= 57))) {
                        index += 2;
                      } else {
                        break;
                      }
                      index = ParseLdhStr (str, index, endIndex, tokener);
                      indexTemp5 = index;
                      index = indexStart5;
                    } while (false);
                    if (indexTemp5 != index) {
                      index = indexTemp5;
                    } else {
                      if (i4 < 1) {
                        index = indexStart4;
                      }
                      break;
                    }
                  }
                  if (index == indexStart4) {
                    break;
                  }
                  indexTemp4 = index;
                  index = indexStart4;
                } while (false);
                if (indexTemp4 != index) {
                  indexTemp3 = indexTemp4;
                  break;
                }
                if (tokener != null) {
                  tokener.RestoreState (state4);
                }
                indexTemp4 = ParseDomainName (str, index, endIndex, tokener);
                if (indexTemp4 != index) {
                  indexTemp3 = indexTemp4;
                  break;
                }
                if (index < endIndex && ((str.charAt(index) == 33) || (str.charAt(index)
                  >= 35 && str.charAt(index) <= 36) || (str.charAt(index) >= 45 && str.charAt(index)
                    <= 46) || (str.charAt(index)
                    >= 48 && str.charAt(index) <= 57) || (str.charAt(index) >= 65 &&
                    str.charAt(index) <= 90) ||
                  (str.charAt(index) >= 94 && str.charAt(index) <= 126) || (str.charAt(index)
                  >= 42 && str.charAt(index)
                  <= 43) || (str.charAt(index) >= 38 && str.charAt(index) <= 39) ||
                  (str.charAt(index) == 63))) {
                  ++indexTemp3;
                  while (indexTemp3 < endIndex && ((str.charAt(indexTemp3) == 33) ||
                    (str.charAt(indexTemp3) >= 35 && str.charAt(indexTemp3) <= 36) ||
                    (str.charAt(indexTemp3) >= 45 &&
                      str.charAt(indexTemp3) <= 46) || (str.charAt(indexTemp3) >= 48 &&
                      str.charAt(indexTemp3) <=
                      57) || (str.charAt(indexTemp3) >= 65 && str.charAt(indexTemp3) <=
                      90) || (str.charAt(indexTemp3)
                      >= 94 && str.charAt(indexTemp3) <= 126) || (str.charAt(indexTemp3)
                      >= 42 && str.charAt(indexTemp3) <= 43) || (str.charAt(indexTemp3) >=
                      38 && str.charAt(indexTemp3) <= 39) || (str.charAt(indexTemp3) ==
                      63))) {
                    ++indexTemp3;
                  }
                  break;
                }
                indexTemp4 = ParseQuotedString (str, index, endIndex, tokener);
                if (indexTemp4 != index) {
                  indexTemp3 = indexTemp4;
                  break;
                }
              } while (false);
              if (indexTemp3 != index) {
                index = indexTemp3;
              } else {
                index = indexStart2;
                break;
              }
            } while (false);
            if (index == indexStart2) {
              break;
            }
            indexTemp2 = index;
            index = indexStart2;
          } while (false);
          if (indexTemp2 != index) {
            index = indexTemp2;
          } else {
            if (tokener != null) {
              tokener.RestoreState (state2);
            }
            break;
          }
        }
        index = ParseCFWS (str, index, endIndex, tokener);
      } while (false);
      if (tokener != null && index == indexStart) {
        tokener.RestoreState (state);
      }
      return index;
    }
    public static int ParseSmtpKeyword(String str, int index, int endIndex,
      ITokener tokener) {
      return ParseLdhStr (str, index, endIndex, tokener);
    }
    public static int ParseStrictHeaderTo(String str, int index, int endIndex,
      ITokener tokener) {
      return ParseAddressList (str, index, endIndex, tokener);
    }

    public static int ParseTextExceptOpeningParen(String str, int
      index, int endIndex, ITokener tokener) {
      if (index < endIndex && ((str.charAt(index) >= 1 && str.charAt(index) <= 9) ||
        (str.charAt(index)
          >= 11 && str.charAt(index) <= 12) || (str.charAt(index) >= 14 && str.charAt(index) <=
          39) ||
        (str.charAt(index) >= 41 && str.charAt(index) <= 55295) || (str.charAt(index) >= 57344 &&
        str.charAt(index) <= 65535))) {
        ++index;
      } else if (endIndex - index > 1 && ((str.charAt(index) >= 55296 && str.charAt(index) <=
        56319) && (str.charAt(index + 1) >= 56320 && str.charAt(index + 1) <= 57343))) {
        index += 2;
      }
      return index;
    }

    public static int ParseTypeString(String str, int index, int
      endIndex,
      ITokener tokener) {
      if (endIndex - index > 2 && (str.charAt(index) & ~32) == 65 &&
        (str.charAt(index + 1) & ~32) == 76 && (str.charAt(index + 2) & ~32) == 76) {
        index += 3;
      } else if (endIndex - index > 3 && (str.charAt(index) & ~32) == 76 &&
        (str.charAt(index +
            1) & ~32) == 73 && (str.charAt(index + 2) & ~32) == 83 && (str.charAt(index +
            3) & ~32) == 84) {
        index += 4;
      } else if (endIndex - index > 10 && (str.charAt(index) & ~32) == 84 &&
        (str.charAt(index +
            1) & ~32) == 82 && (str.charAt(index + 2) & ~32) == 65 && (str.charAt(index +
            3) & ~32) ==
        78 && (str.charAt(index + 4) & ~32) == 83 && (str.charAt(index + 5) & ~32) == 65 &&
        (str.charAt(index + 6) & ~32) == 67 && (str.charAt(index + 7) & ~32) == 84 &&
        (str.charAt(index +
            8) & ~32) == 73 && (str.charAt(index + 9) & ~32) == 79 && (str.charAt(index +
            10) & ~32) == 78) {
        index += 11;
      }
      return index;
    }
    public static int ParseValue(String str, int index, int endIndex, ITokener
      tokener) {
      int indexStart, indexTemp2, state;
      indexStart = index;
      state = (tokener != null) ? tokener.GetState() : 0;
      do {
        if (index < endIndex && ((str.charAt(index) == 33) || (str.charAt(index) >= 35 &&
          str.charAt(index) <= 36) || (str.charAt(index) >= 45 && str.charAt(index) <= 46) ||
          (str.charAt(index)
            >= 48 && str.charAt(index) <= 57) || (str.charAt(index) >= 65 && str.charAt(index)
            <= 90) ||
          (str.charAt(index) >= 94 && str.charAt(index) <= 126) || (str.charAt(index) >= 42 &&
          str.charAt(index) <= 43) || (str.charAt(index) >= 38 && str.charAt(index) <= 39) ||
          (str.charAt(index) == 63))) {
          ++index;
          while (index < endIndex && ((str.charAt(index) == 33) || (str.charAt(index) >= 35 &&
            str.charAt(index) <= 36) || (str.charAt(index) >= 45 && str.charAt(index) <= 46) ||
            (str.charAt(index) >= 48 && str.charAt(index) <= 57) || (str.charAt(index) >= 65 &&
            str.charAt(index) <= 90) ||
            (str.charAt(index) >= 94 && str.charAt(index) <= 126) || (str.charAt(index) >= 42 &&
            str.charAt(index) <= 43) || (str.charAt(index) >= 38 && str.charAt(index) <= 39) ||
            (str.charAt(index) == 63))) {
            ++index;
          }
          break;
        }
        indexTemp2 = ParseQuotedString (str, index, endIndex, tokener);
        if (indexTemp2 != index) {
          index = indexTemp2;
          break;
        }
      } while (false);
      if (tokener != null && index == indexStart) {
        tokener.RestoreState (state);
      }
      return index;
    }
    public static int ParseWord(String str, int index, int endIndex, ITokener
      tokener) {
      int indexStart, indexTemp2, state;
      indexStart = index;
      state = (tokener != null) ? tokener.GetState() : 0;
      do {
        indexTemp2 = ParseAtom (str, index, endIndex, tokener);
        if (indexTemp2 != index) {
          index = indexTemp2;
          break;
        }
        indexTemp2 = ParseQuotedString (str, index, endIndex, tokener);
        if (indexTemp2 != index) {
          index = indexTemp2;
          break;
        }
      } while (false);
      if (tokener != null && index == indexStart) {
        tokener.RestoreState (state);
      }
      return index;
    }
    public static int ParseZone(String str, int index, int endIndex, ITokener
      tokener) {
      int i2, indexStart, indexStart2, indexTemp2, indexTemp3, state, state2;
      indexStart = index;
      state = (tokener != null) ? tokener.GetState() : 0;
      do {
        state2 = (tokener != null) ? tokener.GetState() : 0;
        indexTemp2 = index;
        do {
          indexStart2 = index;
          for (i2 = 0; true; ++i2) {
            indexTemp3 = ParseFWS (str, index, endIndex, tokener);
            if (indexTemp3 != index) {
              index = indexTemp3;
            } else {
              if (i2 < 1) {
                index = indexStart2;
              }
              break;
            }
          }
          if (index == indexStart2) {
            break;
          }
          if (index < endIndex && ((str.charAt(index) == 43) || (str.charAt(index) == 45))) {
            ++index;
          } else {
            index = indexStart2;
            break;
          }
          if (endIndex - index > 3 && ((str.charAt(index) >= 48 && str.charAt(index) <= 57) &&
            (str.charAt(index + 1) >= 48 && str.charAt(index + 1) <= 57) && (str.charAt(index +
            2) >= 48 &&
            str.charAt(index + 2) <= 57) && (str.charAt(index + 3) >= 48 && str.charAt(index+
                3) <= 57))) {
            index += 4;
          } else {
            index = indexStart2;
            break;
          }
          indexTemp2 = index;
          index = indexStart2;
        } while (false);
        if (indexTemp2 != index) {
          index = indexTemp2;
          break;
        }
        if (tokener != null) {
          tokener.RestoreState (state2);
        }
        state2 = (tokener != null) ? tokener.GetState() : 0;
        indexTemp2 = index;
        do {
          indexStart2 = index;
          index = ParseCFWS (str, index, endIndex, tokener);
          do {
            indexTemp3 = index;
            if (endIndex - index > 1 && (str.charAt(index) & ~32) == 85 &&
              (str.charAt(index + 1) & ~32) == 84) {
              indexTemp3 += 2;
            } else if (endIndex - index > 2 && (str.charAt(index) & ~32) == 71 &&
              (str.charAt(index + 1) & ~32) == 77 && (str.charAt(index + 2) & ~32) == 84) {
              indexTemp3 += 3;
            } else if (endIndex - index > 2 && (str.charAt(index) & ~32) == 69 &&
              (str.charAt(index + 1) & ~32) == 83 && (str.charAt(index + 2) & ~32) == 84) {
              indexTemp3 += 3;
            } else if (endIndex - index > 2 && (str.charAt(index) & ~32) == 69 &&
              (str.charAt(index + 1) & ~32) == 68 && (str.charAt(index + 2) & ~32) == 84) {
              indexTemp3 += 3;
            } else if (endIndex - index > 2 && (str.charAt(index) & ~32) == 67 &&
              (str.charAt(index + 1) & ~32) == 83 && (str.charAt(index + 2) & ~32) == 84) {
              indexTemp3 += 3;
            } else if (endIndex - index > 2 && (str.charAt(index) & ~32) == 67 &&
              (str.charAt(index + 1) & ~32) == 68 && (str.charAt(index + 2) & ~32) == 84) {
              indexTemp3 += 3;
            } else if (endIndex - index > 2 && (str.charAt(index) & ~32) == 77 &&
              (str.charAt(index + 1) & ~32) == 83 && (str.charAt(index + 2) & ~32) == 84) {
              indexTemp3 += 3;
            } else if (endIndex - index > 2 && (str.charAt(index) & ~32) == 77 &&
              (str.charAt(index + 1) & ~32) == 68 && (str.charAt(index + 2) & ~32) == 84) {
              indexTemp3 += 3;
            } else if (endIndex - index > 2 && (str.charAt(index) & ~32) == 80 &&
              (str.charAt(index + 1) & ~32) == 83 && (str.charAt(index + 2) & ~32) == 84) {
              indexTemp3 += 3;
            } else if (endIndex - index > 2 && (str.charAt(index) & ~32) == 80 &&
              (str.charAt(index + 1) & ~32) == 68 && (str.charAt(index + 2) & ~32) == 84) {
              indexTemp3 += 3;
            } else if (index < endIndex && ((str.charAt(index) >= 65 && str.charAt(index)
              <= 73) ||
              (str.charAt(index) >= 75 && str.charAt(index) <= 90) || (str.charAt(index) >= 97 &&
              str.charAt(index) <= 105) || (str.charAt(index) >= 107 && str.charAt(index) <= 122))) {
              ++indexTemp3;
            }
            if (indexTemp3 != index) {
              index = indexTemp3;
            } else {
              index = indexStart2;
              break;
            }
          } while (false);
          if (index == indexStart2) {
            break;
          }
          index = ParseCFWS (str, index, endIndex, tokener);
          indexTemp2 = index;
          index = indexStart2;
        } while (false);
        if (indexTemp2 != index) {
          index = indexTemp2;
          break;
        }
        if (tokener != null) {
          tokener.RestoreState (state2);
        }
      } while (false);
      if (tokener != null && index == indexStart) {
        tokener.RestoreState (state);
      }
      return index;
    }
  }
