package com.upokecenter.mail;
//------
// <auto-generated>
// </auto-generated>
//------

  final class HeaderParser2 {
private HeaderParser2() {
}
    public static int ParseAddrSpec(String str, int index, int endIndex) {
      int indexStart, indexStart3, indexTemp2, indexTemp3, tx2;
      indexStart = index;
      tx2 = ParseLocalPart (str, index, endIndex);
      if (tx2 == index) {
        return indexStart;
      }
      index = tx2;
      if (index < endIndex && (str.charAt(index) == 64)) {
        ++index;
      } else {
        return indexStart;
      }
      indexTemp2 = index;
      do {
        indexTemp3 = ParseDotAtomText (str, index, endIndex);
        if (indexTemp3 != index) {
          indexTemp2 = indexTemp3;
          break;
        }
        indexTemp3 = index;
        do {
          indexStart3 = index;
          if (index + 1 < endIndex && (str.charAt(index) == 91) && ((str.charAt(index + 1)
            >= 33 && str.charAt(index + 1) <= 90) || (str.charAt(index + 1) >= 94 &&
              str.charAt(index + 1) <= 126))) {
            index += 2;
          } else {
            break;
          }
          if (index < endIndex && (str.charAt(index) == 93)) {
            ++index;
          } else {
            index = indexStart3;
            break;
          }
          indexTemp3 = index;
          index = indexStart3;
        } while (false);
        if (indexTemp3 != index) {
          indexTemp2 = indexTemp3;
          break;
        }
      } while (false);
      if (indexTemp2 != index) {
        index = indexTemp2;
      } else {
        return indexStart;
      }
      return index;
    }
    public static int ParseDotAtomText(String str, int index, int endIndex) {
      int indexStart, indexStart2, indexTemp2;
      indexStart = index;
      if (index < endIndex && ((str.charAt(index) >= 65 && str.charAt(index) <= 90) ||
        (str.charAt(index) == 33) || (str.charAt(index) >= 35 && str.charAt(index) <= 39) ||
        (str.charAt(index) >= 42 && str.charAt(index) <= 43) || (str.charAt(index) == 45) ||
        (str.charAt(index) >= 47 && str.charAt(index) <= 57) || (str.charAt(index) == 61) ||
        (str.charAt(index) == 63) || (str.charAt(index) >= 94 && str.charAt(index) <= 126) ||
        (str.charAt(index) >= 128 && str.charAt(index) <= 65535))) {
        ++index;
        while (index < endIndex && ((str.charAt(index) >= 65 && str.charAt(index) <= 90) ||
          (str.charAt(index) == 33) || (str.charAt(index) >= 35 && str.charAt(index) <= 39) ||
          (str.charAt(index) >= 42 && str.charAt(index) <= 43) || (str.charAt(index) == 45) ||
          (str.charAt(index) >= 47 && str.charAt(index) <= 57) || (str.charAt(index) == 61) ||
          (str.charAt(index) == 63) || (str.charAt(index) >= 94 && str.charAt(index) <= 126) ||
          (str.charAt(index) >= 128 && str.charAt(index) <= 65535))) {
          ++index;
        }
      } else {
        return indexStart;
      }
      while (true) {
        indexTemp2 = index;
        do {
          indexStart2 = index;
          if (index < endIndex && (str.charAt(index) == 46)) {
            ++index;
          } else {
            break;
          }
          if (index < endIndex && ((str.charAt(index) >= 65 && str.charAt(index) <= 90) ||
            (str.charAt(index) == 33) || (str.charAt(index) >= 35 && str.charAt(index) <= 39) ||
            (str.charAt(index) >= 42 && str.charAt(index) <= 43) || (str.charAt(index) == 45) ||
            (str.charAt(index) >= 47 && str.charAt(index) <= 57) || (str.charAt(index) == 61) ||
            (str.charAt(index) == 63) || (str.charAt(index) >= 94 && str.charAt(index) <= 126) ||
            (str.charAt(index) >= 128 && str.charAt(index) <= 65535))) {
            ++index;
            while (index < endIndex && ((str.charAt(index) >= 65 && str.charAt(index) <=
              90) || (str.charAt(index) == 33) || (str.charAt(index) >= 35 && str.charAt(index)
                <= 39) || (str.charAt(index) >= 42 && str.charAt(index) <= 43) ||
              (str.charAt(index) == 45) || (str.charAt(index) >= 47 && str.charAt(index) <= 57) ||
              (str.charAt(index) == 61) || (str.charAt(index) == 63) || (str.charAt(index) >=
              94 && str.charAt(index) <= 126) || (str.charAt(index) >= 128 && str.charAt(index)
                <= 65535))) {
              ++index;
            }
          } else {
            index = indexStart2;
            break;
          }
          indexTemp2 = index;
          index = indexStart2;
        } while (false);
        if (indexTemp2 != index) {
          index = indexTemp2;
        } else {
          break;
        }
      }
      return index;
    }
    public static int ParseHeaderEmail(String str, int index, int endIndex) {
      int indexStart, indexStart2, indexTemp2, tx2, tx3;
      indexStart = index;
      tx2 = ParseAddrSpec (str, index, endIndex);
      if (tx2 == index) {
        return indexStart;
      }
      index = tx2;
      while (true) {
        indexTemp2 = index;
        do {
          indexStart2 = index;
          if (index < endIndex && (str.charAt(index) == 44)) {
            ++index;
          } else {
            break;
          }
          tx3 = ParseAddrSpec (str, index, endIndex);
          if (tx3 == index) {
            index = indexStart2;
            break;
          }
          index = tx3;
          indexTemp2 = index;
          index = indexStart2;
        } while (false);
        if (indexTemp2 != index) {
          index = indexTemp2;
        } else {
          break;
        }
      }
      return index;
    }
    public static int ParseLocalPart(String str, int index, int endIndex) {
      int indexTemp2 = ParseDotAtomText (str, index, endIndex);
      if (indexTemp2 != index) {
        return indexTemp2;
      }
      indexTemp2 = ParseQuotedStringCore (str, index, endIndex);
      return (indexTemp2 != index) ? (indexTemp2) : (index);
    }
    public static int ParseQcontent(String str, int index, int endIndex) {
      if (index < endIndex && ((str.charAt(index) == 33) || (str.charAt(index) >= 35 &&
        str.charAt(index) <= 91) || (str.charAt(index) >= 93 && str.charAt(index) <= 126) ||
        (str.charAt(index) >= 128 && str.charAt(index) <= 65535))) {
        ++index;
      } else if (index + 1 < endIndex && ((str.charAt(index) == 92) && ((str.charAt(index +
        1) >= 33 && str.charAt(index + 1) <= 126) || (str.charAt(index + 1) >= 128 &&
          str.charAt(index + 1) <= 65535)))) {
        index += 2;
      }
      return index;
    }
    public static int ParseQuotedStringCore(String str, int index, int
      endIndex) {
      int indexStart, indexTemp2;
      indexStart = index;
      if (index < endIndex && (str.charAt(index) == 34)) {
        ++index;
      } else {
        return indexStart;
      }
      while (true) {
        indexTemp2 = ParseQcontent (str, index, endIndex);
        if (indexTemp2 != index) {
          index = indexTemp2;
        } else {
          break;
        }
      }
      if (index < endIndex && (str.charAt(index) == 34)) {
        ++index;
      } else {
        return indexStart;
      }
      return index;
    }
  }
